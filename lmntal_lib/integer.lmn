/*
NAME
	Integer module

SYNOPSIS  
	
AUTHOR
	Koji Hara
	Ken Sakurai

HISTORY
	2004/06/04(Fri)

*/

{
module(integer).

/**
 * +
 * 
 */
H='+'(A, B) :- int(A),int(B),A+B=C | H=C.

/**
 * -
 * 
 */
H='-'(A, B) :- int(A),int(B),A-B=C | H=C.

/**
 * *
 *
 */
H='*'(A, B) :- int(A),int(B),A*B=C | H=C.

/**
 * /
 *
 */
H='/'(A, B) :- int(A),int(B),A/B=C | H=C.

/**
 * mod
 *
 */
H='mod'(A, B) :- int(A),int(B),A mod B = C | H=C.

/*
 * abs
 *
 */
H=integer.abs(N) :- int(N),N<0 | H=-1*N.
H=integer.abs(N) :- int(N),N>=0 | H=N.

/*
 * >
 *
 */
H='>'(A, B) :- int(A),int(B),A>B | H=true.
H='>'(A, B) :- int(A),int(B),A=<B | H=false.

/*
 * <
 *
 */
H='<'(A, B) :- int(A),int(B),A>=B | H=false.
H='<'(A, B) :- int(A),int(B),A<B | H=true.

/*
 * >=
 *
 */
H='>='(A, B) :- int(A),int(B),A>=B | H=true.
H='>='(A, B) :- int(A),int(B),A<B | H=false.

/*
 * =<
 *
 */
H='=<'(A, B) :- int(A),int(B),A>B | H=false.
H='=<'(A, B) :- int(A),int(B),A=<B | H=true.

/*
 * ==
 *
 */
H='=='(A, B) :- int(A),int(B),A=B | H=true.
H='=='(A, B) :- int(A),int(B),A-B>0 | H=false.
H='=='(A, B) :- int(A),int(B),A-B<0 | H=false.

/* 
 * !=
 *
 */
H='!='(A, B) :- int(A),int(B),A=B | H=false.
H='!='(A, B) :- int(A),int(B),A-B>0 | H=true.
H='!='(A, B) :- int(A),int(B),A-B<0 | H=true.

/*
 * << AをNビット左シフト
 *
 */
H = '<<'(A, N) :- int(A),int(N),N>0 | H='<<'(A*2,N-1).
H = '<<'(A, 0) :- H=A.

/*
 * >> AをNビット右シフト
 *
 */
H = '>>'(A, N) :- int(A),int(N),N>0 | H='>>'(A/2,N-1).
H = '>>'(A, 0) :- H=A.

/*
 * & ビット演算&
 *
 */
H = '&'(A,B) :- int(A),int(B) | H=[[/*inline*/
 int a = 
  ((IntegerFunctor)me.nthAtom(0).getFunctor()).intValue();
  int b =
  ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
  Atom result = mem.newAtom(new IntegerFunctor(a & b));
  mem.relink(result, 0, me, 2);
  me.nthAtom(0).remove();
  me.nthAtom(1).remove();
  me.remove();
 ]](A,B).

/*
 * | ビット演算|
 *
 */
H = '|'(A,B) :- int(A),int(B) | H=[[/*inline*/
 int a = 
  ((IntegerFunctor)me.nthAtom(0).getFunctor()).intValue();
  int b =
  ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
  Atom result = mem.newAtom(new IntegerFunctor(a | b));
  mem.relink(result, 0, me, 2);
  me.nthAtom(0).remove();
  me.nthAtom(1).remove();
  me.remove();
 ]](A,B).

/*
 * ^ ビット演算^
 *
 */
H = '^'(A,B) :- int(A),int(B) | H=[[/*inline*/
 int a = 
  ((IntegerFunctor)me.nthAtom(0).getFunctor()).intValue();
  int b =
  ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
  Atom result = mem.newAtom(new IntegerFunctor(a ^ b));
  mem.relink(result, 0, me, 2);
  me.nthAtom(0).remove();
  me.nthAtom(1).remove();
  me.remove();
 ]](A,B).

  
/*
 * power AのN準E
 *
 */
H = integer.power(A, N) :- int(A),int(N) | H=[[/*inline*/
  int a = 
  ((IntegerFunctor)me.nthAtom(0).getFunctor()).intValue();
  int n =
  ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
  int r = 1;  
  for(int i=n;i>0;i--) r*=a;
  Atom result = mem.newAtom(new IntegerFunctor(r));
  mem.relink(result, 0, me, 2);
  me.nthAtom(0).remove();
  me.nthAtom(1).remove();
  me.remove();
 ]](A,N).

/*
 * rnd(N) 0からN-1の整数をランダムで返す。
 *
 *
 */
H = integer.rnd(N) :- int(N) | H=[[/*inline*/
  int n = 
  ((IntegerFunctor)me.nthAtom(0).getFunctor()).intValue();
  Random rand = new Random();
  int rn = (int)(n*Math.random());
  Atom result = mem.newAtom(new IntegerFunctor(rn));
  mem.relink(result, 0, me, 1);
  me.nthAtom(0).remove();
  me.remove();
  ]](N).
  
}.

/*
NAME
	Prolog-like Variable module

SYNOPSIS

	var.use.
	area = var(width) * var(height).
	var.bind(width, 3).
	var.unify(width, height).
	
	%% result is area(9).
	
	Able to bind some ground process to some variable identified by ground atom.
	Able to unify 2 some variables.
	Unable to rebind.

AUTHOR
	Koji Hara

HISTORY
	2006/02/09(Thu)

*/

{
module(var).

VarDeclare @@
H=var(_GName) :- H=v({name=_GName}).

VarUnify @@
{name=_GName0, $e0}, {name=_GName1, $e1} :- _GName0=_GName1 | {name=_GName0, $e0, $e1}.

VarBind @@
var.bind(_GName0, _GValue), {name=_GName1, $e} :- {name=_GName1, value=_GValue, $e}.

VarBindEach @@
H=v({name=_GName1, value=_GValue, $e}) :- H=_GValue, {name=_GName1, value=_GValue, $e}.

VarUnify @@
var.unify(_GName0, _GName1), {name=_GName2, $e0}, {name=_GName3, $e1} :- _GName0=_GName2, _GName1=_GName3 |
{name=_GName3, $e0, $e1}.

}.

/*
NAME
	WikiParser module

SYNOPSIS  
	wiki 記法を html に直す
	
AUTHOR
	Atsuyuki Inui

HISTORY
	2006/07/25(Tue) italic, 整形済みテキスト内はインライン要素を無効
	2006/07/24(Mon) 水平線
	2006/07/23(Sun) <ul>, <ol>, リンク
	2004/07/22(Sat)
	
*/

//テスト用コード
/*a=wikiparser.parse([:
*見出し1
**見出し2
***見出し3
-箇条書き1
-箇条書き2
-[[リンク]]
-----
 整形済みテキスト
 ここも整形済みテキスト

ここは段落
ここも段落

----
+番号つき箇条書き1
+番号つき箇条書き2
:]).*/

{
module(wikiparser).

/**
 * String -> String
 */
//TODO ブロック要素とインライン要素の解析を分ける
//TODO HTML の構造を返すようにする．htmlToString も必要になる
H=wikiparser.parse(S) :- string(S) | H=seq.run({s0=list.map(pre, string.split("\r*\n", S))}, [
	{
	if.use.
	L=[pre, S] :- L=pre(S).
	//インライン要素の前に整形済みテキストをやる
	L=pre(S) :- string(S) |
		L=if(string.match(S, "^[ ]"), string.replace(S, "^[ ](.*)", "<pre>$1</pre>"), s(S)).
	////インライン要素は全部試す
	//取消線
	L=s(S) :- string(S) |
		L=i(string.replace(S, "%%(.*)%%", "<s>$1</s>")).
	//斜体
	L=i(S) :- string(S) |
		L=strong(string.replace(S, "'''(.*)'''", "<i>$1</i>")).
	//強調
	L=strong(S) :- string(S) |
		L=external_link1(string.replace(S, "''(.*)''", "<strong>$1</strong>")).
	//外部リンク（名前あり）
	L=external_link1(S) :- string(S) |
		L=external_link2(string.replace(S, "\\[\\[(.*):(http://.*)\\]\\]", "<a href=$2>$1</a>")).
	//外部リンク（名前なし）
	L=external_link2(S) :- string(S) |
		L=internal_link(string.replace(S, "\\[\\[(http://.*)\\]\\]", "<a href=$1>$1</a>")).
	//内部リンク
	L=internal_link(S) :- string(S) |
		L=hr(string.replace(S, "\\[\\[(.*)\\]\\]", "<a href=lmnwiki.cgi?cmd=view&name=$1>$1</a>")).		
	////ブロック要素はどれか１つ反応したら終わり
	//水平線
	L=hr(S) :- string(S) |
		L=if(string.match(S, "^\\-{4,}"), string.replace(S, "^\\-+", "<hr>"), section3(S)).
	//見出し
	L=section3(S) :- string(S) |
		L=if(string.match(S, "^\\*{3}"), string.replace(S, "^\\*{3}(.*)", "<h4>$1</h4>"), section2(S)).
	L=section2(S) :- string(S) |
		L=if(string.match(S, "^\\*{2}"), string.replace(S, "^\\*{2}(.*)", "<h3>$1</h3>"), section1(S)).
	L=section1(S) :- string(S) |
		L=if(string.match(S, "^\\*{1}"), string.replace(S, "^\\*{1}(.*)", "<h2>$1</h2>"), ul3(S)).
	//箇条書き
	L=ul3(S) :- string(S) |
		L=if(string.match(S, "^[-]{3}"), string.replace(S, "^[-]{3}(.*)", "<ul><ul><ul><li>$1</li></ul></ul></ul>"), ul2(S)).
	L=ul2(S) :- string(S) |
		L=if(string.match(S, "^[-]{2}"), string.replace(S, "^[-]{2}(.*)", "<ul><ul><li>$1</li></ul></ul>"), ul1(S)).
	L=ul1(S) :- string(S) |
		L=if(string.match(S, "^[-]{1}"), string.replace(S, "^[-]{1}(.*)", "<ul><li>$1</li></ul>"), ol(S)).
	//番号つき箇条書き
	L=ol(S) :- string(S) |
		L=if(string.match(S, "^[+]"), string.replace(S, "^[+](.*)", "<ol><li>$1</li></ol>"), p(S)).
	//段落
	L=p(S) :- string(S), S \= "" |
		L=string.join("", ["<p>", S, "</p>"]).
	L=p(S) :- string(S), S == "" |
		L=S.
	},
	{
	s0(Z) :- s3=string.join("\n", Z).
	s3(S) :- s4=string.replace(S, "</pre>\n<pre>", "\n").
	s4(S) :- s5=string.replace(S, "</p>\n<p>", "\n").
	s5(S) :- s6=string.replace(S, "</ul>\n<ul>", "\n").
	s6(S) :- ret=string.replace(S, "</ol>\n<ol>", "\n").
	}
	]).
X={ret(S), $p[], @p}/ :- string(S) | X=S.
H=seq.run(S, []) :- H=S.
}.

/*
NAME
	Shift module

SYNOPSIS  
	
AUTHOR
	Koji Hara
	Ken Sakurai
	Atsuyuki Inui

HISTORY
	2006/07/02(Sun) integer.lmn からビット演算のルールを持って来た
					'~' を追加

*/

{
module(bit).

/*
 * & ビット演算&
 *
 */
H = '&'(A,B) :- int(A),int(B) | H=[:/*inline*/
 int a = 
  ((IntegerFunctor)me.nthAtom(0).getFunctor()).intValue();
  int b =
  ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
  Atom result = mem.newAtom(new IntegerFunctor(a & b));
  mem.relink(result, 0, me, 2);
  me.nthAtom(0).remove();
  me.nthAtom(1).remove();
  me.remove();
 :](A,B).

/*
 * | ビット演算|
 *
 */
H = '|'(A,B) :- int(A),int(B) | H=[:/*inline*/
 int a = 
  ((IntegerFunctor)me.nthAtom(0).getFunctor()).intValue();
  int b =
  ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
  Atom result = mem.newAtom(new IntegerFunctor(a | b));
  mem.relink(result, 0, me, 2);
  me.nthAtom(0).remove();
  me.nthAtom(1).remove();
  me.remove();
 :](A,B).

/*
 * ^ ビット演算^
 *
 */
H = '^'(A,B) :- int(A),int(B) | H=[:/*inline*/
 int a = 
  ((IntegerFunctor)me.nthAtom(0).getFunctor()).intValue();
  int b =
  ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
  Atom result = mem.newAtom(new IntegerFunctor(a ^ b));
  mem.relink(result, 0, me, 2);
  me.nthAtom(0).remove();
  me.nthAtom(1).remove();
  me.remove();
 :](A,B).

/*
 * ~ ビット演算~
 *
 */
H = '~'(A) :- int(A) | H=[:/*inline*/
 int a = 
  ((IntegerFunctor)me.nthAtom(0).getFunctor()).intValue();
  Atom result = mem.newAtom(new IntegerFunctor(~a));
  mem.relink(result, 0, me, 1);
  me.nthAtom(0).remove();
  me.remove();
 :](A).
}.
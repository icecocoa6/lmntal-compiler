/*
NAME
	Sequential module

SYNOPSIS
	r=seq.run({a}, [{a:-b}, {b:-c. a:-never.}, {c:-d. b:-never.}]).
	===>
	r(_60), {d, '+'(_60), @605, @604}, @607, @608
	
DESCRIPTION
	Applies rules sequentially from left to right.
	Each element of the list is a cell containing rules.
	When reaction terminates, the rules in the next cell are inserted into
	the data cell.

	//temination added (2006/06/28 kudo)

AUTHOR
	Sakurai, Hara

HISTORY
	2004/06/11(Fri)

*/
{
module(seq). 

/**
 * seq.run : Membrane(data) -> List of Membranes(rules) -> Membrane(data)
 * 
 * stops execution when stop_seq/0 appears (2006/06/28)
 */
H=seq.run({$p, @r}/, [ {$z, @p} | Rest ]) :- \+($p = (stop_seq, $pp))|
	H=seq.run({$p, $z, @p}, Rest).

H=seq.run({$p, stop_seq, @r}/, Rest) :- H=cancelled({$p}), cancelled_seq=Rest.

H=seq.run({@p. $p.}/, []) :- H={$p}.

// Unabbreviated form:
// H=seq.run(Data, [Cur|Rest]), {+Cur. @p}, {+Data, $p, @r}/
//     :- H=seq.run(Data, Rest), {+Data, $p, @p}.
// H=seq.run(Data, []), {+Data, @p, $p} :- H=Data, {+Data, @p, $p}.

}

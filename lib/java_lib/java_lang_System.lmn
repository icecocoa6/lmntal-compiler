//-----------------------------------------------------
// The following code was generated by class2module.pl 
// Thu Nov 30 12:24:13 2006
//-----------------------------------------------------
{module(java_lang_System).
H=java_lang_System.in :- H=[:/*inline*/
	java.io.InputStream r = java.lang.System.in;
	Atom res = mem.newAtom(new ObjectFunctor(r));
	mem.relink(res, 0, me, 0);
	me.remove();
	:],java_io_InputStream.use,(java_io_InputStream.use:-()).

H=java_lang_System.out :- H=[:/*inline*/
	java.io.PrintStream r = java.lang.System.out;
	Atom res = mem.newAtom(new ObjectFunctor(r));
	mem.relink(res, 0, me, 0);
	me.remove();
	:],java_io_PrintStream.use,(java_io_PrintStream.use:-()).

H=java_lang_System.err :- H=[:/*inline*/
	java.io.PrintStream r = java.lang.System.err;
	Atom res = mem.newAtom(new ObjectFunctor(r));
	mem.relink(res, 0, me, 0);
	me.remove();
	:],java_io_PrintStream.use,(java_io_PrintStream.use:-()).

java_lang_System.setIn(_0) :- class(_0,"java.io.InputStream") | [:/*inline*/
	java.io.InputStream v0 = (java.io.InputStream)me.nthAtom(0).getFunctor().getValue();
	try {
		java.lang.System.setIn(v0);
	} catch (Exception e) {
		//ここにはこないと思う
		System.err.println(e);
	}
	me.nthAtom(0).remove();
	me.remove();
	:](_0).

java_lang_System.setOut(_0) :- class(_0,"java.io.PrintStream") | [:/*inline*/
	java.io.PrintStream v0 = (java.io.PrintStream)me.nthAtom(0).getFunctor().getValue();
	try {
		java.lang.System.setOut(v0);
	} catch (Exception e) {
		//ここにはこないと思う
		System.err.println(e);
	}
	me.nthAtom(0).remove();
	me.remove();
	:](_0).

java_lang_System.setErr(_0) :- class(_0,"java.io.PrintStream") | [:/*inline*/
	java.io.PrintStream v0 = (java.io.PrintStream)me.nthAtom(0).getFunctor().getValue();
	try {
		java.lang.System.setErr(v0);
	} catch (Exception e) {
		//ここにはこないと思う
		System.err.println(e);
	}
	me.nthAtom(0).remove();
	me.remove();
	:](_0).

H=java_lang_System.inheritedChannel() :- H=[:/*inline*/
	try {
		java.nio.channels.Channel r = java.lang.System.inheritedChannel();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 0);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 0);
	}
	me.remove();
	:]().

java_lang_System.setSecurityManager(_0) :- class(_0,"java.lang.SecurityManager") | [:/*inline*/
	java.lang.SecurityManager v0 = (java.lang.SecurityManager)me.nthAtom(0).getFunctor().getValue();
	try {
		java.lang.System.setSecurityManager(v0);
	} catch (Exception e) {
		//ここにはこないと思う
		System.err.println(e);
	}
	me.nthAtom(0).remove();
	me.remove();
	:](_0).

H=java_lang_System.getSecurityManager() :- H=[:/*inline*/
	try {
		java.lang.SecurityManager r = java.lang.System.getSecurityManager();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 0);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 0);
	}
	me.remove();
	:]().

H=java_lang_System.getProperties() :- H=[:/*inline*/
	try {
		java.util.Properties r = java.lang.System.getProperties();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 0);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 0);
	}
	me.remove();
	:]().

java_lang_System.setProperties(_0) :- class(_0,"java.util.Properties") | [:/*inline*/
	java.util.Properties v0 = (java.util.Properties)me.nthAtom(0).getFunctor().getValue();
	try {
		java.lang.System.setProperties(v0);
	} catch (Exception e) {
		//ここにはこないと思う
		System.err.println(e);
	}
	me.nthAtom(0).remove();
	me.remove();
	:](_0).

H=java_lang_System.getProperty(_0) :- string(_0) | H=[:/*inline*/
	java.lang.String v0 = ((StringFunctor)me.nthAtom(0).getFunctor()).stringValue();
	try {
		java.lang.String r = java.lang.System.getProperty(v0);
		Atom res = mem.newAtom(new StringFunctor(r));
		mem.relink(res, 0, me, 1);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 1);
	}
	me.nthAtom(0).remove();
	me.remove();
	:](_0).

H=java_lang_System.getProperty(_0,_1) :- string(_0),string(_1) | H=[:/*inline*/
	java.lang.String v0 = ((StringFunctor)me.nthAtom(0).getFunctor()).stringValue();
	java.lang.String v1 = ((StringFunctor)me.nthAtom(1).getFunctor()).stringValue();
	try {
		java.lang.String r = java.lang.System.getProperty(v0,v1);
		Atom res = mem.newAtom(new StringFunctor(r));
		mem.relink(res, 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 2);
	}
	me.nthAtom(0).remove();
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=java_lang_System.setProperty(_0,_1) :- string(_0),string(_1) | H=[:/*inline*/
	java.lang.String v0 = ((StringFunctor)me.nthAtom(0).getFunctor()).stringValue();
	java.lang.String v1 = ((StringFunctor)me.nthAtom(1).getFunctor()).stringValue();
	try {
		java.lang.String r = java.lang.System.setProperty(v0,v1);
		Atom res = mem.newAtom(new StringFunctor(r));
		mem.relink(res, 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 2);
	}
	me.nthAtom(0).remove();
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=java_lang_System.clearProperty(_0) :- string(_0) | H=[:/*inline*/
	java.lang.String v0 = ((StringFunctor)me.nthAtom(0).getFunctor()).stringValue();
	try {
		java.lang.String r = java.lang.System.clearProperty(v0);
		Atom res = mem.newAtom(new StringFunctor(r));
		mem.relink(res, 0, me, 1);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 1);
	}
	me.nthAtom(0).remove();
	me.remove();
	:](_0).

H=java_lang_System.getenv(_0) :- string(_0) | H=[:/*inline*/
	java.lang.String v0 = ((StringFunctor)me.nthAtom(0).getFunctor()).stringValue();
	try {
		java.lang.String r = java.lang.System.getenv(v0);
		Atom res = mem.newAtom(new StringFunctor(r));
		mem.relink(res, 0, me, 1);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 1);
	}
	me.nthAtom(0).remove();
	me.remove();
	:](_0).

H=java_lang_System.getenv() :- H=[:/*inline*/
	try {
		java.util.Map r = java.lang.System.getenv();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 0);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 0);
	}
	me.remove();
	:]().

java_lang_System.exit(_0) :- int(_0) | [:/*inline*/
	int v0 = ((IntegerFunctor)me.nthAtom(0).getFunctor()).intValue();
	try {
		java.lang.System.exit(v0);
	} catch (Exception e) {
		//ここにはこないと思う
		System.err.println(e);
	}
	me.nthAtom(0).remove();
	me.remove();
	:](_0).

java_lang_System.gc() :- [:/*inline*/
	try {
		java.lang.System.gc();
	} catch (Exception e) {
		//ここにはこないと思う
		System.err.println(e);
	}
	me.remove();
	:]().

java_lang_System.runFinalization() :- [:/*inline*/
	try {
		java.lang.System.runFinalization();
	} catch (Exception e) {
		//ここにはこないと思う
		System.err.println(e);
	}
	me.remove();
	:]().

java_lang_System.runFinalizersOnExit(_0) :- [:/*inline*/
	boolean v0 = ((SymbolFunctor)me.nthAtom(0).getFunctor()).getName().equals("true")?true:false;
	try {
		java.lang.System.runFinalizersOnExit(v0);
	} catch (Exception e) {
		//ここにはこないと思う
		System.err.println(e);
	}
	me.nthAtom(0).remove();
	me.remove();
	:](_0).

java_lang_System.load(_0) :- string(_0) | [:/*inline*/
	java.lang.String v0 = ((StringFunctor)me.nthAtom(0).getFunctor()).stringValue();
	try {
		java.lang.System.load(v0);
	} catch (Exception e) {
		//ここにはこないと思う
		System.err.println(e);
	}
	me.nthAtom(0).remove();
	me.remove();
	:](_0).

java_lang_System.loadLibrary(_0) :- string(_0) | [:/*inline*/
	java.lang.String v0 = ((StringFunctor)me.nthAtom(0).getFunctor()).stringValue();
	try {
		java.lang.System.loadLibrary(v0);
	} catch (Exception e) {
		//ここにはこないと思う
		System.err.println(e);
	}
	me.nthAtom(0).remove();
	me.remove();
	:](_0).

}.

//-----------------------------------------------------
// The following code was generated by class2module.pl 
// Thu Nov 30 12:24:45 2006
//-----------------------------------------------------
{module(javax_swing_JTextField).
H=javax_swing_JTextField.notifyaction :- H=[:/*inline*/
	java.lang.String r = javax.swing.JTextField.notifyAction;
	Atom res = mem.newAtom(new StringFunctor(r));
	mem.relink(res, 0, me, 0);
	me.remove();
	:],java_lang_String.use,(java_lang_String.use:-()).

H=javax_swing_JTextField.new() :- H=[:/*inline*/
	try {
		javax.swing.JTextField r = new javax.swing.JTextField();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 0);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 0);
	}
	me.remove();
	:](),javax_swing_text_JTextComponent.use,(javax_swing_text_JTextComponent.use:-()),javax_swing_JComponent.use,(javax_swing_JComponent.use:-()),java_awt_Container.use,(java_awt_Container.use:-()),java_awt_Component.use,(java_awt_Component.use:-()).

H=javax_swing_JTextField.new(_0) :- string(_0) | H=[:/*inline*/
	java.lang.String v0 = ((StringFunctor)me.nthAtom(0).getFunctor()).stringValue();
	try {
		javax.swing.JTextField r = new javax.swing.JTextField(v0);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 1);
	}
	me.nthAtom(0).remove();
	me.remove();
	:](_0),javax_swing_text_JTextComponent.use,(javax_swing_text_JTextComponent.use:-()),javax_swing_JComponent.use,(javax_swing_JComponent.use:-()),java_awt_Container.use,(java_awt_Container.use:-()),java_awt_Component.use,(java_awt_Component.use:-()).

H=javax_swing_JTextField.new(_0) :- int(_0) | H=[:/*inline*/
	int v0 = ((IntegerFunctor)me.nthAtom(0).getFunctor()).intValue();
	try {
		javax.swing.JTextField r = new javax.swing.JTextField(v0);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 1);
	}
	me.nthAtom(0).remove();
	me.remove();
	:](_0),javax_swing_text_JTextComponent.use,(javax_swing_text_JTextComponent.use:-()),javax_swing_JComponent.use,(javax_swing_JComponent.use:-()),java_awt_Container.use,(java_awt_Container.use:-()),java_awt_Component.use,(java_awt_Component.use:-()).

H=javax_swing_JTextField.new(_0,_1) :- string(_0),int(_1) | H=[:/*inline*/
	java.lang.String v0 = ((StringFunctor)me.nthAtom(0).getFunctor()).stringValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		javax.swing.JTextField r = new javax.swing.JTextField(v0,v1);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 2);
	}
	me.nthAtom(0).remove();
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1),javax_swing_text_JTextComponent.use,(javax_swing_text_JTextComponent.use:-()),javax_swing_JComponent.use,(javax_swing_JComponent.use:-()),java_awt_Container.use,(java_awt_Container.use:-()),java_awt_Component.use,(java_awt_Component.use:-()).

H=javax_swing_JTextField.new(_0,_1,_2) :- class(_0,"javax.swing.text.Document"),string(_1),int(_2) | H=[:/*inline*/
	javax.swing.text.Document v0 = (javax.swing.text.Document)me.nthAtom(0).getFunctor().getValue();
	java.lang.String v1 = ((StringFunctor)me.nthAtom(1).getFunctor()).stringValue();
	int v2 = ((IntegerFunctor)me.nthAtom(2).getFunctor()).intValue();
	try {
		javax.swing.JTextField r = new javax.swing.JTextField(v0,v1,v2);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 3);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 3);
	}
	me.nthAtom(0).remove();
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.remove();
	:](_0,_1,_2),javax_swing_text_JTextComponent.use,(javax_swing_text_JTextComponent.use:-()),javax_swing_JComponent.use,(javax_swing_JComponent.use:-()),java_awt_Container.use,(java_awt_Container.use:-()),java_awt_Component.use,(java_awt_Component.use:-()).

H=getUIClassID(_0,_1) :- class(_0,"javax.swing.JTextField") | H=[:/*inline*/
	javax.swing.JTextField v0 = (javax.swing.JTextField)me.nthAtom(0).getFunctor().getValue();
	try {
		java.lang.String r = v0.getUIClassID();
		Atom res = mem.newAtom(new StringFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),java_lang_String.use,(java_lang_String.use:-()).

H=setDocument(_0,_1) :- class(_0,"javax.swing.JTextField"),class(_1,"javax.swing.text.Document") | H=[:/*inline*/
	javax.swing.JTextField v0 = (javax.swing.JTextField)me.nthAtom(0).getFunctor().getValue();
	javax.swing.text.Document v1 = (javax.swing.text.Document)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setDocument(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=isValidateRoot(_0,_1) :- class(_0,"javax.swing.JTextField") | H=[:/*inline*/
	javax.swing.JTextField v0 = (javax.swing.JTextField)me.nthAtom(0).getFunctor().getValue();
	try {
		boolean r = v0.isValidateRoot();
		Atom res = mem.newAtom(new SymbolFunctor(r?"true":"false", 1));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=getHorizontalAlignment(_0,_1) :- class(_0,"javax.swing.JTextField") | H=[:/*inline*/
	javax.swing.JTextField v0 = (javax.swing.JTextField)me.nthAtom(0).getFunctor().getValue();
	try {
		int r = v0.getHorizontalAlignment();
		Atom res = mem.newAtom(new IntegerFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setHorizontalAlignment(_0,_1) :- class(_0,"javax.swing.JTextField"),int(_1) | H=[:/*inline*/
	javax.swing.JTextField v0 = (javax.swing.JTextField)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		v0.setHorizontalAlignment(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getColumns(_0,_1) :- class(_0,"javax.swing.JTextField") | H=[:/*inline*/
	javax.swing.JTextField v0 = (javax.swing.JTextField)me.nthAtom(0).getFunctor().getValue();
	try {
		int r = v0.getColumns();
		Atom res = mem.newAtom(new IntegerFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setColumns(_0,_1) :- class(_0,"javax.swing.JTextField"),int(_1) | H=[:/*inline*/
	javax.swing.JTextField v0 = (javax.swing.JTextField)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		v0.setColumns(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getPreferredSize(_0,_1) :- class(_0,"javax.swing.JTextField") | H=[:/*inline*/
	javax.swing.JTextField v0 = (javax.swing.JTextField)me.nthAtom(0).getFunctor().getValue();
	try {
		java.awt.Dimension r = v0.getPreferredSize();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),java_awt_Dimension.use,(java_awt_Dimension.use:-()).

H=setFont(_0,_1) :- class(_0,"javax.swing.JTextField"),class(_1,"java.awt.Font") | H=[:/*inline*/
	javax.swing.JTextField v0 = (javax.swing.JTextField)me.nthAtom(0).getFunctor().getValue();
	java.awt.Font v1 = (java.awt.Font)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setFont(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=addActionListener(_0,_1) :- class(_0,"javax.swing.JTextField"),class(_1,"java.awt.event.ActionListener") | H=[:/*inline*/
	javax.swing.JTextField v0 = (javax.swing.JTextField)me.nthAtom(0).getFunctor().getValue();
	java.awt.event.ActionListener v1 = (java.awt.event.ActionListener)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.addActionListener(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=removeActionListener(_0,_1) :- class(_0,"javax.swing.JTextField"),class(_1,"java.awt.event.ActionListener") | H=[:/*inline*/
	javax.swing.JTextField v0 = (javax.swing.JTextField)me.nthAtom(0).getFunctor().getValue();
	java.awt.event.ActionListener v1 = (java.awt.event.ActionListener)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.removeActionListener(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getActionListeners(_0,_1) :- class(_0,"javax.swing.JTextField") | H=[:/*inline*/
	javax.swing.JTextField v0 = (javax.swing.JTextField)me.nthAtom(0).getFunctor().getValue();
	try {
		java.awt.event.ActionListener[] r = v0.getActionListeners();
		runtime.Link l = new runtime.Link(me.nthAtom(1), 0);
		util.Util.makeList(l, java.util.Arrays.asList(r));
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setActionCommand(_0,_1) :- class(_0,"javax.swing.JTextField"),string(_1) | H=[:/*inline*/
	javax.swing.JTextField v0 = (javax.swing.JTextField)me.nthAtom(0).getFunctor().getValue();
	java.lang.String v1 = ((StringFunctor)me.nthAtom(1).getFunctor()).stringValue();
	try {
		v0.setActionCommand(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=setAction(_0,_1) :- class(_0,"javax.swing.JTextField"),class(_1,"javax.swing.Action") | H=[:/*inline*/
	javax.swing.JTextField v0 = (javax.swing.JTextField)me.nthAtom(0).getFunctor().getValue();
	javax.swing.Action v1 = (javax.swing.Action)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setAction(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getAction(_0,_1) :- class(_0,"javax.swing.JTextField") | H=[:/*inline*/
	javax.swing.JTextField v0 = (javax.swing.JTextField)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.Action r = v0.getAction();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),javax_swing_Action.use,(javax_swing_Action.use:-()).

H=getActions(_0,_1) :- class(_0,"javax.swing.JTextField") | H=[:/*inline*/
	javax.swing.JTextField v0 = (javax.swing.JTextField)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.Action[] r = v0.getActions();
		runtime.Link l = new runtime.Link(me.nthAtom(1), 0);
		util.Util.makeList(l, java.util.Arrays.asList(r));
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=postActionEvent(_0) :- class(_0,"javax.swing.JTextField") | H=[:/*inline*/
	javax.swing.JTextField v0 = (javax.swing.JTextField)me.nthAtom(0).getFunctor().getValue();
	try {
		v0.postActionEvent();
		mem.relink(me.nthAtom(0), 0, me, 1);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 1);
	}
	me.remove();
	:](_0).

H=getHorizontalVisibility(_0,_1) :- class(_0,"javax.swing.JTextField") | H=[:/*inline*/
	javax.swing.JTextField v0 = (javax.swing.JTextField)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.BoundedRangeModel r = v0.getHorizontalVisibility();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),javax_swing_BoundedRangeModel.use,(javax_swing_BoundedRangeModel.use:-()).

H=getScrollOffset(_0,_1) :- class(_0,"javax.swing.JTextField") | H=[:/*inline*/
	javax.swing.JTextField v0 = (javax.swing.JTextField)me.nthAtom(0).getFunctor().getValue();
	try {
		int r = v0.getScrollOffset();
		Atom res = mem.newAtom(new IntegerFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setScrollOffset(_0,_1) :- class(_0,"javax.swing.JTextField"),int(_1) | H=[:/*inline*/
	javax.swing.JTextField v0 = (javax.swing.JTextField)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		v0.setScrollOffset(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=scrollRectToVisible(_0,_1) :- class(_0,"javax.swing.JTextField"),class(_1,"java.awt.Rectangle") | H=[:/*inline*/
	javax.swing.JTextField v0 = (javax.swing.JTextField)me.nthAtom(0).getFunctor().getValue();
	java.awt.Rectangle v1 = (java.awt.Rectangle)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.scrollRectToVisible(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getAccessibleContext(_0,_1) :- class(_0,"javax.swing.JTextField") | H=[:/*inline*/
	javax.swing.JTextField v0 = (javax.swing.JTextField)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.accessibility.AccessibleContext r = v0.getAccessibleContext();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),javax_accessibility_AccessibleContext.use,(javax_accessibility_AccessibleContext.use:-()).

}.

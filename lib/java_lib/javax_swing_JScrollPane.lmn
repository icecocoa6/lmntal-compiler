//-----------------------------------------------------
// The following code was generated by javalmn
// Tue Nov 21 22:06:22 2006
//-----------------------------------------------------
{module(javax_swing_JScrollPane).
H=javax_swing_JScrollPane.new(_0,_1,_2) :- class(_0,"java.awt.Component"),int(_1),int(_2) | H=[:/*inline*/
	java.awt.Component v0 = (java.awt.Component)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	int v2 = ((IntegerFunctor)me.nthAtom(2).getFunctor()).intValue();
	try {
		javax.swing.JScrollPane r = new javax.swing.JScrollPane(v0,v1,v2);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 3);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 3);
	}
	me.nthAtom(0).remove();
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.remove();
	:](_0,_1,_2),javax_swing_JComponent.use,(javax_swing_JComponent.use:-()),java_awt_Container.use,(java_awt_Container.use:-()),java_awt_Component.use,(java_awt_Component.use:-()).

H=javax_swing_JScrollPane.new(_0) :- class(_0,"java.awt.Component") | H=[:/*inline*/
	java.awt.Component v0 = (java.awt.Component)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.JScrollPane r = new javax.swing.JScrollPane(v0);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 1);
	}
	me.nthAtom(0).remove();
	me.remove();
	:](_0),javax_swing_JComponent.use,(javax_swing_JComponent.use:-()),java_awt_Container.use,(java_awt_Container.use:-()),java_awt_Component.use,(java_awt_Component.use:-()).

H=javax_swing_JScrollPane.new(_0,_1) :- int(_0),int(_1) | H=[:/*inline*/
	int v0 = ((IntegerFunctor)me.nthAtom(0).getFunctor()).intValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		javax.swing.JScrollPane r = new javax.swing.JScrollPane(v0,v1);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 2);
	}
	me.nthAtom(0).remove();
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1),javax_swing_JComponent.use,(javax_swing_JComponent.use:-()),java_awt_Container.use,(java_awt_Container.use:-()),java_awt_Component.use,(java_awt_Component.use:-()).

H=javax_swing_JScrollPane.new() :- H=[:/*inline*/
	try {
		javax.swing.JScrollPane r = new javax.swing.JScrollPane();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 0);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 0);
	}
	me.remove();
	:](),javax_swing_JComponent.use,(javax_swing_JComponent.use:-()),java_awt_Container.use,(java_awt_Container.use:-()),java_awt_Component.use,(java_awt_Component.use:-()).

H=getUI(_0,_1) :- class(_0,"javax.swing.JScrollPane") | H=[:/*inline*/
	javax.swing.JScrollPane v0 = (javax.swing.JScrollPane)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.plaf.ScrollPaneUI r = v0.getUI();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setUI(_0,_1) :- class(_0,"javax.swing.JScrollPane"),class(_1,"javax.swing.plaf.ScrollPaneUI") | H=[:/*inline*/
	javax.swing.JScrollPane v0 = (javax.swing.JScrollPane)me.nthAtom(0).getFunctor().getValue();
	javax.swing.plaf.ScrollPaneUI v1 = (javax.swing.plaf.ScrollPaneUI)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setUI(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=updateUI(_0) :- class(_0,"javax.swing.JScrollPane") | H=[:/*inline*/
	javax.swing.JScrollPane v0 = (javax.swing.JScrollPane)me.nthAtom(0).getFunctor().getValue();
	try {
		v0.updateUI();
		mem.relink(me.nthAtom(0), 0, me, 1);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 1);
	}
	me.remove();
	:](_0).

H=getUIClassID(_0,_1) :- class(_0,"javax.swing.JScrollPane") | H=[:/*inline*/
	javax.swing.JScrollPane v0 = (javax.swing.JScrollPane)me.nthAtom(0).getFunctor().getValue();
	try {
		java.lang.String r = v0.getUIClassID();
		Atom res = mem.newAtom(new StringFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setLayout(_0,_1) :- class(_0,"javax.swing.JScrollPane"),class(_1,"java.awt.LayoutManager") | H=[:/*inline*/
	javax.swing.JScrollPane v0 = (javax.swing.JScrollPane)me.nthAtom(0).getFunctor().getValue();
	java.awt.LayoutManager v1 = (java.awt.LayoutManager)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setLayout(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=isValidateRoot(_0,_1) :- class(_0,"javax.swing.JScrollPane") | H=[:/*inline*/
	javax.swing.JScrollPane v0 = (javax.swing.JScrollPane)me.nthAtom(0).getFunctor().getValue();
	try {
		boolean r = v0.isValidateRoot();
		Atom res = mem.newAtom(new SymbolFunctor(r?"true":"false", 1));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=getVerticalScrollBarPolicy(_0,_1) :- class(_0,"javax.swing.JScrollPane") | H=[:/*inline*/
	javax.swing.JScrollPane v0 = (javax.swing.JScrollPane)me.nthAtom(0).getFunctor().getValue();
	try {
		int r = v0.getVerticalScrollBarPolicy();
		Atom res = mem.newAtom(new IntegerFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setVerticalScrollBarPolicy(_0,_1) :- class(_0,"javax.swing.JScrollPane"),int(_1) | H=[:/*inline*/
	javax.swing.JScrollPane v0 = (javax.swing.JScrollPane)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		v0.setVerticalScrollBarPolicy(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getHorizontalScrollBarPolicy(_0,_1) :- class(_0,"javax.swing.JScrollPane") | H=[:/*inline*/
	javax.swing.JScrollPane v0 = (javax.swing.JScrollPane)me.nthAtom(0).getFunctor().getValue();
	try {
		int r = v0.getHorizontalScrollBarPolicy();
		Atom res = mem.newAtom(new IntegerFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setHorizontalScrollBarPolicy(_0,_1) :- class(_0,"javax.swing.JScrollPane"),int(_1) | H=[:/*inline*/
	javax.swing.JScrollPane v0 = (javax.swing.JScrollPane)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		v0.setHorizontalScrollBarPolicy(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getViewportBorder(_0,_1) :- class(_0,"javax.swing.JScrollPane") | H=[:/*inline*/
	javax.swing.JScrollPane v0 = (javax.swing.JScrollPane)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.border.Border r = v0.getViewportBorder();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setViewportBorder(_0,_1) :- class(_0,"javax.swing.JScrollPane"),class(_1,"javax.swing.border.Border") | H=[:/*inline*/
	javax.swing.JScrollPane v0 = (javax.swing.JScrollPane)me.nthAtom(0).getFunctor().getValue();
	javax.swing.border.Border v1 = (javax.swing.border.Border)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setViewportBorder(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getViewportBorderBounds(_0,_1) :- class(_0,"javax.swing.JScrollPane") | H=[:/*inline*/
	javax.swing.JScrollPane v0 = (javax.swing.JScrollPane)me.nthAtom(0).getFunctor().getValue();
	try {
		java.awt.Rectangle r = v0.getViewportBorderBounds();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=createHorizontalScrollBar(_0,_1) :- class(_0,"javax.swing.JScrollPane") | H=[:/*inline*/
	javax.swing.JScrollPane v0 = (javax.swing.JScrollPane)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.JScrollBar r = v0.createHorizontalScrollBar();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=getHorizontalScrollBar(_0,_1) :- class(_0,"javax.swing.JScrollPane") | H=[:/*inline*/
	javax.swing.JScrollPane v0 = (javax.swing.JScrollPane)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.JScrollBar r = v0.getHorizontalScrollBar();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setHorizontalScrollBar(_0,_1) :- class(_0,"javax.swing.JScrollPane"),class(_1,"javax.swing.JScrollBar") | H=[:/*inline*/
	javax.swing.JScrollPane v0 = (javax.swing.JScrollPane)me.nthAtom(0).getFunctor().getValue();
	javax.swing.JScrollBar v1 = (javax.swing.JScrollBar)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setHorizontalScrollBar(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=createVerticalScrollBar(_0,_1) :- class(_0,"javax.swing.JScrollPane") | H=[:/*inline*/
	javax.swing.JScrollPane v0 = (javax.swing.JScrollPane)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.JScrollBar r = v0.createVerticalScrollBar();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=getVerticalScrollBar(_0,_1) :- class(_0,"javax.swing.JScrollPane") | H=[:/*inline*/
	javax.swing.JScrollPane v0 = (javax.swing.JScrollPane)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.JScrollBar r = v0.getVerticalScrollBar();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setVerticalScrollBar(_0,_1) :- class(_0,"javax.swing.JScrollPane"),class(_1,"javax.swing.JScrollBar") | H=[:/*inline*/
	javax.swing.JScrollPane v0 = (javax.swing.JScrollPane)me.nthAtom(0).getFunctor().getValue();
	javax.swing.JScrollBar v1 = (javax.swing.JScrollBar)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setVerticalScrollBar(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getViewport(_0,_1) :- class(_0,"javax.swing.JScrollPane") | H=[:/*inline*/
	javax.swing.JScrollPane v0 = (javax.swing.JScrollPane)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.JViewport r = v0.getViewport();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setViewport(_0,_1) :- class(_0,"javax.swing.JScrollPane"),class(_1,"javax.swing.JViewport") | H=[:/*inline*/
	javax.swing.JScrollPane v0 = (javax.swing.JScrollPane)me.nthAtom(0).getFunctor().getValue();
	javax.swing.JViewport v1 = (javax.swing.JViewport)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setViewport(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=setViewportView(_0,_1) :- class(_0,"javax.swing.JScrollPane"),class(_1,"java.awt.Component") | H=[:/*inline*/
	javax.swing.JScrollPane v0 = (javax.swing.JScrollPane)me.nthAtom(0).getFunctor().getValue();
	java.awt.Component v1 = (java.awt.Component)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setViewportView(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getRowHeader(_0,_1) :- class(_0,"javax.swing.JScrollPane") | H=[:/*inline*/
	javax.swing.JScrollPane v0 = (javax.swing.JScrollPane)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.JViewport r = v0.getRowHeader();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setRowHeader(_0,_1) :- class(_0,"javax.swing.JScrollPane"),class(_1,"javax.swing.JViewport") | H=[:/*inline*/
	javax.swing.JScrollPane v0 = (javax.swing.JScrollPane)me.nthAtom(0).getFunctor().getValue();
	javax.swing.JViewport v1 = (javax.swing.JViewport)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setRowHeader(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=setRowHeaderView(_0,_1) :- class(_0,"javax.swing.JScrollPane"),class(_1,"java.awt.Component") | H=[:/*inline*/
	javax.swing.JScrollPane v0 = (javax.swing.JScrollPane)me.nthAtom(0).getFunctor().getValue();
	java.awt.Component v1 = (java.awt.Component)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setRowHeaderView(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getColumnHeader(_0,_1) :- class(_0,"javax.swing.JScrollPane") | H=[:/*inline*/
	javax.swing.JScrollPane v0 = (javax.swing.JScrollPane)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.JViewport r = v0.getColumnHeader();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setColumnHeader(_0,_1) :- class(_0,"javax.swing.JScrollPane"),class(_1,"javax.swing.JViewport") | H=[:/*inline*/
	javax.swing.JScrollPane v0 = (javax.swing.JScrollPane)me.nthAtom(0).getFunctor().getValue();
	javax.swing.JViewport v1 = (javax.swing.JViewport)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setColumnHeader(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=setColumnHeaderView(_0,_1) :- class(_0,"javax.swing.JScrollPane"),class(_1,"java.awt.Component") | H=[:/*inline*/
	javax.swing.JScrollPane v0 = (javax.swing.JScrollPane)me.nthAtom(0).getFunctor().getValue();
	java.awt.Component v1 = (java.awt.Component)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setColumnHeaderView(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getCorner(_0,_1,_2) :- class(_0,"javax.swing.JScrollPane"),string(_1) | H=[:/*inline*/
	javax.swing.JScrollPane v0 = (javax.swing.JScrollPane)me.nthAtom(0).getFunctor().getValue();
	java.lang.String v1 = ((StringFunctor)me.nthAtom(1).getFunctor()).stringValue();
	try {
		java.awt.Component r = v0.getCorner(v1);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 2);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1,_2).

H=setCorner(_0,_1,_2) :- class(_0,"javax.swing.JScrollPane"),string(_1),class(_2,"java.awt.Component") | H=[:/*inline*/
	javax.swing.JScrollPane v0 = (javax.swing.JScrollPane)me.nthAtom(0).getFunctor().getValue();
	java.lang.String v1 = ((StringFunctor)me.nthAtom(1).getFunctor()).stringValue();
	java.awt.Component v2 = (java.awt.Component)me.nthAtom(2).getFunctor().getValue();
	try {
		v0.setCorner(v1,v2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.remove();
	:](_0,_1,_2).

H=setComponentOrientation(_0,_1) :- class(_0,"javax.swing.JScrollPane"),class(_1,"java.awt.ComponentOrientation") | H=[:/*inline*/
	javax.swing.JScrollPane v0 = (javax.swing.JScrollPane)me.nthAtom(0).getFunctor().getValue();
	java.awt.ComponentOrientation v1 = (java.awt.ComponentOrientation)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setComponentOrientation(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=isWheelScrollingEnabled(_0,_1) :- class(_0,"javax.swing.JScrollPane") | H=[:/*inline*/
	javax.swing.JScrollPane v0 = (javax.swing.JScrollPane)me.nthAtom(0).getFunctor().getValue();
	try {
		boolean r = v0.isWheelScrollingEnabled();
		Atom res = mem.newAtom(new SymbolFunctor(r?"true":"false", 1));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setWheelScrollingEnabled(_0,_1) :- class(_0,"javax.swing.JScrollPane") | H=[:/*inline*/
	javax.swing.JScrollPane v0 = (javax.swing.JScrollPane)me.nthAtom(0).getFunctor().getValue();
	boolean v1 = ((SymbolFunctor)me.nthAtom(1).getFunctor()).getName().equals("true")?true:false;
	try {
		v0.setWheelScrollingEnabled(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getAccessibleContext(_0,_1) :- class(_0,"javax.swing.JScrollPane") | H=[:/*inline*/
	javax.swing.JScrollPane v0 = (javax.swing.JScrollPane)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.accessibility.AccessibleContext r = v0.getAccessibleContext();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

}.

//-----------------------------------------------------
// The following code was generated by class2module.pl 
// Wed Dec 13 12:32:19 2006
//-----------------------------------------------------
{module(javax_swing_AbstractButton).
H=javax_swing_AbstractButton.model_changed_property :- H=[:/*inline*/
	java.lang.String r = javax.swing.AbstractButton.MODEL_CHANGED_PROPERTY;
	Atom res = mem.newAtom(new StringFunctor(r));
	mem.relink(res, 0, me, 0);
	me.remove();
	:],java_lang_String.use,(java_lang_String.use:-()).

H=javax_swing_AbstractButton.text_changed_property :- H=[:/*inline*/
	java.lang.String r = javax.swing.AbstractButton.TEXT_CHANGED_PROPERTY;
	Atom res = mem.newAtom(new StringFunctor(r));
	mem.relink(res, 0, me, 0);
	me.remove();
	:],java_lang_String.use,(java_lang_String.use:-()).

H=javax_swing_AbstractButton.mnemonic_changed_property :- H=[:/*inline*/
	java.lang.String r = javax.swing.AbstractButton.MNEMONIC_CHANGED_PROPERTY;
	Atom res = mem.newAtom(new StringFunctor(r));
	mem.relink(res, 0, me, 0);
	me.remove();
	:],java_lang_String.use,(java_lang_String.use:-()).

H=javax_swing_AbstractButton.margin_changed_property :- H=[:/*inline*/
	java.lang.String r = javax.swing.AbstractButton.MARGIN_CHANGED_PROPERTY;
	Atom res = mem.newAtom(new StringFunctor(r));
	mem.relink(res, 0, me, 0);
	me.remove();
	:],java_lang_String.use,(java_lang_String.use:-()).

H=javax_swing_AbstractButton.vertical_alignment_changed_property :- H=[:/*inline*/
	java.lang.String r = javax.swing.AbstractButton.VERTICAL_ALIGNMENT_CHANGED_PROPERTY;
	Atom res = mem.newAtom(new StringFunctor(r));
	mem.relink(res, 0, me, 0);
	me.remove();
	:],java_lang_String.use,(java_lang_String.use:-()).

H=javax_swing_AbstractButton.horizontal_alignment_changed_property :- H=[:/*inline*/
	java.lang.String r = javax.swing.AbstractButton.HORIZONTAL_ALIGNMENT_CHANGED_PROPERTY;
	Atom res = mem.newAtom(new StringFunctor(r));
	mem.relink(res, 0, me, 0);
	me.remove();
	:],java_lang_String.use,(java_lang_String.use:-()).

H=javax_swing_AbstractButton.vertical_text_position_changed_property :- H=[:/*inline*/
	java.lang.String r = javax.swing.AbstractButton.VERTICAL_TEXT_POSITION_CHANGED_PROPERTY;
	Atom res = mem.newAtom(new StringFunctor(r));
	mem.relink(res, 0, me, 0);
	me.remove();
	:],java_lang_String.use,(java_lang_String.use:-()).

H=javax_swing_AbstractButton.horizontal_text_position_changed_property :- H=[:/*inline*/
	java.lang.String r = javax.swing.AbstractButton.HORIZONTAL_TEXT_POSITION_CHANGED_PROPERTY;
	Atom res = mem.newAtom(new StringFunctor(r));
	mem.relink(res, 0, me, 0);
	me.remove();
	:],java_lang_String.use,(java_lang_String.use:-()).

H=javax_swing_AbstractButton.border_painted_changed_property :- H=[:/*inline*/
	java.lang.String r = javax.swing.AbstractButton.BORDER_PAINTED_CHANGED_PROPERTY;
	Atom res = mem.newAtom(new StringFunctor(r));
	mem.relink(res, 0, me, 0);
	me.remove();
	:],java_lang_String.use,(java_lang_String.use:-()).

H=javax_swing_AbstractButton.focus_painted_changed_property :- H=[:/*inline*/
	java.lang.String r = javax.swing.AbstractButton.FOCUS_PAINTED_CHANGED_PROPERTY;
	Atom res = mem.newAtom(new StringFunctor(r));
	mem.relink(res, 0, me, 0);
	me.remove();
	:],java_lang_String.use,(java_lang_String.use:-()).

H=javax_swing_AbstractButton.rollover_enabled_changed_property :- H=[:/*inline*/
	java.lang.String r = javax.swing.AbstractButton.ROLLOVER_ENABLED_CHANGED_PROPERTY;
	Atom res = mem.newAtom(new StringFunctor(r));
	mem.relink(res, 0, me, 0);
	me.remove();
	:],java_lang_String.use,(java_lang_String.use:-()).

H=javax_swing_AbstractButton.content_area_filled_changed_property :- H=[:/*inline*/
	java.lang.String r = javax.swing.AbstractButton.CONTENT_AREA_FILLED_CHANGED_PROPERTY;
	Atom res = mem.newAtom(new StringFunctor(r));
	mem.relink(res, 0, me, 0);
	me.remove();
	:],java_lang_String.use,(java_lang_String.use:-()).

H=javax_swing_AbstractButton.icon_changed_property :- H=[:/*inline*/
	java.lang.String r = javax.swing.AbstractButton.ICON_CHANGED_PROPERTY;
	Atom res = mem.newAtom(new StringFunctor(r));
	mem.relink(res, 0, me, 0);
	me.remove();
	:],java_lang_String.use,(java_lang_String.use:-()).

H=javax_swing_AbstractButton.pressed_icon_changed_property :- H=[:/*inline*/
	java.lang.String r = javax.swing.AbstractButton.PRESSED_ICON_CHANGED_PROPERTY;
	Atom res = mem.newAtom(new StringFunctor(r));
	mem.relink(res, 0, me, 0);
	me.remove();
	:],java_lang_String.use,(java_lang_String.use:-()).

H=javax_swing_AbstractButton.selected_icon_changed_property :- H=[:/*inline*/
	java.lang.String r = javax.swing.AbstractButton.SELECTED_ICON_CHANGED_PROPERTY;
	Atom res = mem.newAtom(new StringFunctor(r));
	mem.relink(res, 0, me, 0);
	me.remove();
	:],java_lang_String.use,(java_lang_String.use:-()).

H=javax_swing_AbstractButton.rollover_icon_changed_property :- H=[:/*inline*/
	java.lang.String r = javax.swing.AbstractButton.ROLLOVER_ICON_CHANGED_PROPERTY;
	Atom res = mem.newAtom(new StringFunctor(r));
	mem.relink(res, 0, me, 0);
	me.remove();
	:],java_lang_String.use,(java_lang_String.use:-()).

H=javax_swing_AbstractButton.rollover_selected_icon_changed_property :- H=[:/*inline*/
	java.lang.String r = javax.swing.AbstractButton.ROLLOVER_SELECTED_ICON_CHANGED_PROPERTY;
	Atom res = mem.newAtom(new StringFunctor(r));
	mem.relink(res, 0, me, 0);
	me.remove();
	:],java_lang_String.use,(java_lang_String.use:-()).

H=javax_swing_AbstractButton.disabled_icon_changed_property :- H=[:/*inline*/
	java.lang.String r = javax.swing.AbstractButton.DISABLED_ICON_CHANGED_PROPERTY;
	Atom res = mem.newAtom(new StringFunctor(r));
	mem.relink(res, 0, me, 0);
	me.remove();
	:],java_lang_String.use,(java_lang_String.use:-()).

H=javax_swing_AbstractButton.disabled_selected_icon_changed_property :- H=[:/*inline*/
	java.lang.String r = javax.swing.AbstractButton.DISABLED_SELECTED_ICON_CHANGED_PROPERTY;
	Atom res = mem.newAtom(new StringFunctor(r));
	mem.relink(res, 0, me, 0);
	me.remove();
	:],java_lang_String.use,(java_lang_String.use:-()).

H=getText(_0,_1) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	try {
		java.lang.String r = v0.getText();
		Atom res = mem.newAtom(new StringFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),java_lang_String.use,(java_lang_String.use:-()).

H=setText(_0,_1) :- class(_0,"javax.swing.AbstractButton"),string(_1) | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	java.lang.String v1 = ((StringFunctor)me.nthAtom(1).getFunctor()).stringValue();
	try {
		v0.setText(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=isSelected(_0,_1) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	try {
		boolean r = v0.isSelected();
		Atom res = mem.newAtom(new SymbolFunctor(r?"true":"false", 1));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setSelected(_0,true) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	boolean v1 = true;
	try {
		v0.setSelected(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,true).

H=setSelected(_0,false) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	boolean v1 = false;
	try {
		v0.setSelected(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,false).

H=doClick(_0) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	try {
		v0.doClick();
		mem.relink(me.nthAtom(0), 0, me, 1);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 1);
	}
	me.remove();
	:](_0).

H=doClick(_0,_1) :- class(_0,"javax.swing.AbstractButton"),int(_1) | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		v0.doClick(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=setMargin(_0,_1) :- class(_0,"javax.swing.AbstractButton"),class(_1,"java.awt.Insets") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	java.awt.Insets v1 = (java.awt.Insets)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setMargin(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getMargin(_0,_1) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	try {
		java.awt.Insets r = v0.getMargin();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),java_awt_Insets.use,(java_awt_Insets.use:-()).

H=getIcon(_0,_1) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.Icon r = v0.getIcon();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),javax_swing_Icon.use,(javax_swing_Icon.use:-()).

H=setIcon(_0,_1) :- class(_0,"javax.swing.AbstractButton"),class(_1,"javax.swing.Icon") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	javax.swing.Icon v1 = (javax.swing.Icon)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setIcon(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getPressedIcon(_0,_1) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.Icon r = v0.getPressedIcon();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),javax_swing_Icon.use,(javax_swing_Icon.use:-()).

H=setPressedIcon(_0,_1) :- class(_0,"javax.swing.AbstractButton"),class(_1,"javax.swing.Icon") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	javax.swing.Icon v1 = (javax.swing.Icon)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setPressedIcon(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getSelectedIcon(_0,_1) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.Icon r = v0.getSelectedIcon();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),javax_swing_Icon.use,(javax_swing_Icon.use:-()).

H=setSelectedIcon(_0,_1) :- class(_0,"javax.swing.AbstractButton"),class(_1,"javax.swing.Icon") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	javax.swing.Icon v1 = (javax.swing.Icon)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setSelectedIcon(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getRolloverIcon(_0,_1) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.Icon r = v0.getRolloverIcon();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),javax_swing_Icon.use,(javax_swing_Icon.use:-()).

H=setRolloverIcon(_0,_1) :- class(_0,"javax.swing.AbstractButton"),class(_1,"javax.swing.Icon") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	javax.swing.Icon v1 = (javax.swing.Icon)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setRolloverIcon(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getRolloverSelectedIcon(_0,_1) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.Icon r = v0.getRolloverSelectedIcon();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),javax_swing_Icon.use,(javax_swing_Icon.use:-()).

H=setRolloverSelectedIcon(_0,_1) :- class(_0,"javax.swing.AbstractButton"),class(_1,"javax.swing.Icon") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	javax.swing.Icon v1 = (javax.swing.Icon)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setRolloverSelectedIcon(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getDisabledIcon(_0,_1) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.Icon r = v0.getDisabledIcon();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),javax_swing_Icon.use,(javax_swing_Icon.use:-()).

H=setDisabledIcon(_0,_1) :- class(_0,"javax.swing.AbstractButton"),class(_1,"javax.swing.Icon") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	javax.swing.Icon v1 = (javax.swing.Icon)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setDisabledIcon(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getDisabledSelectedIcon(_0,_1) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.Icon r = v0.getDisabledSelectedIcon();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),javax_swing_Icon.use,(javax_swing_Icon.use:-()).

H=setDisabledSelectedIcon(_0,_1) :- class(_0,"javax.swing.AbstractButton"),class(_1,"javax.swing.Icon") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	javax.swing.Icon v1 = (javax.swing.Icon)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setDisabledSelectedIcon(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getVerticalAlignment(_0,_1) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	try {
		int r = v0.getVerticalAlignment();
		Atom res = mem.newAtom(new IntegerFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setVerticalAlignment(_0,_1) :- class(_0,"javax.swing.AbstractButton"),int(_1) | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		v0.setVerticalAlignment(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getHorizontalAlignment(_0,_1) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	try {
		int r = v0.getHorizontalAlignment();
		Atom res = mem.newAtom(new IntegerFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setHorizontalAlignment(_0,_1) :- class(_0,"javax.swing.AbstractButton"),int(_1) | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		v0.setHorizontalAlignment(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getVerticalTextPosition(_0,_1) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	try {
		int r = v0.getVerticalTextPosition();
		Atom res = mem.newAtom(new IntegerFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setVerticalTextPosition(_0,_1) :- class(_0,"javax.swing.AbstractButton"),int(_1) | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		v0.setVerticalTextPosition(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getHorizontalTextPosition(_0,_1) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	try {
		int r = v0.getHorizontalTextPosition();
		Atom res = mem.newAtom(new IntegerFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setHorizontalTextPosition(_0,_1) :- class(_0,"javax.swing.AbstractButton"),int(_1) | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		v0.setHorizontalTextPosition(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getIconTextGap(_0,_1) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	try {
		int r = v0.getIconTextGap();
		Atom res = mem.newAtom(new IntegerFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setIconTextGap(_0,_1) :- class(_0,"javax.swing.AbstractButton"),int(_1) | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		v0.setIconTextGap(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=setActionCommand(_0,_1) :- class(_0,"javax.swing.AbstractButton"),string(_1) | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	java.lang.String v1 = ((StringFunctor)me.nthAtom(1).getFunctor()).stringValue();
	try {
		v0.setActionCommand(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getActionCommand(_0,_1) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	try {
		java.lang.String r = v0.getActionCommand();
		Atom res = mem.newAtom(new StringFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),java_lang_String.use,(java_lang_String.use:-()).

H=setAction(_0,_1) :- class(_0,"javax.swing.AbstractButton"),class(_1,"javax.swing.Action") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	javax.swing.Action v1 = (javax.swing.Action)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setAction(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getAction(_0,_1) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.Action r = v0.getAction();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),javax_swing_Action.use,(javax_swing_Action.use:-()).

H=isBorderPainted(_0,_1) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	try {
		boolean r = v0.isBorderPainted();
		Atom res = mem.newAtom(new SymbolFunctor(r?"true":"false", 1));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setBorderPainted(_0,true) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	boolean v1 = true;
	try {
		v0.setBorderPainted(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,true).

H=setBorderPainted(_0,false) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	boolean v1 = false;
	try {
		v0.setBorderPainted(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,false).

H=isFocusPainted(_0,_1) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	try {
		boolean r = v0.isFocusPainted();
		Atom res = mem.newAtom(new SymbolFunctor(r?"true":"false", 1));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setFocusPainted(_0,true) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	boolean v1 = true;
	try {
		v0.setFocusPainted(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,true).

H=setFocusPainted(_0,false) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	boolean v1 = false;
	try {
		v0.setFocusPainted(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,false).

H=isContentAreaFilled(_0,_1) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	try {
		boolean r = v0.isContentAreaFilled();
		Atom res = mem.newAtom(new SymbolFunctor(r?"true":"false", 1));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setContentAreaFilled(_0,true) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	boolean v1 = true;
	try {
		v0.setContentAreaFilled(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,true).

H=setContentAreaFilled(_0,false) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	boolean v1 = false;
	try {
		v0.setContentAreaFilled(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,false).

H=isRolloverEnabled(_0,_1) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	try {
		boolean r = v0.isRolloverEnabled();
		Atom res = mem.newAtom(new SymbolFunctor(r?"true":"false", 1));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setRolloverEnabled(_0,true) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	boolean v1 = true;
	try {
		v0.setRolloverEnabled(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,true).

H=setRolloverEnabled(_0,false) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	boolean v1 = false;
	try {
		v0.setRolloverEnabled(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,false).

H=getMnemonic(_0,_1) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	try {
		int r = v0.getMnemonic();
		Atom res = mem.newAtom(new IntegerFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setMnemonic(_0,_1) :- class(_0,"javax.swing.AbstractButton"),int(_1) | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		v0.setMnemonic(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=setDisplayedMnemonicIndex(_0,_1) :- class(_0,"javax.swing.AbstractButton"),int(_1) | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		v0.setDisplayedMnemonicIndex(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getDisplayedMnemonicIndex(_0,_1) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	try {
		int r = v0.getDisplayedMnemonicIndex();
		Atom res = mem.newAtom(new IntegerFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setMultiClickThreshhold(_0,_1) :- class(_0,"javax.swing.AbstractButton"),int(_1) | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	long v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		v0.setMultiClickThreshhold(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getModel(_0,_1) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.ButtonModel r = v0.getModel();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),javax_swing_ButtonModel.use,(javax_swing_ButtonModel.use:-()).

H=setModel(_0,_1) :- class(_0,"javax.swing.AbstractButton"),class(_1,"javax.swing.ButtonModel") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	javax.swing.ButtonModel v1 = (javax.swing.ButtonModel)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setModel(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getUI(_0,_1) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.plaf.ButtonUI r = v0.getUI();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),javax_swing_plaf_ButtonUI.use,(javax_swing_plaf_ButtonUI.use:-()).

H=setUI(_0,_1) :- class(_0,"javax.swing.AbstractButton"),class(_1,"javax.swing.plaf.ButtonUI") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	javax.swing.plaf.ButtonUI v1 = (javax.swing.plaf.ButtonUI)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setUI(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=updateUI(_0) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	try {
		v0.updateUI();
		mem.relink(me.nthAtom(0), 0, me, 1);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 1);
	}
	me.remove();
	:](_0).

H=setLayout(_0,_1) :- class(_0,"javax.swing.AbstractButton"),class(_1,"java.awt.LayoutManager") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	java.awt.LayoutManager v1 = (java.awt.LayoutManager)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setLayout(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=addChangeListener(_0,_1) :- class(_0,"javax.swing.AbstractButton"),class(_1,"javax.swing.event.ChangeListener") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	javax.swing.event.ChangeListener v1 = (javax.swing.event.ChangeListener)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.addChangeListener(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=removeChangeListener(_0,_1) :- class(_0,"javax.swing.AbstractButton"),class(_1,"javax.swing.event.ChangeListener") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	javax.swing.event.ChangeListener v1 = (javax.swing.event.ChangeListener)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.removeChangeListener(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getChangeListeners(_0,_1) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.event.ChangeListener[] r = v0.getChangeListeners();
		runtime.Link l = new runtime.Link(me.nthAtom(1), 0);
		util.Util.makeList(l, java.util.Arrays.asList(r));
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=addActionListener(_0,_1) :- class(_0,"javax.swing.AbstractButton"),class(_1,"java.awt.event.ActionListener") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	java.awt.event.ActionListener v1 = (java.awt.event.ActionListener)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.addActionListener(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=removeActionListener(_0,_1) :- class(_0,"javax.swing.AbstractButton"),class(_1,"java.awt.event.ActionListener") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	java.awt.event.ActionListener v1 = (java.awt.event.ActionListener)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.removeActionListener(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getActionListeners(_0,_1) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	try {
		java.awt.event.ActionListener[] r = v0.getActionListeners();
		runtime.Link l = new runtime.Link(me.nthAtom(1), 0);
		util.Util.makeList(l, java.util.Arrays.asList(r));
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setEnabled(_0,true) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	boolean v1 = true;
	try {
		v0.setEnabled(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,true).

H=setEnabled(_0,false) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	boolean v1 = false;
	try {
		v0.setEnabled(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,false).

H=getLabel(_0,_1) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	try {
		java.lang.String r = v0.getLabel();
		Atom res = mem.newAtom(new StringFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),java_lang_String.use,(java_lang_String.use:-()).

H=setLabel(_0,_1) :- class(_0,"javax.swing.AbstractButton"),string(_1) | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	java.lang.String v1 = ((StringFunctor)me.nthAtom(1).getFunctor()).stringValue();
	try {
		v0.setLabel(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=addItemListener(_0,_1) :- class(_0,"javax.swing.AbstractButton"),class(_1,"java.awt.event.ItemListener") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	java.awt.event.ItemListener v1 = (java.awt.event.ItemListener)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.addItemListener(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=removeItemListener(_0,_1) :- class(_0,"javax.swing.AbstractButton"),class(_1,"java.awt.event.ItemListener") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	java.awt.event.ItemListener v1 = (java.awt.event.ItemListener)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.removeItemListener(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getItemListeners(_0,_1) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	try {
		java.awt.event.ItemListener[] r = v0.getItemListeners();
		runtime.Link l = new runtime.Link(me.nthAtom(1), 0);
		util.Util.makeList(l, java.util.Arrays.asList(r));
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=getSelectedObjects(_0,_1) :- class(_0,"javax.swing.AbstractButton") | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	try {
		java.lang.Object[] r = v0.getSelectedObjects();
		runtime.Link l = new runtime.Link(me.nthAtom(1), 0);
		util.Util.makeList(l, java.util.Arrays.asList(r));
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=imageUpdate(_0,_1,_2,_3,_4,_5,_6,_7) :- class(_0,"javax.swing.AbstractButton"),class(_1,"java.awt.Image"),int(_2),int(_3),int(_4),int(_5),int(_6) | H=[:/*inline*/
	javax.swing.AbstractButton v0 = (javax.swing.AbstractButton)me.nthAtom(0).getFunctor().getValue();
	java.awt.Image v1 = (java.awt.Image)me.nthAtom(1).getFunctor().getValue();
	int v2 = ((IntegerFunctor)me.nthAtom(2).getFunctor()).intValue();
	int v3 = ((IntegerFunctor)me.nthAtom(3).getFunctor()).intValue();
	int v4 = ((IntegerFunctor)me.nthAtom(4).getFunctor()).intValue();
	int v5 = ((IntegerFunctor)me.nthAtom(5).getFunctor()).intValue();
	int v6 = ((IntegerFunctor)me.nthAtom(6).getFunctor()).intValue();
	try {
		boolean r = v0.imageUpdate(v1,v2,v3,v4,v5,v6);
		Atom res = mem.newAtom(new SymbolFunctor(r?"true":"false", 1));
		mem.relink(res, 0, me, 7);
		mem.relink(me.nthAtom(0), 0, me, 8);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 7);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 8);
	}
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.nthAtom(3).remove();
	me.nthAtom(4).remove();
	me.nthAtom(5).remove();
	me.nthAtom(6).remove();
	me.remove();
	:](_0,_1,_2,_3,_4,_5,_6,_7).

}.

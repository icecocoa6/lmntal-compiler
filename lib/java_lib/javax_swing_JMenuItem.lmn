//-----------------------------------------------------
// The following code was generated by class2module.pl 
// Wed Dec 13 12:32:32 2006
//-----------------------------------------------------
{module(javax_swing_JMenuItem).
H=javax_swing_JMenuItem.new() :- H=[:/*inline*/
	try {
		javax.swing.JMenuItem r = new javax.swing.JMenuItem();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 0);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 0);
	}
	me.remove();
	:](),javax_swing_AbstractButton.use,(javax_swing_AbstractButton.use:-()),javax_swing_JComponent.use,(javax_swing_JComponent.use:-()),java_awt_Container.use,(java_awt_Container.use:-()),java_awt_Component.use,(java_awt_Component.use:-()).

H=javax_swing_JMenuItem.new(_0) :- class(_0,"javax.swing.Icon") | H=[:/*inline*/
	javax.swing.Icon v0 = (javax.swing.Icon)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.JMenuItem r = new javax.swing.JMenuItem(v0);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 1);
	}
	me.nthAtom(0).remove();
	me.remove();
	:](_0),javax_swing_AbstractButton.use,(javax_swing_AbstractButton.use:-()),javax_swing_JComponent.use,(javax_swing_JComponent.use:-()),java_awt_Container.use,(java_awt_Container.use:-()),java_awt_Component.use,(java_awt_Component.use:-()).

H=javax_swing_JMenuItem.new(_0) :- string(_0) | H=[:/*inline*/
	java.lang.String v0 = ((StringFunctor)me.nthAtom(0).getFunctor()).stringValue();
	try {
		javax.swing.JMenuItem r = new javax.swing.JMenuItem(v0);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 1);
	}
	me.nthAtom(0).remove();
	me.remove();
	:](_0),javax_swing_AbstractButton.use,(javax_swing_AbstractButton.use:-()),javax_swing_JComponent.use,(javax_swing_JComponent.use:-()),java_awt_Container.use,(java_awt_Container.use:-()),java_awt_Component.use,(java_awt_Component.use:-()).

H=javax_swing_JMenuItem.new(_0) :- class(_0,"javax.swing.Action") | H=[:/*inline*/
	javax.swing.Action v0 = (javax.swing.Action)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.JMenuItem r = new javax.swing.JMenuItem(v0);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 1);
	}
	me.nthAtom(0).remove();
	me.remove();
	:](_0),javax_swing_AbstractButton.use,(javax_swing_AbstractButton.use:-()),javax_swing_JComponent.use,(javax_swing_JComponent.use:-()),java_awt_Container.use,(java_awt_Container.use:-()),java_awt_Component.use,(java_awt_Component.use:-()).

H=javax_swing_JMenuItem.new(_0,_1) :- string(_0),class(_1,"javax.swing.Icon") | H=[:/*inline*/
	java.lang.String v0 = ((StringFunctor)me.nthAtom(0).getFunctor()).stringValue();
	javax.swing.Icon v1 = (javax.swing.Icon)me.nthAtom(1).getFunctor().getValue();
	try {
		javax.swing.JMenuItem r = new javax.swing.JMenuItem(v0,v1);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 2);
	}
	me.nthAtom(0).remove();
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1),javax_swing_AbstractButton.use,(javax_swing_AbstractButton.use:-()),javax_swing_JComponent.use,(javax_swing_JComponent.use:-()),java_awt_Container.use,(java_awt_Container.use:-()),java_awt_Component.use,(java_awt_Component.use:-()).

H=javax_swing_JMenuItem.new(_0,_1) :- string(_0),int(_1) | H=[:/*inline*/
	java.lang.String v0 = ((StringFunctor)me.nthAtom(0).getFunctor()).stringValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		javax.swing.JMenuItem r = new javax.swing.JMenuItem(v0,v1);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 2);
	}
	me.nthAtom(0).remove();
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1),javax_swing_AbstractButton.use,(javax_swing_AbstractButton.use:-()),javax_swing_JComponent.use,(javax_swing_JComponent.use:-()),java_awt_Container.use,(java_awt_Container.use:-()),java_awt_Component.use,(java_awt_Component.use:-()).

H=setUI(_0,_1) :- class(_0,"javax.swing.JMenuItem"),class(_1,"javax.swing.plaf.MenuItemUI") | H=[:/*inline*/
	javax.swing.JMenuItem v0 = (javax.swing.JMenuItem)me.nthAtom(0).getFunctor().getValue();
	javax.swing.plaf.MenuItemUI v1 = (javax.swing.plaf.MenuItemUI)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setUI(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=updateUI(_0) :- class(_0,"javax.swing.JMenuItem") | H=[:/*inline*/
	javax.swing.JMenuItem v0 = (javax.swing.JMenuItem)me.nthAtom(0).getFunctor().getValue();
	try {
		v0.updateUI();
		mem.relink(me.nthAtom(0), 0, me, 1);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 1);
	}
	me.remove();
	:](_0).

H=getUIClassID(_0,_1) :- class(_0,"javax.swing.JMenuItem") | H=[:/*inline*/
	javax.swing.JMenuItem v0 = (javax.swing.JMenuItem)me.nthAtom(0).getFunctor().getValue();
	try {
		java.lang.String r = v0.getUIClassID();
		Atom res = mem.newAtom(new StringFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),java_lang_String.use,(java_lang_String.use:-()).

H=setArmed(_0,true) :- class(_0,"javax.swing.JMenuItem") | H=[:/*inline*/
	javax.swing.JMenuItem v0 = (javax.swing.JMenuItem)me.nthAtom(0).getFunctor().getValue();
	boolean v1 = true;
	try {
		v0.setArmed(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,true).

H=setArmed(_0,false) :- class(_0,"javax.swing.JMenuItem") | H=[:/*inline*/
	javax.swing.JMenuItem v0 = (javax.swing.JMenuItem)me.nthAtom(0).getFunctor().getValue();
	boolean v1 = false;
	try {
		v0.setArmed(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,false).

H=isArmed(_0,_1) :- class(_0,"javax.swing.JMenuItem") | H=[:/*inline*/
	javax.swing.JMenuItem v0 = (javax.swing.JMenuItem)me.nthAtom(0).getFunctor().getValue();
	try {
		boolean r = v0.isArmed();
		Atom res = mem.newAtom(new SymbolFunctor(r?"true":"false", 1));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setEnabled(_0,true) :- class(_0,"javax.swing.JMenuItem") | H=[:/*inline*/
	javax.swing.JMenuItem v0 = (javax.swing.JMenuItem)me.nthAtom(0).getFunctor().getValue();
	boolean v1 = true;
	try {
		v0.setEnabled(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,true).

H=setEnabled(_0,false) :- class(_0,"javax.swing.JMenuItem") | H=[:/*inline*/
	javax.swing.JMenuItem v0 = (javax.swing.JMenuItem)me.nthAtom(0).getFunctor().getValue();
	boolean v1 = false;
	try {
		v0.setEnabled(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,false).

H=setAccelerator(_0,_1) :- class(_0,"javax.swing.JMenuItem"),class(_1,"javax.swing.KeyStroke") | H=[:/*inline*/
	javax.swing.JMenuItem v0 = (javax.swing.JMenuItem)me.nthAtom(0).getFunctor().getValue();
	javax.swing.KeyStroke v1 = (javax.swing.KeyStroke)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setAccelerator(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getAccelerator(_0,_1) :- class(_0,"javax.swing.JMenuItem") | H=[:/*inline*/
	javax.swing.JMenuItem v0 = (javax.swing.JMenuItem)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.KeyStroke r = v0.getAccelerator();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),javax_swing_KeyStroke.use,(javax_swing_KeyStroke.use:-()).

H=processMenuDragMouseEvent(_0,_1) :- class(_0,"javax.swing.JMenuItem"),class(_1,"javax.swing.event.MenuDragMouseEvent") | H=[:/*inline*/
	javax.swing.JMenuItem v0 = (javax.swing.JMenuItem)me.nthAtom(0).getFunctor().getValue();
	javax.swing.event.MenuDragMouseEvent v1 = (javax.swing.event.MenuDragMouseEvent)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.processMenuDragMouseEvent(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=processMenuKeyEvent(_0,_1) :- class(_0,"javax.swing.JMenuItem"),class(_1,"javax.swing.event.MenuKeyEvent") | H=[:/*inline*/
	javax.swing.JMenuItem v0 = (javax.swing.JMenuItem)me.nthAtom(0).getFunctor().getValue();
	javax.swing.event.MenuKeyEvent v1 = (javax.swing.event.MenuKeyEvent)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.processMenuKeyEvent(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=menuSelectionChanged(_0,true) :- class(_0,"javax.swing.JMenuItem") | H=[:/*inline*/
	javax.swing.JMenuItem v0 = (javax.swing.JMenuItem)me.nthAtom(0).getFunctor().getValue();
	boolean v1 = true;
	try {
		v0.menuSelectionChanged(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,true).

H=menuSelectionChanged(_0,false) :- class(_0,"javax.swing.JMenuItem") | H=[:/*inline*/
	javax.swing.JMenuItem v0 = (javax.swing.JMenuItem)me.nthAtom(0).getFunctor().getValue();
	boolean v1 = false;
	try {
		v0.menuSelectionChanged(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,false).

H=getSubElements(_0,_1) :- class(_0,"javax.swing.JMenuItem") | H=[:/*inline*/
	javax.swing.JMenuItem v0 = (javax.swing.JMenuItem)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.MenuElement[] r = v0.getSubElements();
		runtime.Link l = new runtime.Link(me.nthAtom(1), 0);
		util.Util.makeList(l, java.util.Arrays.asList(r));
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=getComponent(_0,_1) :- class(_0,"javax.swing.JMenuItem") | H=[:/*inline*/
	javax.swing.JMenuItem v0 = (javax.swing.JMenuItem)me.nthAtom(0).getFunctor().getValue();
	try {
		java.awt.Component r = v0.getComponent();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),java_awt_Component.use,(java_awt_Component.use:-()).

H=addMenuDragMouseListener(_0,_1) :- class(_0,"javax.swing.JMenuItem"),class(_1,"javax.swing.event.MenuDragMouseListener") | H=[:/*inline*/
	javax.swing.JMenuItem v0 = (javax.swing.JMenuItem)me.nthAtom(0).getFunctor().getValue();
	javax.swing.event.MenuDragMouseListener v1 = (javax.swing.event.MenuDragMouseListener)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.addMenuDragMouseListener(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=removeMenuDragMouseListener(_0,_1) :- class(_0,"javax.swing.JMenuItem"),class(_1,"javax.swing.event.MenuDragMouseListener") | H=[:/*inline*/
	javax.swing.JMenuItem v0 = (javax.swing.JMenuItem)me.nthAtom(0).getFunctor().getValue();
	javax.swing.event.MenuDragMouseListener v1 = (javax.swing.event.MenuDragMouseListener)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.removeMenuDragMouseListener(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getMenuDragMouseListeners(_0,_1) :- class(_0,"javax.swing.JMenuItem") | H=[:/*inline*/
	javax.swing.JMenuItem v0 = (javax.swing.JMenuItem)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.event.MenuDragMouseListener[] r = v0.getMenuDragMouseListeners();
		runtime.Link l = new runtime.Link(me.nthAtom(1), 0);
		util.Util.makeList(l, java.util.Arrays.asList(r));
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=addMenuKeyListener(_0,_1) :- class(_0,"javax.swing.JMenuItem"),class(_1,"javax.swing.event.MenuKeyListener") | H=[:/*inline*/
	javax.swing.JMenuItem v0 = (javax.swing.JMenuItem)me.nthAtom(0).getFunctor().getValue();
	javax.swing.event.MenuKeyListener v1 = (javax.swing.event.MenuKeyListener)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.addMenuKeyListener(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=removeMenuKeyListener(_0,_1) :- class(_0,"javax.swing.JMenuItem"),class(_1,"javax.swing.event.MenuKeyListener") | H=[:/*inline*/
	javax.swing.JMenuItem v0 = (javax.swing.JMenuItem)me.nthAtom(0).getFunctor().getValue();
	javax.swing.event.MenuKeyListener v1 = (javax.swing.event.MenuKeyListener)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.removeMenuKeyListener(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getMenuKeyListeners(_0,_1) :- class(_0,"javax.swing.JMenuItem") | H=[:/*inline*/
	javax.swing.JMenuItem v0 = (javax.swing.JMenuItem)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.event.MenuKeyListener[] r = v0.getMenuKeyListeners();
		runtime.Link l = new runtime.Link(me.nthAtom(1), 0);
		util.Util.makeList(l, java.util.Arrays.asList(r));
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=getAccessibleContext(_0,_1) :- class(_0,"javax.swing.JMenuItem") | H=[:/*inline*/
	javax.swing.JMenuItem v0 = (javax.swing.JMenuItem)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.accessibility.AccessibleContext r = v0.getAccessibleContext();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),javax_accessibility_AccessibleContext.use,(javax_accessibility_AccessibleContext.use:-()).

}.

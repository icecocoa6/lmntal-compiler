//-----------------------------------------------------
// The following code was generated by class2module.pl 
// Wed Dec 13 12:32:45 2006
//-----------------------------------------------------
{module(javax_swing_JTextArea).
H=javax_swing_JTextArea.new() :- H=[:/*inline*/
	try {
		javax.swing.JTextArea r = new javax.swing.JTextArea();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 0);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 0);
	}
	me.remove();
	:](),javax_swing_text_JTextComponent.use,(javax_swing_text_JTextComponent.use:-()),javax_swing_JComponent.use,(javax_swing_JComponent.use:-()),java_awt_Container.use,(java_awt_Container.use:-()),java_awt_Component.use,(java_awt_Component.use:-()).

H=javax_swing_JTextArea.new(_0) :- string(_0) | H=[:/*inline*/
	java.lang.String v0 = ((StringFunctor)me.nthAtom(0).getFunctor()).stringValue();
	try {
		javax.swing.JTextArea r = new javax.swing.JTextArea(v0);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 1);
	}
	me.nthAtom(0).remove();
	me.remove();
	:](_0),javax_swing_text_JTextComponent.use,(javax_swing_text_JTextComponent.use:-()),javax_swing_JComponent.use,(javax_swing_JComponent.use:-()),java_awt_Container.use,(java_awt_Container.use:-()),java_awt_Component.use,(java_awt_Component.use:-()).

H=javax_swing_JTextArea.new(_0,_1) :- int(_0),int(_1) | H=[:/*inline*/
	int v0 = ((IntegerFunctor)me.nthAtom(0).getFunctor()).intValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		javax.swing.JTextArea r = new javax.swing.JTextArea(v0,v1);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 2);
	}
	me.nthAtom(0).remove();
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1),javax_swing_text_JTextComponent.use,(javax_swing_text_JTextComponent.use:-()),javax_swing_JComponent.use,(javax_swing_JComponent.use:-()),java_awt_Container.use,(java_awt_Container.use:-()),java_awt_Component.use,(java_awt_Component.use:-()).

H=javax_swing_JTextArea.new(_0,_1,_2) :- string(_0),int(_1),int(_2) | H=[:/*inline*/
	java.lang.String v0 = ((StringFunctor)me.nthAtom(0).getFunctor()).stringValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	int v2 = ((IntegerFunctor)me.nthAtom(2).getFunctor()).intValue();
	try {
		javax.swing.JTextArea r = new javax.swing.JTextArea(v0,v1,v2);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 3);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 3);
	}
	me.nthAtom(0).remove();
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.remove();
	:](_0,_1,_2),javax_swing_text_JTextComponent.use,(javax_swing_text_JTextComponent.use:-()),javax_swing_JComponent.use,(javax_swing_JComponent.use:-()),java_awt_Container.use,(java_awt_Container.use:-()),java_awt_Component.use,(java_awt_Component.use:-()).

H=javax_swing_JTextArea.new(_0) :- class(_0,"javax.swing.text.Document") | H=[:/*inline*/
	javax.swing.text.Document v0 = (javax.swing.text.Document)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.JTextArea r = new javax.swing.JTextArea(v0);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 1);
	}
	me.nthAtom(0).remove();
	me.remove();
	:](_0),javax_swing_text_JTextComponent.use,(javax_swing_text_JTextComponent.use:-()),javax_swing_JComponent.use,(javax_swing_JComponent.use:-()),java_awt_Container.use,(java_awt_Container.use:-()),java_awt_Component.use,(java_awt_Component.use:-()).

H=javax_swing_JTextArea.new(_0,_1,_2,_3) :- class(_0,"javax.swing.text.Document"),string(_1),int(_2),int(_3) | H=[:/*inline*/
	javax.swing.text.Document v0 = (javax.swing.text.Document)me.nthAtom(0).getFunctor().getValue();
	java.lang.String v1 = ((StringFunctor)me.nthAtom(1).getFunctor()).stringValue();
	int v2 = ((IntegerFunctor)me.nthAtom(2).getFunctor()).intValue();
	int v3 = ((IntegerFunctor)me.nthAtom(3).getFunctor()).intValue();
	try {
		javax.swing.JTextArea r = new javax.swing.JTextArea(v0,v1,v2,v3);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 4);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 4);
	}
	me.nthAtom(0).remove();
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.nthAtom(3).remove();
	me.remove();
	:](_0,_1,_2,_3),javax_swing_text_JTextComponent.use,(javax_swing_text_JTextComponent.use:-()),javax_swing_JComponent.use,(javax_swing_JComponent.use:-()),java_awt_Container.use,(java_awt_Container.use:-()),java_awt_Component.use,(java_awt_Component.use:-()).

H=getUIClassID(_0,_1) :- class(_0,"javax.swing.JTextArea") | H=[:/*inline*/
	javax.swing.JTextArea v0 = (javax.swing.JTextArea)me.nthAtom(0).getFunctor().getValue();
	try {
		java.lang.String r = v0.getUIClassID();
		Atom res = mem.newAtom(new StringFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),java_lang_String.use,(java_lang_String.use:-()).

H=setTabSize(_0,_1) :- class(_0,"javax.swing.JTextArea"),int(_1) | H=[:/*inline*/
	javax.swing.JTextArea v0 = (javax.swing.JTextArea)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		v0.setTabSize(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getTabSize(_0,_1) :- class(_0,"javax.swing.JTextArea") | H=[:/*inline*/
	javax.swing.JTextArea v0 = (javax.swing.JTextArea)me.nthAtom(0).getFunctor().getValue();
	try {
		int r = v0.getTabSize();
		Atom res = mem.newAtom(new IntegerFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setLineWrap(_0,true) :- class(_0,"javax.swing.JTextArea") | H=[:/*inline*/
	javax.swing.JTextArea v0 = (javax.swing.JTextArea)me.nthAtom(0).getFunctor().getValue();
	boolean v1 = true;
	try {
		v0.setLineWrap(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,true).

H=setLineWrap(_0,false) :- class(_0,"javax.swing.JTextArea") | H=[:/*inline*/
	javax.swing.JTextArea v0 = (javax.swing.JTextArea)me.nthAtom(0).getFunctor().getValue();
	boolean v1 = false;
	try {
		v0.setLineWrap(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,false).

H=getLineWrap(_0,_1) :- class(_0,"javax.swing.JTextArea") | H=[:/*inline*/
	javax.swing.JTextArea v0 = (javax.swing.JTextArea)me.nthAtom(0).getFunctor().getValue();
	try {
		boolean r = v0.getLineWrap();
		Atom res = mem.newAtom(new SymbolFunctor(r?"true":"false", 1));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setWrapStyleWord(_0,true) :- class(_0,"javax.swing.JTextArea") | H=[:/*inline*/
	javax.swing.JTextArea v0 = (javax.swing.JTextArea)me.nthAtom(0).getFunctor().getValue();
	boolean v1 = true;
	try {
		v0.setWrapStyleWord(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,true).

H=setWrapStyleWord(_0,false) :- class(_0,"javax.swing.JTextArea") | H=[:/*inline*/
	javax.swing.JTextArea v0 = (javax.swing.JTextArea)me.nthAtom(0).getFunctor().getValue();
	boolean v1 = false;
	try {
		v0.setWrapStyleWord(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,false).

H=getWrapStyleWord(_0,_1) :- class(_0,"javax.swing.JTextArea") | H=[:/*inline*/
	javax.swing.JTextArea v0 = (javax.swing.JTextArea)me.nthAtom(0).getFunctor().getValue();
	try {
		boolean r = v0.getWrapStyleWord();
		Atom res = mem.newAtom(new SymbolFunctor(r?"true":"false", 1));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=getLineOfOffset(_0,_1,_2) :- class(_0,"javax.swing.JTextArea"),int(_1) | H=[:/*inline*/
	javax.swing.JTextArea v0 = (javax.swing.JTextArea)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		int r = v0.getLineOfOffset(v1);
		Atom res = mem.newAtom(new IntegerFunctor(r));
		mem.relink(res, 0, me, 2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 2);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1,_2).

H=getLineCount(_0,_1) :- class(_0,"javax.swing.JTextArea") | H=[:/*inline*/
	javax.swing.JTextArea v0 = (javax.swing.JTextArea)me.nthAtom(0).getFunctor().getValue();
	try {
		int r = v0.getLineCount();
		Atom res = mem.newAtom(new IntegerFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=getLineStartOffset(_0,_1,_2) :- class(_0,"javax.swing.JTextArea"),int(_1) | H=[:/*inline*/
	javax.swing.JTextArea v0 = (javax.swing.JTextArea)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		int r = v0.getLineStartOffset(v1);
		Atom res = mem.newAtom(new IntegerFunctor(r));
		mem.relink(res, 0, me, 2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 2);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1,_2).

H=getLineEndOffset(_0,_1,_2) :- class(_0,"javax.swing.JTextArea"),int(_1) | H=[:/*inline*/
	javax.swing.JTextArea v0 = (javax.swing.JTextArea)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		int r = v0.getLineEndOffset(v1);
		Atom res = mem.newAtom(new IntegerFunctor(r));
		mem.relink(res, 0, me, 2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 2);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1,_2).

H=insert(_0,_1,_2) :- class(_0,"javax.swing.JTextArea"),string(_1),int(_2) | H=[:/*inline*/
	javax.swing.JTextArea v0 = (javax.swing.JTextArea)me.nthAtom(0).getFunctor().getValue();
	java.lang.String v1 = ((StringFunctor)me.nthAtom(1).getFunctor()).stringValue();
	int v2 = ((IntegerFunctor)me.nthAtom(2).getFunctor()).intValue();
	try {
		v0.insert(v1,v2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.remove();
	:](_0,_1,_2).

H=append(_0,_1) :- class(_0,"javax.swing.JTextArea"),string(_1) | H=[:/*inline*/
	javax.swing.JTextArea v0 = (javax.swing.JTextArea)me.nthAtom(0).getFunctor().getValue();
	java.lang.String v1 = ((StringFunctor)me.nthAtom(1).getFunctor()).stringValue();
	try {
		v0.append(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=replaceRange(_0,_1,_2,_3) :- class(_0,"javax.swing.JTextArea"),string(_1),int(_2),int(_3) | H=[:/*inline*/
	javax.swing.JTextArea v0 = (javax.swing.JTextArea)me.nthAtom(0).getFunctor().getValue();
	java.lang.String v1 = ((StringFunctor)me.nthAtom(1).getFunctor()).stringValue();
	int v2 = ((IntegerFunctor)me.nthAtom(2).getFunctor()).intValue();
	int v3 = ((IntegerFunctor)me.nthAtom(3).getFunctor()).intValue();
	try {
		v0.replaceRange(v1,v2,v3);
		mem.relink(me.nthAtom(0), 0, me, 4);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 4);
	}
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.nthAtom(3).remove();
	me.remove();
	:](_0,_1,_2,_3).

H=getRows(_0,_1) :- class(_0,"javax.swing.JTextArea") | H=[:/*inline*/
	javax.swing.JTextArea v0 = (javax.swing.JTextArea)me.nthAtom(0).getFunctor().getValue();
	try {
		int r = v0.getRows();
		Atom res = mem.newAtom(new IntegerFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setRows(_0,_1) :- class(_0,"javax.swing.JTextArea"),int(_1) | H=[:/*inline*/
	javax.swing.JTextArea v0 = (javax.swing.JTextArea)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		v0.setRows(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getColumns(_0,_1) :- class(_0,"javax.swing.JTextArea") | H=[:/*inline*/
	javax.swing.JTextArea v0 = (javax.swing.JTextArea)me.nthAtom(0).getFunctor().getValue();
	try {
		int r = v0.getColumns();
		Atom res = mem.newAtom(new IntegerFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setColumns(_0,_1) :- class(_0,"javax.swing.JTextArea"),int(_1) | H=[:/*inline*/
	javax.swing.JTextArea v0 = (javax.swing.JTextArea)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		v0.setColumns(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getPreferredSize(_0,_1) :- class(_0,"javax.swing.JTextArea") | H=[:/*inline*/
	javax.swing.JTextArea v0 = (javax.swing.JTextArea)me.nthAtom(0).getFunctor().getValue();
	try {
		java.awt.Dimension r = v0.getPreferredSize();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),java_awt_Dimension.use,(java_awt_Dimension.use:-()).

H=setFont(_0,_1) :- class(_0,"javax.swing.JTextArea"),class(_1,"java.awt.Font") | H=[:/*inline*/
	javax.swing.JTextArea v0 = (javax.swing.JTextArea)me.nthAtom(0).getFunctor().getValue();
	java.awt.Font v1 = (java.awt.Font)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setFont(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getScrollableTracksViewportWidth(_0,_1) :- class(_0,"javax.swing.JTextArea") | H=[:/*inline*/
	javax.swing.JTextArea v0 = (javax.swing.JTextArea)me.nthAtom(0).getFunctor().getValue();
	try {
		boolean r = v0.getScrollableTracksViewportWidth();
		Atom res = mem.newAtom(new SymbolFunctor(r?"true":"false", 1));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=getPreferredScrollableViewportSize(_0,_1) :- class(_0,"javax.swing.JTextArea") | H=[:/*inline*/
	javax.swing.JTextArea v0 = (javax.swing.JTextArea)me.nthAtom(0).getFunctor().getValue();
	try {
		java.awt.Dimension r = v0.getPreferredScrollableViewportSize();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),java_awt_Dimension.use,(java_awt_Dimension.use:-()).

H=getScrollableUnitIncrement(_0,_1,_2,_3,_4) :- class(_0,"javax.swing.JTextArea"),class(_1,"java.awt.Rectangle"),int(_2),int(_3) | H=[:/*inline*/
	javax.swing.JTextArea v0 = (javax.swing.JTextArea)me.nthAtom(0).getFunctor().getValue();
	java.awt.Rectangle v1 = (java.awt.Rectangle)me.nthAtom(1).getFunctor().getValue();
	int v2 = ((IntegerFunctor)me.nthAtom(2).getFunctor()).intValue();
	int v3 = ((IntegerFunctor)me.nthAtom(3).getFunctor()).intValue();
	try {
		int r = v0.getScrollableUnitIncrement(v1,v2,v3);
		Atom res = mem.newAtom(new IntegerFunctor(r));
		mem.relink(res, 0, me, 4);
		mem.relink(me.nthAtom(0), 0, me, 5);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 4);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 5);
	}
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.nthAtom(3).remove();
	me.remove();
	:](_0,_1,_2,_3,_4).

H=getAccessibleContext(_0,_1) :- class(_0,"javax.swing.JTextArea") | H=[:/*inline*/
	javax.swing.JTextArea v0 = (javax.swing.JTextArea)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.accessibility.AccessibleContext r = v0.getAccessibleContext();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),javax_accessibility_AccessibleContext.use,(javax_accessibility_AccessibleContext.use:-()).

}.

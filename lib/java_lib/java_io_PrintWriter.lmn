//-----------------------------------------------------
// The following code was generated by javalmn
// Wed Nov 22 20:46:50 2006
//-----------------------------------------------------
{module(java_io_PrintWriter).
H=java_io_PrintWriter.new(_0) :- class(_0,"java.io.Writer") | H=[:/*inline*/
	java.io.Writer v0 = (java.io.Writer)me.nthAtom(0).getFunctor().getValue();
	try {
		java.io.PrintWriter r = new java.io.PrintWriter(v0);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 1);
	}
	me.nthAtom(0).remove();
	me.remove();
	:](_0),java_io_Writer.use,(java_io_Writer.use:-()).

H=java_io_PrintWriter.new(_0,_1) :- class(_0,"java.io.Writer") | H=[:/*inline*/
	java.io.Writer v0 = (java.io.Writer)me.nthAtom(0).getFunctor().getValue();
	boolean v1 = ((SymbolFunctor)me.nthAtom(1).getFunctor()).getName().equals("true")?true:false;
	try {
		java.io.PrintWriter r = new java.io.PrintWriter(v0,v1);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 2);
	}
	me.nthAtom(0).remove();
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1),java_io_Writer.use,(java_io_Writer.use:-()).

H=java_io_PrintWriter.new(_0) :- class(_0,"java.io.OutputStream") | H=[:/*inline*/
	java.io.OutputStream v0 = (java.io.OutputStream)me.nthAtom(0).getFunctor().getValue();
	try {
		java.io.PrintWriter r = new java.io.PrintWriter(v0);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 1);
	}
	me.nthAtom(0).remove();
	me.remove();
	:](_0),java_io_Writer.use,(java_io_Writer.use:-()).

H=java_io_PrintWriter.new(_0,_1) :- class(_0,"java.io.OutputStream") | H=[:/*inline*/
	java.io.OutputStream v0 = (java.io.OutputStream)me.nthAtom(0).getFunctor().getValue();
	boolean v1 = ((SymbolFunctor)me.nthAtom(1).getFunctor()).getName().equals("true")?true:false;
	try {
		java.io.PrintWriter r = new java.io.PrintWriter(v0,v1);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 2);
	}
	me.nthAtom(0).remove();
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1),java_io_Writer.use,(java_io_Writer.use:-()).

H=java_io_PrintWriter.new(_0) :- string(_0) | H=[:/*inline*/
	java.lang.String v0 = ((StringFunctor)me.nthAtom(0).getFunctor()).stringValue();
	try {
		java.io.PrintWriter r = new java.io.PrintWriter(v0);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 1);
	}
	me.nthAtom(0).remove();
	me.remove();
	:](_0),java_io_Writer.use,(java_io_Writer.use:-()).

H=java_io_PrintWriter.new(_0,_1) :- string(_0),string(_1) | H=[:/*inline*/
	java.lang.String v0 = ((StringFunctor)me.nthAtom(0).getFunctor()).stringValue();
	java.lang.String v1 = ((StringFunctor)me.nthAtom(1).getFunctor()).stringValue();
	try {
		java.io.PrintWriter r = new java.io.PrintWriter(v0,v1);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 2);
	}
	me.nthAtom(0).remove();
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1),java_io_Writer.use,(java_io_Writer.use:-()).

H=java_io_PrintWriter.new(_0) :- class(_0,"java.io.File") | H=[:/*inline*/
	java.io.File v0 = (java.io.File)me.nthAtom(0).getFunctor().getValue();
	try {
		java.io.PrintWriter r = new java.io.PrintWriter(v0);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 1);
	}
	me.nthAtom(0).remove();
	me.remove();
	:](_0),java_io_Writer.use,(java_io_Writer.use:-()).

H=java_io_PrintWriter.new(_0,_1) :- class(_0,"java.io.File"),string(_1) | H=[:/*inline*/
	java.io.File v0 = (java.io.File)me.nthAtom(0).getFunctor().getValue();
	java.lang.String v1 = ((StringFunctor)me.nthAtom(1).getFunctor()).stringValue();
	try {
		java.io.PrintWriter r = new java.io.PrintWriter(v0,v1);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 2);
	}
	me.nthAtom(0).remove();
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1),java_io_Writer.use,(java_io_Writer.use:-()).

H=flush(_0) :- class(_0,"java.io.PrintWriter") | H=[:/*inline*/
	java.io.PrintWriter v0 = (java.io.PrintWriter)me.nthAtom(0).getFunctor().getValue();
	try {
		v0.flush();
		mem.relink(me.nthAtom(0), 0, me, 1);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 1);
	}
	me.remove();
	:](_0).

H=close(_0) :- class(_0,"java.io.PrintWriter") | H=[:/*inline*/
	java.io.PrintWriter v0 = (java.io.PrintWriter)me.nthAtom(0).getFunctor().getValue();
	try {
		v0.close();
		mem.relink(me.nthAtom(0), 0, me, 1);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 1);
	}
	me.remove();
	:](_0).

H=checkError(_0,_1) :- class(_0,"java.io.PrintWriter") | H=[:/*inline*/
	java.io.PrintWriter v0 = (java.io.PrintWriter)me.nthAtom(0).getFunctor().getValue();
	try {
		boolean r = v0.checkError();
		Atom res = mem.newAtom(new SymbolFunctor(r?"true":"false", 1));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=write(_0,_1) :- class(_0,"java.io.PrintWriter"),int(_1) | H=[:/*inline*/
	java.io.PrintWriter v0 = (java.io.PrintWriter)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		v0.write(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=write(_0,_1,_2,_3) :- class(_0,"java.io.PrintWriter"),string(_1),int(_2),int(_3) | H=[:/*inline*/
	java.io.PrintWriter v0 = (java.io.PrintWriter)me.nthAtom(0).getFunctor().getValue();
	java.lang.String v1 = ((StringFunctor)me.nthAtom(1).getFunctor()).stringValue();
	int v2 = ((IntegerFunctor)me.nthAtom(2).getFunctor()).intValue();
	int v3 = ((IntegerFunctor)me.nthAtom(3).getFunctor()).intValue();
	try {
		v0.write(v1,v2,v3);
		mem.relink(me.nthAtom(0), 0, me, 4);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 4);
	}
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.nthAtom(3).remove();
	me.remove();
	:](_0,_1,_2,_3).

H=write(_0,_1) :- class(_0,"java.io.PrintWriter"),string(_1) | H=[:/*inline*/
	java.io.PrintWriter v0 = (java.io.PrintWriter)me.nthAtom(0).getFunctor().getValue();
	java.lang.String v1 = ((StringFunctor)me.nthAtom(1).getFunctor()).stringValue();
	try {
		v0.write(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=print(_0,_1) :- class(_0,"java.io.PrintWriter") | H=[:/*inline*/
	java.io.PrintWriter v0 = (java.io.PrintWriter)me.nthAtom(0).getFunctor().getValue();
	boolean v1 = ((SymbolFunctor)me.nthAtom(1).getFunctor()).getName().equals("true")?true:false;
	try {
		v0.print(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=print(_0,_1) :- class(_0,"java.io.PrintWriter"),int(_1) | H=[:/*inline*/
	java.io.PrintWriter v0 = (java.io.PrintWriter)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		v0.print(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=print(_0,_1) :- class(_0,"java.io.PrintWriter"),int(_1) | H=[:/*inline*/
	java.io.PrintWriter v0 = (java.io.PrintWriter)me.nthAtom(0).getFunctor().getValue();
	long v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		v0.print(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=print(_0,_1) :- class(_0,"java.io.PrintWriter"),float(_1) | H=[:/*inline*/
	java.io.PrintWriter v0 = (java.io.PrintWriter)me.nthAtom(0).getFunctor().getValue();
	double v1 = ((FloatingFunctor)me.nthAtom(1).getFunctor()).floatValue();
	try {
		v0.print(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=print(_0,_1) :- class(_0,"java.io.PrintWriter"),string(_1) | H=[:/*inline*/
	java.io.PrintWriter v0 = (java.io.PrintWriter)me.nthAtom(0).getFunctor().getValue();
	java.lang.String v1 = ((StringFunctor)me.nthAtom(1).getFunctor()).stringValue();
	try {
		v0.print(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=print(_0,_1) :- class(_0,"java.io.PrintWriter"),class(_1,"java.lang.Object") | H=[:/*inline*/
	java.io.PrintWriter v0 = (java.io.PrintWriter)me.nthAtom(0).getFunctor().getValue();
	java.lang.Object v1 = (java.lang.Object)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.print(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=println(_0) :- class(_0,"java.io.PrintWriter") | H=[:/*inline*/
	java.io.PrintWriter v0 = (java.io.PrintWriter)me.nthAtom(0).getFunctor().getValue();
	try {
		v0.println();
		mem.relink(me.nthAtom(0), 0, me, 1);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 1);
	}
	me.remove();
	:](_0).

H=println(_0,_1) :- class(_0,"java.io.PrintWriter") | H=[:/*inline*/
	java.io.PrintWriter v0 = (java.io.PrintWriter)me.nthAtom(0).getFunctor().getValue();
	boolean v1 = ((SymbolFunctor)me.nthAtom(1).getFunctor()).getName().equals("true")?true:false;
	try {
		v0.println(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=println(_0,_1) :- class(_0,"java.io.PrintWriter"),int(_1) | H=[:/*inline*/
	java.io.PrintWriter v0 = (java.io.PrintWriter)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		v0.println(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=println(_0,_1) :- class(_0,"java.io.PrintWriter"),int(_1) | H=[:/*inline*/
	java.io.PrintWriter v0 = (java.io.PrintWriter)me.nthAtom(0).getFunctor().getValue();
	long v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		v0.println(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=println(_0,_1) :- class(_0,"java.io.PrintWriter"),float(_1) | H=[:/*inline*/
	java.io.PrintWriter v0 = (java.io.PrintWriter)me.nthAtom(0).getFunctor().getValue();
	double v1 = ((FloatingFunctor)me.nthAtom(1).getFunctor()).floatValue();
	try {
		v0.println(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=println(_0,_1) :- class(_0,"java.io.PrintWriter"),string(_1) | H=[:/*inline*/
	java.io.PrintWriter v0 = (java.io.PrintWriter)me.nthAtom(0).getFunctor().getValue();
	java.lang.String v1 = ((StringFunctor)me.nthAtom(1).getFunctor()).stringValue();
	try {
		v0.println(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=println(_0,_1) :- class(_0,"java.io.PrintWriter"),class(_1,"java.lang.Object") | H=[:/*inline*/
	java.io.PrintWriter v0 = (java.io.PrintWriter)me.nthAtom(0).getFunctor().getValue();
	java.lang.Object v1 = (java.lang.Object)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.println(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=append(_0,_1,_2) :- class(_0,"java.io.PrintWriter"),class(_1,"java.lang.CharSequence") | H=[:/*inline*/
	java.io.PrintWriter v0 = (java.io.PrintWriter)me.nthAtom(0).getFunctor().getValue();
	java.lang.CharSequence v1 = (java.lang.CharSequence)me.nthAtom(1).getFunctor().getValue();
	try {
		java.io.PrintWriter r = v0.append(v1);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 2);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1,_2),java_io_PrintWriter.use,(java_io_PrintWriter.use:-()).

H=append(_0,_1,_2,_3,_4) :- class(_0,"java.io.PrintWriter"),class(_1,"java.lang.CharSequence"),int(_2),int(_3) | H=[:/*inline*/
	java.io.PrintWriter v0 = (java.io.PrintWriter)me.nthAtom(0).getFunctor().getValue();
	java.lang.CharSequence v1 = (java.lang.CharSequence)me.nthAtom(1).getFunctor().getValue();
	int v2 = ((IntegerFunctor)me.nthAtom(2).getFunctor()).intValue();
	int v3 = ((IntegerFunctor)me.nthAtom(3).getFunctor()).intValue();
	try {
		java.io.PrintWriter r = v0.append(v1,v2,v3);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 4);
		mem.relink(me.nthAtom(0), 0, me, 5);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 4);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 5);
	}
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.nthAtom(3).remove();
	me.remove();
	:](_0,_1,_2,_3,_4),java_io_PrintWriter.use,(java_io_PrintWriter.use:-()).

H=append(_0,_1,_2,_3,_4) :- class(_0,"java.io.PrintWriter"),class(_1,"java.lang.CharSequence"),int(_2),int(_3) | H=[:/*inline*/
	java.io.PrintWriter v0 = (java.io.PrintWriter)me.nthAtom(0).getFunctor().getValue();
	java.lang.CharSequence v1 = (java.lang.CharSequence)me.nthAtom(1).getFunctor().getValue();
	int v2 = ((IntegerFunctor)me.nthAtom(2).getFunctor()).intValue();
	int v3 = ((IntegerFunctor)me.nthAtom(3).getFunctor()).intValue();
	try {
		java.io.Writer r = v0.append(v1,v2,v3);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 4);
		mem.relink(me.nthAtom(0), 0, me, 5);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 4);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 5);
	}
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.nthAtom(3).remove();
	me.remove();
	:](_0,_1,_2,_3,_4),java_io_Writer.use,(java_io_Writer.use:-()).

H=append(_0,_1,_2) :- class(_0,"java.io.PrintWriter"),class(_1,"java.lang.CharSequence") | H=[:/*inline*/
	java.io.PrintWriter v0 = (java.io.PrintWriter)me.nthAtom(0).getFunctor().getValue();
	java.lang.CharSequence v1 = (java.lang.CharSequence)me.nthAtom(1).getFunctor().getValue();
	try {
		java.io.Writer r = v0.append(v1);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 2);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1,_2),java_io_Writer.use,(java_io_Writer.use:-()).

H=append(_0,_1,_2,_3,_4) :- class(_0,"java.io.PrintWriter"),class(_1,"java.lang.CharSequence"),int(_2),int(_3) | H=[:/*inline*/
	java.io.PrintWriter v0 = (java.io.PrintWriter)me.nthAtom(0).getFunctor().getValue();
	java.lang.CharSequence v1 = (java.lang.CharSequence)me.nthAtom(1).getFunctor().getValue();
	int v2 = ((IntegerFunctor)me.nthAtom(2).getFunctor()).intValue();
	int v3 = ((IntegerFunctor)me.nthAtom(3).getFunctor()).intValue();
	try {
		java.lang.Appendable r = v0.append(v1,v2,v3);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 4);
		mem.relink(me.nthAtom(0), 0, me, 5);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 4);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 5);
	}
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.nthAtom(3).remove();
	me.remove();
	:](_0,_1,_2,_3,_4),java_lang_Appendable.use,(java_lang_Appendable.use:-()).

H=append(_0,_1,_2) :- class(_0,"java.io.PrintWriter"),class(_1,"java.lang.CharSequence") | H=[:/*inline*/
	java.io.PrintWriter v0 = (java.io.PrintWriter)me.nthAtom(0).getFunctor().getValue();
	java.lang.CharSequence v1 = (java.lang.CharSequence)me.nthAtom(1).getFunctor().getValue();
	try {
		java.lang.Appendable r = v0.append(v1);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 2);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1,_2),java_lang_Appendable.use,(java_lang_Appendable.use:-()).

}.

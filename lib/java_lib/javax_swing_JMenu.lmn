//-----------------------------------------------------
// The following code was generated by javalmn
// Tue Nov 21 22:06:13 2006
//-----------------------------------------------------
{module(javax_swing_JMenu).
H=javax_swing_JMenu.new() :- H=[:/*inline*/
	try {
		javax.swing.JMenu r = new javax.swing.JMenu();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 0);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 0);
	}
	me.remove();
	:](),javax_swing_JMenuItem.use,(javax_swing_JMenuItem.use:-()),javax_swing_AbstractButton.use,(javax_swing_AbstractButton.use:-()),javax_swing_JComponent.use,(javax_swing_JComponent.use:-()),java_awt_Container.use,(java_awt_Container.use:-()),java_awt_Component.use,(java_awt_Component.use:-()).

H=javax_swing_JMenu.new(_0) :- string(_0) | H=[:/*inline*/
	java.lang.String v0 = ((StringFunctor)me.nthAtom(0).getFunctor()).stringValue();
	try {
		javax.swing.JMenu r = new javax.swing.JMenu(v0);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 1);
	}
	me.nthAtom(0).remove();
	me.remove();
	:](_0),javax_swing_JMenuItem.use,(javax_swing_JMenuItem.use:-()),javax_swing_AbstractButton.use,(javax_swing_AbstractButton.use:-()),javax_swing_JComponent.use,(javax_swing_JComponent.use:-()),java_awt_Container.use,(java_awt_Container.use:-()),java_awt_Component.use,(java_awt_Component.use:-()).

H=javax_swing_JMenu.new(_0) :- class(_0,"javax.swing.Action") | H=[:/*inline*/
	javax.swing.Action v0 = (javax.swing.Action)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.JMenu r = new javax.swing.JMenu(v0);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 1);
	}
	me.nthAtom(0).remove();
	me.remove();
	:](_0),javax_swing_JMenuItem.use,(javax_swing_JMenuItem.use:-()),javax_swing_AbstractButton.use,(javax_swing_AbstractButton.use:-()),javax_swing_JComponent.use,(javax_swing_JComponent.use:-()),java_awt_Container.use,(java_awt_Container.use:-()),java_awt_Component.use,(java_awt_Component.use:-()).

H=javax_swing_JMenu.new(_0,_1) :- string(_0) | H=[:/*inline*/
	java.lang.String v0 = ((StringFunctor)me.nthAtom(0).getFunctor()).stringValue();
	boolean v1 = ((SymbolFunctor)me.nthAtom(1).getFunctor()).getName().equals("true")?true:false;
	try {
		javax.swing.JMenu r = new javax.swing.JMenu(v0,v1);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 2);
	}
	me.nthAtom(0).remove();
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1),javax_swing_JMenuItem.use,(javax_swing_JMenuItem.use:-()),javax_swing_AbstractButton.use,(javax_swing_AbstractButton.use:-()),javax_swing_JComponent.use,(javax_swing_JComponent.use:-()),java_awt_Container.use,(java_awt_Container.use:-()),java_awt_Component.use,(java_awt_Component.use:-()).

H=updateUI(_0) :- class(_0,"javax.swing.JMenu") | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	try {
		v0.updateUI();
		mem.relink(me.nthAtom(0), 0, me, 1);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 1);
	}
	me.remove();
	:](_0).

H=getUIClassID(_0,_1) :- class(_0,"javax.swing.JMenu") | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	try {
		java.lang.String r = v0.getUIClassID();
		Atom res = mem.newAtom(new StringFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setModel(_0,_1) :- class(_0,"javax.swing.JMenu"),class(_1,"javax.swing.ButtonModel") | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	javax.swing.ButtonModel v1 = (javax.swing.ButtonModel)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setModel(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=isSelected(_0,_1) :- class(_0,"javax.swing.JMenu") | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	try {
		boolean r = v0.isSelected();
		Atom res = mem.newAtom(new SymbolFunctor(r?"true":"false", 1));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setSelected(_0,_1) :- class(_0,"javax.swing.JMenu") | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	boolean v1 = ((SymbolFunctor)me.nthAtom(1).getFunctor()).getName().equals("true")?true:false;
	try {
		v0.setSelected(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=isPopupMenuVisible(_0,_1) :- class(_0,"javax.swing.JMenu") | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	try {
		boolean r = v0.isPopupMenuVisible();
		Atom res = mem.newAtom(new SymbolFunctor(r?"true":"false", 1));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setPopupMenuVisible(_0,_1) :- class(_0,"javax.swing.JMenu") | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	boolean v1 = ((SymbolFunctor)me.nthAtom(1).getFunctor()).getName().equals("true")?true:false;
	try {
		v0.setPopupMenuVisible(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getDelay(_0,_1) :- class(_0,"javax.swing.JMenu") | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	try {
		int r = v0.getDelay();
		Atom res = mem.newAtom(new IntegerFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setDelay(_0,_1) :- class(_0,"javax.swing.JMenu"),int(_1) | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		v0.setDelay(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=setMenuLocation(_0,_1,_2) :- class(_0,"javax.swing.JMenu"),int(_1),int(_2) | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	int v2 = ((IntegerFunctor)me.nthAtom(2).getFunctor()).intValue();
	try {
		v0.setMenuLocation(v1,v2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.remove();
	:](_0,_1,_2).

H=add(_0,_1,_2) :- class(_0,"javax.swing.JMenu"),class(_1,"javax.swing.JMenuItem") | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	javax.swing.JMenuItem v1 = (javax.swing.JMenuItem)me.nthAtom(1).getFunctor().getValue();
	try {
		javax.swing.JMenuItem r = v0.add(v1);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 2);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1,_2).

H=add(_0,_1,_2) :- class(_0,"javax.swing.JMenu"),class(_1,"java.awt.Component") | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	java.awt.Component v1 = (java.awt.Component)me.nthAtom(1).getFunctor().getValue();
	try {
		java.awt.Component r = v0.add(v1);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 2);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1,_2).

H=add(_0,_1,_2,_3) :- class(_0,"javax.swing.JMenu"),class(_1,"java.awt.Component"),int(_2) | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	java.awt.Component v1 = (java.awt.Component)me.nthAtom(1).getFunctor().getValue();
	int v2 = ((IntegerFunctor)me.nthAtom(2).getFunctor()).intValue();
	try {
		java.awt.Component r = v0.add(v1,v2);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 3);
		mem.relink(me.nthAtom(0), 0, me, 4);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 3);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 4);
	}
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.remove();
	:](_0,_1,_2,_3).

H=add(_0,_1,_2) :- class(_0,"javax.swing.JMenu"),string(_1) | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	java.lang.String v1 = ((StringFunctor)me.nthAtom(1).getFunctor()).stringValue();
	try {
		javax.swing.JMenuItem r = v0.add(v1);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 2);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1,_2).

H=add(_0,_1,_2) :- class(_0,"javax.swing.JMenu"),class(_1,"javax.swing.Action") | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	javax.swing.Action v1 = (javax.swing.Action)me.nthAtom(1).getFunctor().getValue();
	try {
		javax.swing.JMenuItem r = v0.add(v1);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 2);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1,_2).

H=addSeparator(_0) :- class(_0,"javax.swing.JMenu") | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	try {
		v0.addSeparator();
		mem.relink(me.nthAtom(0), 0, me, 1);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 1);
	}
	me.remove();
	:](_0).

H=insert(_0,_1,_2) :- class(_0,"javax.swing.JMenu"),string(_1),int(_2) | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	java.lang.String v1 = ((StringFunctor)me.nthAtom(1).getFunctor()).stringValue();
	int v2 = ((IntegerFunctor)me.nthAtom(2).getFunctor()).intValue();
	try {
		v0.insert(v1,v2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.remove();
	:](_0,_1,_2).

H=insert(_0,_1,_2,_3) :- class(_0,"javax.swing.JMenu"),class(_1,"javax.swing.JMenuItem"),int(_2) | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	javax.swing.JMenuItem v1 = (javax.swing.JMenuItem)me.nthAtom(1).getFunctor().getValue();
	int v2 = ((IntegerFunctor)me.nthAtom(2).getFunctor()).intValue();
	try {
		javax.swing.JMenuItem r = v0.insert(v1,v2);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 3);
		mem.relink(me.nthAtom(0), 0, me, 4);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 3);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 4);
	}
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.remove();
	:](_0,_1,_2,_3).

H=insert(_0,_1,_2,_3) :- class(_0,"javax.swing.JMenu"),class(_1,"javax.swing.Action"),int(_2) | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	javax.swing.Action v1 = (javax.swing.Action)me.nthAtom(1).getFunctor().getValue();
	int v2 = ((IntegerFunctor)me.nthAtom(2).getFunctor()).intValue();
	try {
		javax.swing.JMenuItem r = v0.insert(v1,v2);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 3);
		mem.relink(me.nthAtom(0), 0, me, 4);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 3);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 4);
	}
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.remove();
	:](_0,_1,_2,_3).

H=insertSeparator(_0,_1) :- class(_0,"javax.swing.JMenu"),int(_1) | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		v0.insertSeparator(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getItem(_0,_1,_2) :- class(_0,"javax.swing.JMenu"),int(_1) | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		javax.swing.JMenuItem r = v0.getItem(v1);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 2);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1,_2).

H=getItemCount(_0,_1) :- class(_0,"javax.swing.JMenu") | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	try {
		int r = v0.getItemCount();
		Atom res = mem.newAtom(new IntegerFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=isTearOff(_0,_1) :- class(_0,"javax.swing.JMenu") | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	try {
		boolean r = v0.isTearOff();
		Atom res = mem.newAtom(new SymbolFunctor(r?"true":"false", 1));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=remove(_0,_1) :- class(_0,"javax.swing.JMenu"),class(_1,"javax.swing.JMenuItem") | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	javax.swing.JMenuItem v1 = (javax.swing.JMenuItem)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.remove(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=remove(_0,_1) :- class(_0,"javax.swing.JMenu"),int(_1) | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		v0.remove(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=remove(_0,_1) :- class(_0,"javax.swing.JMenu"),class(_1,"java.awt.Component") | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	java.awt.Component v1 = (java.awt.Component)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.remove(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=removeAll(_0) :- class(_0,"javax.swing.JMenu") | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	try {
		v0.removeAll();
		mem.relink(me.nthAtom(0), 0, me, 1);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 1);
	}
	me.remove();
	:](_0).

H=getMenuComponentCount(_0,_1) :- class(_0,"javax.swing.JMenu") | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	try {
		int r = v0.getMenuComponentCount();
		Atom res = mem.newAtom(new IntegerFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=getMenuComponent(_0,_1,_2) :- class(_0,"javax.swing.JMenu"),int(_1) | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		java.awt.Component r = v0.getMenuComponent(v1);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 2);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1,_2).

H=getMenuComponents(_0,_1) :- class(_0,"javax.swing.JMenu") | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	try {
		java.awt.Component[] r = v0.getMenuComponents();
		runtime.Link l = new runtime.Link(me.nthAtom(1), 0);
		util.Util.makeList(l, java.util.Arrays.asList(r));
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=isTopLevelMenu(_0,_1) :- class(_0,"javax.swing.JMenu") | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	try {
		boolean r = v0.isTopLevelMenu();
		Atom res = mem.newAtom(new SymbolFunctor(r?"true":"false", 1));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=isMenuComponent(_0,_1,_2) :- class(_0,"javax.swing.JMenu"),class(_1,"java.awt.Component") | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	java.awt.Component v1 = (java.awt.Component)me.nthAtom(1).getFunctor().getValue();
	try {
		boolean r = v0.isMenuComponent(v1);
		Atom res = mem.newAtom(new SymbolFunctor(r?"true":"false", 1));
		mem.relink(res, 0, me, 2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 2);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1,_2).

H=getPopupMenu(_0,_1) :- class(_0,"javax.swing.JMenu") | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.JPopupMenu r = v0.getPopupMenu();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=addMenuListener(_0,_1) :- class(_0,"javax.swing.JMenu"),class(_1,"javax.swing.event.MenuListener") | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	javax.swing.event.MenuListener v1 = (javax.swing.event.MenuListener)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.addMenuListener(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=removeMenuListener(_0,_1) :- class(_0,"javax.swing.JMenu"),class(_1,"javax.swing.event.MenuListener") | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	javax.swing.event.MenuListener v1 = (javax.swing.event.MenuListener)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.removeMenuListener(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getMenuListeners(_0,_1) :- class(_0,"javax.swing.JMenu") | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.event.MenuListener[] r = v0.getMenuListeners();
		runtime.Link l = new runtime.Link(me.nthAtom(1), 0);
		util.Util.makeList(l, java.util.Arrays.asList(r));
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=menuSelectionChanged(_0,_1) :- class(_0,"javax.swing.JMenu") | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	boolean v1 = ((SymbolFunctor)me.nthAtom(1).getFunctor()).getName().equals("true")?true:false;
	try {
		v0.menuSelectionChanged(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getSubElements(_0,_1) :- class(_0,"javax.swing.JMenu") | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.MenuElement[] r = v0.getSubElements();
		runtime.Link l = new runtime.Link(me.nthAtom(1), 0);
		util.Util.makeList(l, java.util.Arrays.asList(r));
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=getComponent(_0,_1) :- class(_0,"javax.swing.JMenu") | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	try {
		java.awt.Component r = v0.getComponent();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=applyComponentOrientation(_0,_1) :- class(_0,"javax.swing.JMenu"),class(_1,"java.awt.ComponentOrientation") | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	java.awt.ComponentOrientation v1 = (java.awt.ComponentOrientation)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.applyComponentOrientation(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=setComponentOrientation(_0,_1) :- class(_0,"javax.swing.JMenu"),class(_1,"java.awt.ComponentOrientation") | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	java.awt.ComponentOrientation v1 = (java.awt.ComponentOrientation)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setComponentOrientation(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=setAccelerator(_0,_1) :- class(_0,"javax.swing.JMenu"),class(_1,"javax.swing.KeyStroke") | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	javax.swing.KeyStroke v1 = (javax.swing.KeyStroke)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setAccelerator(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=doClick(_0,_1) :- class(_0,"javax.swing.JMenu"),int(_1) | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		v0.doClick(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getAccessibleContext(_0,_1) :- class(_0,"javax.swing.JMenu") | H=[:/*inline*/
	javax.swing.JMenu v0 = (javax.swing.JMenu)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.accessibility.AccessibleContext r = v0.getAccessibleContext();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

}.

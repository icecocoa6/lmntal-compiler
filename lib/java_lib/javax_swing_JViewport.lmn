//-----------------------------------------------------
// The following code was generated by class2module.pl 
// Wed Dec 13 12:32:49 2006
//-----------------------------------------------------
{module(javax_swing_JViewport).
H=javax_swing_JViewport.blit_scroll_mode :- H=[:/*inline*/
	int r = javax.swing.JViewport.BLIT_SCROLL_MODE;
	Atom res = mem.newAtom(new IntegerFunctor(r));
	mem.relink(res, 0, me, 0);
	me.remove();
	:].

H=javax_swing_JViewport.backingstore_scroll_mode :- H=[:/*inline*/
	int r = javax.swing.JViewport.BACKINGSTORE_SCROLL_MODE;
	Atom res = mem.newAtom(new IntegerFunctor(r));
	mem.relink(res, 0, me, 0);
	me.remove();
	:].

H=javax_swing_JViewport.simple_scroll_mode :- H=[:/*inline*/
	int r = javax.swing.JViewport.SIMPLE_SCROLL_MODE;
	Atom res = mem.newAtom(new IntegerFunctor(r));
	mem.relink(res, 0, me, 0);
	me.remove();
	:].

H=javax_swing_JViewport.new() :- H=[:/*inline*/
	try {
		javax.swing.JViewport r = new javax.swing.JViewport();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 0);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 0);
	}
	me.remove();
	:](),javax_swing_JComponent.use,(javax_swing_JComponent.use:-()),java_awt_Container.use,(java_awt_Container.use:-()),java_awt_Component.use,(java_awt_Component.use:-()).

H=getUI(_0,_1) :- class(_0,"javax.swing.JViewport") | H=[:/*inline*/
	javax.swing.JViewport v0 = (javax.swing.JViewport)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.plaf.ViewportUI r = v0.getUI();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),javax_swing_plaf_ViewportUI.use,(javax_swing_plaf_ViewportUI.use:-()).

H=setUI(_0,_1) :- class(_0,"javax.swing.JViewport"),class(_1,"javax.swing.plaf.ViewportUI") | H=[:/*inline*/
	javax.swing.JViewport v0 = (javax.swing.JViewport)me.nthAtom(0).getFunctor().getValue();
	javax.swing.plaf.ViewportUI v1 = (javax.swing.plaf.ViewportUI)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setUI(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=updateUI(_0) :- class(_0,"javax.swing.JViewport") | H=[:/*inline*/
	javax.swing.JViewport v0 = (javax.swing.JViewport)me.nthAtom(0).getFunctor().getValue();
	try {
		v0.updateUI();
		mem.relink(me.nthAtom(0), 0, me, 1);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 1);
	}
	me.remove();
	:](_0).

H=getUIClassID(_0,_1) :- class(_0,"javax.swing.JViewport") | H=[:/*inline*/
	javax.swing.JViewport v0 = (javax.swing.JViewport)me.nthAtom(0).getFunctor().getValue();
	try {
		java.lang.String r = v0.getUIClassID();
		Atom res = mem.newAtom(new StringFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),java_lang_String.use,(java_lang_String.use:-()).

H=remove(_0,_1) :- class(_0,"javax.swing.JViewport"),class(_1,"java.awt.Component") | H=[:/*inline*/
	javax.swing.JViewport v0 = (javax.swing.JViewport)me.nthAtom(0).getFunctor().getValue();
	java.awt.Component v1 = (java.awt.Component)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.remove(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=scrollRectToVisible(_0,_1) :- class(_0,"javax.swing.JViewport"),class(_1,"java.awt.Rectangle") | H=[:/*inline*/
	javax.swing.JViewport v0 = (javax.swing.JViewport)me.nthAtom(0).getFunctor().getValue();
	java.awt.Rectangle v1 = (java.awt.Rectangle)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.scrollRectToVisible(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=setBorder(_0,_1) :- class(_0,"javax.swing.JViewport"),class(_1,"javax.swing.border.Border") | H=[:/*inline*/
	javax.swing.JViewport v0 = (javax.swing.JViewport)me.nthAtom(0).getFunctor().getValue();
	javax.swing.border.Border v1 = (javax.swing.border.Border)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setBorder(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getInsets(_0,_1) :- class(_0,"javax.swing.JViewport") | H=[:/*inline*/
	javax.swing.JViewport v0 = (javax.swing.JViewport)me.nthAtom(0).getFunctor().getValue();
	try {
		java.awt.Insets r = v0.getInsets();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),java_awt_Insets.use,(java_awt_Insets.use:-()).

H=getInsets(_0,_1,_2) :- class(_0,"javax.swing.JViewport"),class(_1,"java.awt.Insets") | H=[:/*inline*/
	javax.swing.JViewport v0 = (javax.swing.JViewport)me.nthAtom(0).getFunctor().getValue();
	java.awt.Insets v1 = (java.awt.Insets)me.nthAtom(1).getFunctor().getValue();
	try {
		java.awt.Insets r = v0.getInsets(v1);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 2);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1,_2),java_awt_Insets.use,(java_awt_Insets.use:-()).

H=isOptimizedDrawingEnabled(_0,_1) :- class(_0,"javax.swing.JViewport") | H=[:/*inline*/
	javax.swing.JViewport v0 = (javax.swing.JViewport)me.nthAtom(0).getFunctor().getValue();
	try {
		boolean r = v0.isOptimizedDrawingEnabled();
		Atom res = mem.newAtom(new SymbolFunctor(r?"true":"false", 1));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=paint(_0,_1) :- class(_0,"javax.swing.JViewport"),class(_1,"java.awt.Graphics") | H=[:/*inline*/
	javax.swing.JViewport v0 = (javax.swing.JViewport)me.nthAtom(0).getFunctor().getValue();
	java.awt.Graphics v1 = (java.awt.Graphics)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.paint(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=reshape(_0,_1,_2,_3,_4) :- class(_0,"javax.swing.JViewport"),int(_1),int(_2),int(_3),int(_4) | H=[:/*inline*/
	javax.swing.JViewport v0 = (javax.swing.JViewport)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	int v2 = ((IntegerFunctor)me.nthAtom(2).getFunctor()).intValue();
	int v3 = ((IntegerFunctor)me.nthAtom(3).getFunctor()).intValue();
	int v4 = ((IntegerFunctor)me.nthAtom(4).getFunctor()).intValue();
	try {
		v0.reshape(v1,v2,v3,v4);
		mem.relink(me.nthAtom(0), 0, me, 5);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 5);
	}
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.nthAtom(3).remove();
	me.nthAtom(4).remove();
	me.remove();
	:](_0,_1,_2,_3,_4).

H=setScrollMode(_0,_1) :- class(_0,"javax.swing.JViewport"),int(_1) | H=[:/*inline*/
	javax.swing.JViewport v0 = (javax.swing.JViewport)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		v0.setScrollMode(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getScrollMode(_0,_1) :- class(_0,"javax.swing.JViewport") | H=[:/*inline*/
	javax.swing.JViewport v0 = (javax.swing.JViewport)me.nthAtom(0).getFunctor().getValue();
	try {
		int r = v0.getScrollMode();
		Atom res = mem.newAtom(new IntegerFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=isBackingStoreEnabled(_0,_1) :- class(_0,"javax.swing.JViewport") | H=[:/*inline*/
	javax.swing.JViewport v0 = (javax.swing.JViewport)me.nthAtom(0).getFunctor().getValue();
	try {
		boolean r = v0.isBackingStoreEnabled();
		Atom res = mem.newAtom(new SymbolFunctor(r?"true":"false", 1));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setBackingStoreEnabled(_0,true) :- class(_0,"javax.swing.JViewport") | H=[:/*inline*/
	javax.swing.JViewport v0 = (javax.swing.JViewport)me.nthAtom(0).getFunctor().getValue();
	boolean v1 = true;
	try {
		v0.setBackingStoreEnabled(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,true).

H=setBackingStoreEnabled(_0,false) :- class(_0,"javax.swing.JViewport") | H=[:/*inline*/
	javax.swing.JViewport v0 = (javax.swing.JViewport)me.nthAtom(0).getFunctor().getValue();
	boolean v1 = false;
	try {
		v0.setBackingStoreEnabled(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,false).

H=getView(_0,_1) :- class(_0,"javax.swing.JViewport") | H=[:/*inline*/
	javax.swing.JViewport v0 = (javax.swing.JViewport)me.nthAtom(0).getFunctor().getValue();
	try {
		java.awt.Component r = v0.getView();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),java_awt_Component.use,(java_awt_Component.use:-()).

H=setView(_0,_1) :- class(_0,"javax.swing.JViewport"),class(_1,"java.awt.Component") | H=[:/*inline*/
	javax.swing.JViewport v0 = (javax.swing.JViewport)me.nthAtom(0).getFunctor().getValue();
	java.awt.Component v1 = (java.awt.Component)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setView(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getViewSize(_0,_1) :- class(_0,"javax.swing.JViewport") | H=[:/*inline*/
	javax.swing.JViewport v0 = (javax.swing.JViewport)me.nthAtom(0).getFunctor().getValue();
	try {
		java.awt.Dimension r = v0.getViewSize();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),java_awt_Dimension.use,(java_awt_Dimension.use:-()).

H=setViewSize(_0,_1) :- class(_0,"javax.swing.JViewport"),class(_1,"java.awt.Dimension") | H=[:/*inline*/
	javax.swing.JViewport v0 = (javax.swing.JViewport)me.nthAtom(0).getFunctor().getValue();
	java.awt.Dimension v1 = (java.awt.Dimension)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setViewSize(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getViewPosition(_0,_1) :- class(_0,"javax.swing.JViewport") | H=[:/*inline*/
	javax.swing.JViewport v0 = (javax.swing.JViewport)me.nthAtom(0).getFunctor().getValue();
	try {
		java.awt.Point r = v0.getViewPosition();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),java_awt_Point.use,(java_awt_Point.use:-()).

H=setViewPosition(_0,_1) :- class(_0,"javax.swing.JViewport"),class(_1,"java.awt.Point") | H=[:/*inline*/
	javax.swing.JViewport v0 = (javax.swing.JViewport)me.nthAtom(0).getFunctor().getValue();
	java.awt.Point v1 = (java.awt.Point)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setViewPosition(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getViewRect(_0,_1) :- class(_0,"javax.swing.JViewport") | H=[:/*inline*/
	javax.swing.JViewport v0 = (javax.swing.JViewport)me.nthAtom(0).getFunctor().getValue();
	try {
		java.awt.Rectangle r = v0.getViewRect();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),java_awt_Rectangle.use,(java_awt_Rectangle.use:-()).

H=getExtentSize(_0,_1) :- class(_0,"javax.swing.JViewport") | H=[:/*inline*/
	javax.swing.JViewport v0 = (javax.swing.JViewport)me.nthAtom(0).getFunctor().getValue();
	try {
		java.awt.Dimension r = v0.getExtentSize();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),java_awt_Dimension.use,(java_awt_Dimension.use:-()).

H=toViewCoordinates(_0,_1,_2) :- class(_0,"javax.swing.JViewport"),class(_1,"java.awt.Dimension") | H=[:/*inline*/
	javax.swing.JViewport v0 = (javax.swing.JViewport)me.nthAtom(0).getFunctor().getValue();
	java.awt.Dimension v1 = (java.awt.Dimension)me.nthAtom(1).getFunctor().getValue();
	try {
		java.awt.Dimension r = v0.toViewCoordinates(v1);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 2);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1,_2),java_awt_Dimension.use,(java_awt_Dimension.use:-()).

H=toViewCoordinates(_0,_1,_2) :- class(_0,"javax.swing.JViewport"),class(_1,"java.awt.Point") | H=[:/*inline*/
	javax.swing.JViewport v0 = (javax.swing.JViewport)me.nthAtom(0).getFunctor().getValue();
	java.awt.Point v1 = (java.awt.Point)me.nthAtom(1).getFunctor().getValue();
	try {
		java.awt.Point r = v0.toViewCoordinates(v1);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 2);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1,_2),java_awt_Point.use,(java_awt_Point.use:-()).

H=setExtentSize(_0,_1) :- class(_0,"javax.swing.JViewport"),class(_1,"java.awt.Dimension") | H=[:/*inline*/
	javax.swing.JViewport v0 = (javax.swing.JViewport)me.nthAtom(0).getFunctor().getValue();
	java.awt.Dimension v1 = (java.awt.Dimension)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setExtentSize(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=addChangeListener(_0,_1) :- class(_0,"javax.swing.JViewport"),class(_1,"javax.swing.event.ChangeListener") | H=[:/*inline*/
	javax.swing.JViewport v0 = (javax.swing.JViewport)me.nthAtom(0).getFunctor().getValue();
	javax.swing.event.ChangeListener v1 = (javax.swing.event.ChangeListener)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.addChangeListener(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=removeChangeListener(_0,_1) :- class(_0,"javax.swing.JViewport"),class(_1,"javax.swing.event.ChangeListener") | H=[:/*inline*/
	javax.swing.JViewport v0 = (javax.swing.JViewport)me.nthAtom(0).getFunctor().getValue();
	javax.swing.event.ChangeListener v1 = (javax.swing.event.ChangeListener)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.removeChangeListener(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getChangeListeners(_0,_1) :- class(_0,"javax.swing.JViewport") | H=[:/*inline*/
	javax.swing.JViewport v0 = (javax.swing.JViewport)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.event.ChangeListener[] r = v0.getChangeListeners();
		runtime.Link l = new runtime.Link(me.nthAtom(1), 0);
		util.Util.makeList(l, java.util.Arrays.asList(r));
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=repaint(_0,_1,_2,_3,_4,_5) :- class(_0,"javax.swing.JViewport"),int(_1),int(_2),int(_3),int(_4),int(_5) | H=[:/*inline*/
	javax.swing.JViewport v0 = (javax.swing.JViewport)me.nthAtom(0).getFunctor().getValue();
	long v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	int v2 = ((IntegerFunctor)me.nthAtom(2).getFunctor()).intValue();
	int v3 = ((IntegerFunctor)me.nthAtom(3).getFunctor()).intValue();
	int v4 = ((IntegerFunctor)me.nthAtom(4).getFunctor()).intValue();
	int v5 = ((IntegerFunctor)me.nthAtom(5).getFunctor()).intValue();
	try {
		v0.repaint(v1,v2,v3,v4,v5);
		mem.relink(me.nthAtom(0), 0, me, 6);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 6);
	}
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.nthAtom(3).remove();
	me.nthAtom(4).remove();
	me.nthAtom(5).remove();
	me.remove();
	:](_0,_1,_2,_3,_4,_5).

H=getAccessibleContext(_0,_1) :- class(_0,"javax.swing.JViewport") | H=[:/*inline*/
	javax.swing.JViewport v0 = (javax.swing.JViewport)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.accessibility.AccessibleContext r = v0.getAccessibleContext();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),javax_accessibility_AccessibleContext.use,(javax_accessibility_AccessibleContext.use:-()).

}.

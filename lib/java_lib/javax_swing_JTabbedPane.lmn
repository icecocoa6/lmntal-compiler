//-----------------------------------------------------
// The following code was generated by class2module.pl 
// Wed Dec 13 12:32:41 2006
//-----------------------------------------------------
{module(javax_swing_JTabbedPane).
H=javax_swing_JTabbedPane.wrap_tab_layout :- H=[:/*inline*/
	int r = javax.swing.JTabbedPane.WRAP_TAB_LAYOUT;
	Atom res = mem.newAtom(new IntegerFunctor(r));
	mem.relink(res, 0, me, 0);
	me.remove();
	:].

H=javax_swing_JTabbedPane.scroll_tab_layout :- H=[:/*inline*/
	int r = javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT;
	Atom res = mem.newAtom(new IntegerFunctor(r));
	mem.relink(res, 0, me, 0);
	me.remove();
	:].

H=javax_swing_JTabbedPane.new() :- H=[:/*inline*/
	try {
		javax.swing.JTabbedPane r = new javax.swing.JTabbedPane();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 0);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 0);
	}
	me.remove();
	:](),javax_swing_JComponent.use,(javax_swing_JComponent.use:-()),java_awt_Container.use,(java_awt_Container.use:-()),java_awt_Component.use,(java_awt_Component.use:-()).

H=javax_swing_JTabbedPane.new(_0) :- int(_0) | H=[:/*inline*/
	int v0 = ((IntegerFunctor)me.nthAtom(0).getFunctor()).intValue();
	try {
		javax.swing.JTabbedPane r = new javax.swing.JTabbedPane(v0);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 1);
	}
	me.nthAtom(0).remove();
	me.remove();
	:](_0),javax_swing_JComponent.use,(javax_swing_JComponent.use:-()),java_awt_Container.use,(java_awt_Container.use:-()),java_awt_Component.use,(java_awt_Component.use:-()).

H=javax_swing_JTabbedPane.new(_0,_1) :- int(_0),int(_1) | H=[:/*inline*/
	int v0 = ((IntegerFunctor)me.nthAtom(0).getFunctor()).intValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		javax.swing.JTabbedPane r = new javax.swing.JTabbedPane(v0,v1);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new ObjectFunctor(e));
		mem.relink(res, 0, me, 2);
	}
	me.nthAtom(0).remove();
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1),javax_swing_JComponent.use,(javax_swing_JComponent.use:-()),java_awt_Container.use,(java_awt_Container.use:-()),java_awt_Component.use,(java_awt_Component.use:-()).

H=getUI(_0,_1) :- class(_0,"javax.swing.JTabbedPane") | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.plaf.TabbedPaneUI r = v0.getUI();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),javax_swing_plaf_TabbedPaneUI.use,(javax_swing_plaf_TabbedPaneUI.use:-()).

H=setUI(_0,_1) :- class(_0,"javax.swing.JTabbedPane"),class(_1,"javax.swing.plaf.TabbedPaneUI") | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	javax.swing.plaf.TabbedPaneUI v1 = (javax.swing.plaf.TabbedPaneUI)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setUI(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=updateUI(_0) :- class(_0,"javax.swing.JTabbedPane") | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	try {
		v0.updateUI();
		mem.relink(me.nthAtom(0), 0, me, 1);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 1);
	}
	me.remove();
	:](_0).

H=getUIClassID(_0,_1) :- class(_0,"javax.swing.JTabbedPane") | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	try {
		java.lang.String r = v0.getUIClassID();
		Atom res = mem.newAtom(new StringFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),java_lang_String.use,(java_lang_String.use:-()).

H=addChangeListener(_0,_1) :- class(_0,"javax.swing.JTabbedPane"),class(_1,"javax.swing.event.ChangeListener") | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	javax.swing.event.ChangeListener v1 = (javax.swing.event.ChangeListener)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.addChangeListener(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=removeChangeListener(_0,_1) :- class(_0,"javax.swing.JTabbedPane"),class(_1,"javax.swing.event.ChangeListener") | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	javax.swing.event.ChangeListener v1 = (javax.swing.event.ChangeListener)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.removeChangeListener(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getChangeListeners(_0,_1) :- class(_0,"javax.swing.JTabbedPane") | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.event.ChangeListener[] r = v0.getChangeListeners();
		runtime.Link l = new runtime.Link(me.nthAtom(1), 0);
		util.Util.makeList(l, java.util.Arrays.asList(r));
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=getModel(_0,_1) :- class(_0,"javax.swing.JTabbedPane") | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.swing.SingleSelectionModel r = v0.getModel();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),javax_swing_SingleSelectionModel.use,(javax_swing_SingleSelectionModel.use:-()).

H=setModel(_0,_1) :- class(_0,"javax.swing.JTabbedPane"),class(_1,"javax.swing.SingleSelectionModel") | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	javax.swing.SingleSelectionModel v1 = (javax.swing.SingleSelectionModel)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setModel(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getTabPlacement(_0,_1) :- class(_0,"javax.swing.JTabbedPane") | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	try {
		int r = v0.getTabPlacement();
		Atom res = mem.newAtom(new IntegerFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setTabPlacement(_0,_1) :- class(_0,"javax.swing.JTabbedPane"),int(_1) | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		v0.setTabPlacement(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getTabLayoutPolicy(_0,_1) :- class(_0,"javax.swing.JTabbedPane") | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	try {
		int r = v0.getTabLayoutPolicy();
		Atom res = mem.newAtom(new IntegerFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setTabLayoutPolicy(_0,_1) :- class(_0,"javax.swing.JTabbedPane"),int(_1) | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		v0.setTabLayoutPolicy(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getSelectedIndex(_0,_1) :- class(_0,"javax.swing.JTabbedPane") | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	try {
		int r = v0.getSelectedIndex();
		Atom res = mem.newAtom(new IntegerFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=setSelectedIndex(_0,_1) :- class(_0,"javax.swing.JTabbedPane"),int(_1) | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		v0.setSelectedIndex(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=getSelectedComponent(_0,_1) :- class(_0,"javax.swing.JTabbedPane") | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	try {
		java.awt.Component r = v0.getSelectedComponent();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),java_awt_Component.use,(java_awt_Component.use:-()).

H=setSelectedComponent(_0,_1) :- class(_0,"javax.swing.JTabbedPane"),class(_1,"java.awt.Component") | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	java.awt.Component v1 = (java.awt.Component)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.setSelectedComponent(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=insertTab(_0,_1,_2,_3,_4,_5) :- class(_0,"javax.swing.JTabbedPane"),string(_1),class(_2,"javax.swing.Icon"),class(_3,"java.awt.Component"),string(_4),int(_5) | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	java.lang.String v1 = ((StringFunctor)me.nthAtom(1).getFunctor()).stringValue();
	javax.swing.Icon v2 = (javax.swing.Icon)me.nthAtom(2).getFunctor().getValue();
	java.awt.Component v3 = (java.awt.Component)me.nthAtom(3).getFunctor().getValue();
	java.lang.String v4 = ((StringFunctor)me.nthAtom(4).getFunctor()).stringValue();
	int v5 = ((IntegerFunctor)me.nthAtom(5).getFunctor()).intValue();
	try {
		v0.insertTab(v1,v2,v3,v4,v5);
		mem.relink(me.nthAtom(0), 0, me, 6);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 6);
	}
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.nthAtom(3).remove();
	me.nthAtom(4).remove();
	me.nthAtom(5).remove();
	me.remove();
	:](_0,_1,_2,_3,_4,_5).

H=addTab(_0,_1,_2,_3,_4) :- class(_0,"javax.swing.JTabbedPane"),string(_1),class(_2,"javax.swing.Icon"),class(_3,"java.awt.Component"),string(_4) | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	java.lang.String v1 = ((StringFunctor)me.nthAtom(1).getFunctor()).stringValue();
	javax.swing.Icon v2 = (javax.swing.Icon)me.nthAtom(2).getFunctor().getValue();
	java.awt.Component v3 = (java.awt.Component)me.nthAtom(3).getFunctor().getValue();
	java.lang.String v4 = ((StringFunctor)me.nthAtom(4).getFunctor()).stringValue();
	try {
		v0.addTab(v1,v2,v3,v4);
		mem.relink(me.nthAtom(0), 0, me, 5);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 5);
	}
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.nthAtom(3).remove();
	me.nthAtom(4).remove();
	me.remove();
	:](_0,_1,_2,_3,_4).

H=addTab(_0,_1,_2,_3) :- class(_0,"javax.swing.JTabbedPane"),string(_1),class(_2,"javax.swing.Icon"),class(_3,"java.awt.Component") | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	java.lang.String v1 = ((StringFunctor)me.nthAtom(1).getFunctor()).stringValue();
	javax.swing.Icon v2 = (javax.swing.Icon)me.nthAtom(2).getFunctor().getValue();
	java.awt.Component v3 = (java.awt.Component)me.nthAtom(3).getFunctor().getValue();
	try {
		v0.addTab(v1,v2,v3);
		mem.relink(me.nthAtom(0), 0, me, 4);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 4);
	}
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.nthAtom(3).remove();
	me.remove();
	:](_0,_1,_2,_3).

H=addTab(_0,_1,_2) :- class(_0,"javax.swing.JTabbedPane"),string(_1),class(_2,"java.awt.Component") | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	java.lang.String v1 = ((StringFunctor)me.nthAtom(1).getFunctor()).stringValue();
	java.awt.Component v2 = (java.awt.Component)me.nthAtom(2).getFunctor().getValue();
	try {
		v0.addTab(v1,v2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.remove();
	:](_0,_1,_2).

H=add(_0,_1,_2) :- class(_0,"javax.swing.JTabbedPane"),class(_1,"java.awt.Component") | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	java.awt.Component v1 = (java.awt.Component)me.nthAtom(1).getFunctor().getValue();
	try {
		java.awt.Component r = v0.add(v1);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 2);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1,_2),java_awt_Component.use,(java_awt_Component.use:-()).

H=add(_0,_1,_2,_3) :- class(_0,"javax.swing.JTabbedPane"),string(_1),class(_2,"java.awt.Component") | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	java.lang.String v1 = ((StringFunctor)me.nthAtom(1).getFunctor()).stringValue();
	java.awt.Component v2 = (java.awt.Component)me.nthAtom(2).getFunctor().getValue();
	try {
		java.awt.Component r = v0.add(v1,v2);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 3);
		mem.relink(me.nthAtom(0), 0, me, 4);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 3);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 4);
	}
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.remove();
	:](_0,_1,_2,_3),java_awt_Component.use,(java_awt_Component.use:-()).

H=add(_0,_1,_2,_3) :- class(_0,"javax.swing.JTabbedPane"),class(_1,"java.awt.Component"),int(_2) | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	java.awt.Component v1 = (java.awt.Component)me.nthAtom(1).getFunctor().getValue();
	int v2 = ((IntegerFunctor)me.nthAtom(2).getFunctor()).intValue();
	try {
		java.awt.Component r = v0.add(v1,v2);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 3);
		mem.relink(me.nthAtom(0), 0, me, 4);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 3);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 4);
	}
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.remove();
	:](_0,_1,_2,_3),java_awt_Component.use,(java_awt_Component.use:-()).

H=add(_0,_1,_2) :- class(_0,"javax.swing.JTabbedPane"),class(_1,"java.awt.Component"),class(_2,"java.lang.Object") | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	java.awt.Component v1 = (java.awt.Component)me.nthAtom(1).getFunctor().getValue();
	java.lang.Object v2 = (java.lang.Object)me.nthAtom(2).getFunctor().getValue();
	try {
		v0.add(v1,v2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.remove();
	:](_0,_1,_2).

H=add(_0,_1,_2,_3) :- class(_0,"javax.swing.JTabbedPane"),class(_1,"java.awt.Component"),class(_2,"java.lang.Object"),int(_3) | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	java.awt.Component v1 = (java.awt.Component)me.nthAtom(1).getFunctor().getValue();
	java.lang.Object v2 = (java.lang.Object)me.nthAtom(2).getFunctor().getValue();
	int v3 = ((IntegerFunctor)me.nthAtom(3).getFunctor()).intValue();
	try {
		v0.add(v1,v2,v3);
		mem.relink(me.nthAtom(0), 0, me, 4);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 4);
	}
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.nthAtom(3).remove();
	me.remove();
	:](_0,_1,_2,_3).

H=removeTabAt(_0,_1) :- class(_0,"javax.swing.JTabbedPane"),int(_1) | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		v0.removeTabAt(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=remove(_0,_1) :- class(_0,"javax.swing.JTabbedPane"),class(_1,"java.awt.Component") | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	java.awt.Component v1 = (java.awt.Component)me.nthAtom(1).getFunctor().getValue();
	try {
		v0.remove(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=remove(_0,_1) :- class(_0,"javax.swing.JTabbedPane"),int(_1) | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		v0.remove(v1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1).

H=removeAll(_0) :- class(_0,"javax.swing.JTabbedPane") | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	try {
		v0.removeAll();
		mem.relink(me.nthAtom(0), 0, me, 1);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 1);
	}
	me.remove();
	:](_0).

H=getTabCount(_0,_1) :- class(_0,"javax.swing.JTabbedPane") | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	try {
		int r = v0.getTabCount();
		Atom res = mem.newAtom(new IntegerFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=getTabRunCount(_0,_1) :- class(_0,"javax.swing.JTabbedPane") | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	try {
		int r = v0.getTabRunCount();
		Atom res = mem.newAtom(new IntegerFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1).

H=getTitleAt(_0,_1,_2) :- class(_0,"javax.swing.JTabbedPane"),int(_1) | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		java.lang.String r = v0.getTitleAt(v1);
		Atom res = mem.newAtom(new StringFunctor(r));
		mem.relink(res, 0, me, 2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 2);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1,_2),java_lang_String.use,(java_lang_String.use:-()).

H=getIconAt(_0,_1,_2) :- class(_0,"javax.swing.JTabbedPane"),int(_1) | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		javax.swing.Icon r = v0.getIconAt(v1);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 2);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1,_2),javax_swing_Icon.use,(javax_swing_Icon.use:-()).

H=getDisabledIconAt(_0,_1,_2) :- class(_0,"javax.swing.JTabbedPane"),int(_1) | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		javax.swing.Icon r = v0.getDisabledIconAt(v1);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 2);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1,_2),javax_swing_Icon.use,(javax_swing_Icon.use:-()).

H=getToolTipTextAt(_0,_1,_2) :- class(_0,"javax.swing.JTabbedPane"),int(_1) | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		java.lang.String r = v0.getToolTipTextAt(v1);
		Atom res = mem.newAtom(new StringFunctor(r));
		mem.relink(res, 0, me, 2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 2);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1,_2),java_lang_String.use,(java_lang_String.use:-()).

H=getBackgroundAt(_0,_1,_2) :- class(_0,"javax.swing.JTabbedPane"),int(_1) | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		java.awt.Color r = v0.getBackgroundAt(v1);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 2);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1,_2),java_awt_Color.use,(java_awt_Color.use:-()).

H=getForegroundAt(_0,_1,_2) :- class(_0,"javax.swing.JTabbedPane"),int(_1) | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		java.awt.Color r = v0.getForegroundAt(v1);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 2);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1,_2),java_awt_Color.use,(java_awt_Color.use:-()).

H=isEnabledAt(_0,_1,_2) :- class(_0,"javax.swing.JTabbedPane"),int(_1) | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		boolean r = v0.isEnabledAt(v1);
		Atom res = mem.newAtom(new SymbolFunctor(r?"true":"false", 1));
		mem.relink(res, 0, me, 2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 2);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1,_2).

H=getComponentAt(_0,_1,_2) :- class(_0,"javax.swing.JTabbedPane"),int(_1) | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		java.awt.Component r = v0.getComponentAt(v1);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 2);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1,_2),java_awt_Component.use,(java_awt_Component.use:-()).

H=getMnemonicAt(_0,_1,_2) :- class(_0,"javax.swing.JTabbedPane"),int(_1) | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		int r = v0.getMnemonicAt(v1);
		Atom res = mem.newAtom(new IntegerFunctor(r));
		mem.relink(res, 0, me, 2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 2);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1,_2).

H=getDisplayedMnemonicIndexAt(_0,_1,_2) :- class(_0,"javax.swing.JTabbedPane"),int(_1) | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		int r = v0.getDisplayedMnemonicIndexAt(v1);
		Atom res = mem.newAtom(new IntegerFunctor(r));
		mem.relink(res, 0, me, 2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 2);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1,_2).

H=getBoundsAt(_0,_1,_2) :- class(_0,"javax.swing.JTabbedPane"),int(_1) | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	try {
		java.awt.Rectangle r = v0.getBoundsAt(v1);
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 2);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1,_2),java_awt_Rectangle.use,(java_awt_Rectangle.use:-()).

H=setTitleAt(_0,_1,_2) :- class(_0,"javax.swing.JTabbedPane"),int(_1),string(_2) | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	java.lang.String v2 = ((StringFunctor)me.nthAtom(2).getFunctor()).stringValue();
	try {
		v0.setTitleAt(v1,v2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.remove();
	:](_0,_1,_2).

H=setIconAt(_0,_1,_2) :- class(_0,"javax.swing.JTabbedPane"),int(_1),class(_2,"javax.swing.Icon") | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	javax.swing.Icon v2 = (javax.swing.Icon)me.nthAtom(2).getFunctor().getValue();
	try {
		v0.setIconAt(v1,v2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.remove();
	:](_0,_1,_2).

H=setDisabledIconAt(_0,_1,_2) :- class(_0,"javax.swing.JTabbedPane"),int(_1),class(_2,"javax.swing.Icon") | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	javax.swing.Icon v2 = (javax.swing.Icon)me.nthAtom(2).getFunctor().getValue();
	try {
		v0.setDisabledIconAt(v1,v2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.remove();
	:](_0,_1,_2).

H=setToolTipTextAt(_0,_1,_2) :- class(_0,"javax.swing.JTabbedPane"),int(_1),string(_2) | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	java.lang.String v2 = ((StringFunctor)me.nthAtom(2).getFunctor()).stringValue();
	try {
		v0.setToolTipTextAt(v1,v2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.remove();
	:](_0,_1,_2).

H=setBackgroundAt(_0,_1,_2) :- class(_0,"javax.swing.JTabbedPane"),int(_1),class(_2,"java.awt.Color") | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	java.awt.Color v2 = (java.awt.Color)me.nthAtom(2).getFunctor().getValue();
	try {
		v0.setBackgroundAt(v1,v2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.remove();
	:](_0,_1,_2).

H=setForegroundAt(_0,_1,_2) :- class(_0,"javax.swing.JTabbedPane"),int(_1),class(_2,"java.awt.Color") | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	java.awt.Color v2 = (java.awt.Color)me.nthAtom(2).getFunctor().getValue();
	try {
		v0.setForegroundAt(v1,v2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.remove();
	:](_0,_1,_2).

H=setEnabledAt(_0,_1,true) :- class(_0,"javax.swing.JTabbedPane"),int(_1) | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	boolean v2 = true;
	try {
		v0.setEnabledAt(v1,v2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.remove();
	:](_0,_1,true).

H=setEnabledAt(_0,_1,false) :- class(_0,"javax.swing.JTabbedPane"),int(_1) | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	boolean v2 = false;
	try {
		v0.setEnabledAt(v1,v2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.remove();
	:](_0,_1,false).

H=setComponentAt(_0,_1,_2) :- class(_0,"javax.swing.JTabbedPane"),int(_1),class(_2,"java.awt.Component") | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	java.awt.Component v2 = (java.awt.Component)me.nthAtom(2).getFunctor().getValue();
	try {
		v0.setComponentAt(v1,v2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.remove();
	:](_0,_1,_2).

H=setDisplayedMnemonicIndexAt(_0,_1,_2) :- class(_0,"javax.swing.JTabbedPane"),int(_1),int(_2) | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	int v2 = ((IntegerFunctor)me.nthAtom(2).getFunctor()).intValue();
	try {
		v0.setDisplayedMnemonicIndexAt(v1,v2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.remove();
	:](_0,_1,_2).

H=setMnemonicAt(_0,_1,_2) :- class(_0,"javax.swing.JTabbedPane"),int(_1),int(_2) | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	int v2 = ((IntegerFunctor)me.nthAtom(2).getFunctor()).intValue();
	try {
		v0.setMnemonicAt(v1,v2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.remove();
	:](_0,_1,_2).

H=indexOfTab(_0,_1,_2) :- class(_0,"javax.swing.JTabbedPane"),string(_1) | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	java.lang.String v1 = ((StringFunctor)me.nthAtom(1).getFunctor()).stringValue();
	try {
		int r = v0.indexOfTab(v1);
		Atom res = mem.newAtom(new IntegerFunctor(r));
		mem.relink(res, 0, me, 2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 2);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1,_2).

H=indexOfTab(_0,_1,_2) :- class(_0,"javax.swing.JTabbedPane"),class(_1,"javax.swing.Icon") | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	javax.swing.Icon v1 = (javax.swing.Icon)me.nthAtom(1).getFunctor().getValue();
	try {
		int r = v0.indexOfTab(v1);
		Atom res = mem.newAtom(new IntegerFunctor(r));
		mem.relink(res, 0, me, 2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 2);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1,_2).

H=indexOfComponent(_0,_1,_2) :- class(_0,"javax.swing.JTabbedPane"),class(_1,"java.awt.Component") | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	java.awt.Component v1 = (java.awt.Component)me.nthAtom(1).getFunctor().getValue();
	try {
		int r = v0.indexOfComponent(v1);
		Atom res = mem.newAtom(new IntegerFunctor(r));
		mem.relink(res, 0, me, 2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 2);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1,_2).

H=indexAtLocation(_0,_1,_2,_3) :- class(_0,"javax.swing.JTabbedPane"),int(_1),int(_2) | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	int v1 = ((IntegerFunctor)me.nthAtom(1).getFunctor()).intValue();
	int v2 = ((IntegerFunctor)me.nthAtom(2).getFunctor()).intValue();
	try {
		int r = v0.indexAtLocation(v1,v2);
		Atom res = mem.newAtom(new IntegerFunctor(r));
		mem.relink(res, 0, me, 3);
		mem.relink(me.nthAtom(0), 0, me, 4);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 3);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 4);
	}
	me.nthAtom(1).remove();
	me.nthAtom(2).remove();
	me.remove();
	:](_0,_1,_2,_3).

H=getToolTipText(_0,_1,_2) :- class(_0,"javax.swing.JTabbedPane"),class(_1,"java.awt.event.MouseEvent") | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	java.awt.event.MouseEvent v1 = (java.awt.event.MouseEvent)me.nthAtom(1).getFunctor().getValue();
	try {
		java.lang.String r = v0.getToolTipText(v1);
		Atom res = mem.newAtom(new StringFunctor(r));
		mem.relink(res, 0, me, 2);
		mem.relink(me.nthAtom(0), 0, me, 3);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 2);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 3);
	}
	me.nthAtom(1).remove();
	me.remove();
	:](_0,_1,_2),java_lang_String.use,(java_lang_String.use:-()).

H=getAccessibleContext(_0,_1) :- class(_0,"javax.swing.JTabbedPane") | H=[:/*inline*/
	javax.swing.JTabbedPane v0 = (javax.swing.JTabbedPane)me.nthAtom(0).getFunctor().getValue();
	try {
		javax.accessibility.AccessibleContext r = v0.getAccessibleContext();
		Atom res = mem.newAtom(new ObjectFunctor(r));
		mem.relink(res, 0, me, 1);
		mem.relink(me.nthAtom(0), 0, me, 2);
	} catch (Exception e) {
		Atom res = mem.newAtom(new SymbolFunctor("nil", 1));
		mem.relink(res, 0, me, 1);
		Atom o = mem.newAtom(new ObjectFunctor(e));
		mem.relink(o, 0, me, 2);
	}
	me.remove();
	:](_0,_1),javax_accessibility_AccessibleContext.use,(javax_accessibility_AccessibleContext.use:-()).

}.

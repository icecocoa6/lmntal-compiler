<project name="LMNtal" default="dist" basedir=".">
	<!-- directory properties -->
	<property name="src" location="src"/>
	<property name="build" location="classes"/>
	<property name="bin"  location="bin"/>
	<property name="lib"  location="tools"/>
	<property name="docs" location="doc"/>
	<property name="classpath"  value=""/>
	<property name="lmntal_lib" location="lib"/>
	
	<!-- tool properties -->
	<property name="flex"  location="${lib}/JFlex.jar"/>
	<property name="bison"  location="${lib}/java_cup.jar"/>
	
	<!-- properties -->
	<property name="encoding" value="euc-jp"/>
	
	<!-- flex compile -->
	<target name="flex_lmntal">
		<java jar="${flex}" dir="${src}/compile/parser" fork="true">
			<arg value="lmntal.flex"/>
		</java>
	</target>
	<target name="flex_intermediate">
		<java jar="${flex}" dir="${src}/compile/parser/intermediate" fork="true">
			<arg value="intermediate.flex"/>
		</java>
	</target>
	<target name="flex_all" depends="flex_lmntal,flex_intermediate" />
	
	<!-- bison compile, clean -->
	<target name="bison_lmntal">
		<java jar="${bison}" dir="${src}/compile/parser" fork="true">
			<arg value="lmntal.cup"/>
		</java>
	</target>
	<target name="bison_intermediate">
		<java jar="${bison}" dir="${src}/compile/parser/intermediate" fork="true">
			<arg value="intermediate.cup"/>
		</java>
	</target>
	<target name="bison_all" depends="bison_lmntal,bison_intermediate" />
	
	<!-- generate java sources -->
	<target name="help" description="generate Help.java from comment of FrontEnd.java">
		<exec executable="perl" input="${src}/runtime/FrontEnd.java" output="${src}/runtime/Help.java">
			<arg file="${src}/help_gen.pl"/>
		</exec>
	</target>
	<target name="system_ruleset" description="generate Global system ruleset">
		<java classname="util.GlobalSystemRulesetGenerator" 
			classpath="${build}" output="${src}/runtime/GlobalSystemRuleset.java" fork="true"/>
	</target>
	
	<!-- java compile -->
	<target name="compile" description="compile the source">
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}"/>
		<!-- Compile the java code from ${src} into ${build} -->
		<javac srcdir="${src}" destdir="${build}" classpath="${classpath}" encoding="${encoding}"/>
	</target>
	<target name="jar" depends="help,system_ruleset,compile">
		<!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
		<jar jarfile="${bin}/lmntal.jar" basedir="${build}">
			<manifest>
				<attribute name="Main-Class" value="runtime.FrontEnd"/>
			</manifest>
		</jar>
	</target>

	<!-- lmntal library -->
	<target name="lib" depends="compile" description="compile lmntal libraries">
		<java classname="compile.Translator" dir="${lmntal_lib}" classpath="${build}" fork="true">
			<!--まだ最適化器 or Translator にバグがあるらしく、いくつかのライブラリは最適化するとコンパイルに失敗する-->
			<!--<arg value="-O" />-->
		</java>
	</target>
	<target name="lib_clean" description="delete compiled lmntal libraries">
		<delete>
			<fileset dir="${lmntal_lib}" includes="*.jar" />
		</delete>
	</target>

	<!-- distribution -->
	<target name="zip">
		<zip destfile="lmntal.zip">
			<zipfileset dir="${bin}" prefix="bin"/>
			<zipfileset file="${lmntal_lib}/std_lib.jar" prefix="lib"/>
			<zipfileset dir="${lmntal_lib}/public" includes="*.lmn" prefix="lib/src"/>
			<zipfileset dir="sample/public" includes="*.lmn" prefix="sample"/>
		</zip>
	</target>
	<target name="dist" depends="jar,lib,zip" description="generate the distribution"/>

	
	<target name="clean" depends="lib_clean" description="clean up">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}"/>
		<delete file="${bin}/lmntal.jar"/>
	</target>
	
	<target name="run">
		<java jar="${bin}/lmntal.jar" fork="true"/>
	</target>
	
	<target name="doc">
		<javadoc destdir="${docs}" author="true" version="true" use="true" windowtitle="LMNtal API" encoding="${encoding}" charset="${encoding}">
			<fileset dir="${src}" defaultexcludes="yes"/>
			<link href="http://java.sun.com/j2se/1.4/ja/docs/ja/api/"/>
		</javadoc>
	</target>
	
</project>

% simulation
% 分散シミュレーション(膜サーバ)
% 受信リスト正順

{% brie: client
connect("gouda",60000,S,R).
S=["get"].
R=[].
% client's rule
socket(C,S,[H|T]) :- string(H) |
  socket(C,S,T),decoder.stringDecoder(H).
}.

{% gouda: server
port(60000,P).
P=[accept(S,R)].
S=[].
R=[].
% server's rule
socket(C,S,[H|T]) :- H="get" |
  socket(C,list.append(S,["{a. a:-b}"]),T).
}.

% connect and accept rule
{connect(Host,Port1,S1,R1),$p[S1,R1|*C],@p},
{port(Port2,[accept(S2,R2)|T]),$q[S2,R2,T|*C],@q} :- 
  string(Host),Port1=:=Port2 |
    {socket(C,S1,R1),$p[S1,R1|*C],@p},
    {port(Port2,T),socket(C,S2,R2),$q[S2,R2,T|*C],@q}.

% send and receive rule
{socket(C,[H|T],R1),$p[T,R1|*C],@p},
{socket(C,S2,R2),$q[S2,R2|*C],@q} :-
  string(H) |
    {socket(C,T,R1),$p[T,R1|*C],@p},
    {socket(C,S2,list.append(R2,[H])),$q[S2,R2|*C],@q}.

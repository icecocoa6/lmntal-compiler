// 処理系の機能を利用して膜の比較をしてみた．

% リンクL の接続先の膜を文字列に変換し，
% それをヘッドとするルールを表す文字列を生成する．
NewRule=string.concat(codec.memProcessEncoder(L),":-true.").

% 上の文字列を実際のルールに変換する．
codec.strDecoder(NewRule).

{
cc(L17,L26,cc(L18,L35)), cc(L19,L34,cc(L20,L33)), cc(L21,L32,cc(L22,L31)), 
cc(L23,L30,cc(L24,L29)), cc(L25,L28,cc(L16,L27)), c(L22,c(L23,c(L186,c(L123,
c(L171,L179)))),L179), c(L253,c(L26,c(L27,c(L261,c(L252,L256)))),L256), 
c(L133,c(L16,c(L17,c(L141,c(L132,L136)))),L136), c(L243,c(L291,c(L32,c(L33,
c(L306,L304)))),L304), c(L141,c(L18,c(L19,c(L156,c(L129,L151)))),L151), 
c(L276,c(L249,c(L261,c(L28,c(L29,L277)))),L277), c(L129,c(L126,c(L123,
c(L118,c(L132,L130)))),L130), c(L238,c(L306,c(L34,c(L35,c(L253,L319)))),L319), 
c(L243,c(L238,c(L252,c(L249,c(L246,L244)))),L244), c(L186,c(L24,c(L25,c(L133,
c(L118,L196)))),L196), c(L20,c(L21,c(L171,c(L126,c(L156,L164)))),L164), 
c(L30,c(L31,c(L291,c(L246,c(L276,L284)))),L284), {color(c,0.5,0.5,0.5), 
color(cc,0.0,0.0,1.0)}
}.
{
cc(L17,L26,cc(L18,L35)), cc(L19,L34,cc(L20,L33)), cc(L21,L32,cc(L22,L31)), 
cc(L23,L30,cc(L24,L29)), cc(L25,L28,cc(L16,L27)), c(L22,c(L23,c(L186,c(L123,
c(L171,L179)))),L179), c(L253,c(L26,c(L27,c(L261,c(L252,L256)))),L256), 
c(L133,c(L16,c(L17,c(L141,c(L132,L136)))),L136), c(L243,c(L291,c(L32,c(L33,
c(L306,L304)))),L304), c(L141,c(L18,c(L19,c(L156,c(L129,L151)))),L151), 
c(L276,c(L249,c(L261,c(L28,c(L29,L277)))),L277), c(L129,c(L126,c(L123,
c(L118,c(L132,L130)))),L130), c(L238,c(L306,c(L34,c(L35,c(L253,L319)))),L319), 
c(L243,c(L238,c(L252,c(L249,c(L246,L244)))),L244), c(L186,c(L24,c(L25,c(L133,
c(L118,L196)))),L196), c(L20,c(L21,c(L171,c(L126,c(L156,L164)))),L164), 
c(L30,c(L31,c(L291,c(L246,c(L276,L284)))),L284), {color(c,0.5,0.5,0.5), 
color(cc,0.0,0.0,1.0)},
'+'(L)}.
% paint client
% @see wtChatServer.lmn

graphic.use.

go :- {
if.use.
integer.use.

window,size(400,340),name("LMNpaint"),bgcolor(255,255,255),killer,position(100,100),clickListener.

dlmntal.connect("localhost", 50000, [], strDec).

strDec([_SH|T]) :- codec.strDecoder(_SH),strDec(T).

now_color(0,0,0), now_shape("rect").

% separator
{draw,name("line"),getpic(line),position(0,40,400,40),color(0,0,0)}.

% color selector
{draw,name("red"),getpic("fillrect"),position(1,1),size(19,19),color(255,0,0)}.
{draw,name("green"),getpic("fillrect"),position(21,1),size(19,19),color(0,255,0)}.
{draw,name("blue"),getpic("fillrect"),position(41,1),size(19,19),color(0,0,255)}.
{draw,name("frame"),getpic("rect"),position(0,0),size(20,20),color(0,0,0)}.
{draw,name("frame"),getpic("rect"),position(20,0),size(20,20),color(0,0,0)}.
{draw,name("frame"),getpic("rect"),position(40,0),size(20,20),color(0,0,0)}.

% shape selector
{draw,name("rect"),getpic("rect"),position(5,25),size(10,10),color(0,0,0)}.
{draw,name("oval"),getpic("circle"),position(25,25),size(10,10),color(0,0,0)}.
{draw,name("line"),getpic("line"),position(45,30,55,30),color(0,0,0)}.
{draw,name("frame"),getpic("rect"),position(0,20),size(20,20),color(0,0,0)}.
{draw,name("frame"),getpic("rect"),position(20,20),size(20,20),color(0,0,0)}.
{draw,name("frame"),getpic("rect"),position(40,20),size(20,20),color(0,0,0)}.

% rule: color selection
clicked(_IX, _IY), now_color(_IR, _IG, _IB) :-
  0 =< _IX, _IX =< 20, 0 =< _IY, _IY =< 20 | now_color(255, 0, 0).
clicked(_IX, _IY), now_color(_IR, _IG, _IB) :-
  20 =< _IX, _IX =< 40, 0 =< _IY, _IY =< 20 | now_color(0, 255, 0).
clicked(_IX, _IY), now_color(_IR, _IG, _IB) :-
  40 =< _IX, _IX =< 60, 0 =< _IY, _IY =< 20 | now_color(0, 0, 255).

% rule: shape selection
clicked(_IX, _IY), now_shape(_S) :-
  0 =< _IX, _IX =< 20, 20 =< _IY, _IY =< 40 | now_shape("rect").
clicked(_IX, _IY), now_shape(_S) :-
  20 =< _IX, _IX =< 40, 20 =< _IY, _IY =< 40 | now_shape("circle").
clicked(_IX, _IY), now_shape(_S) :-
  40 =< _IX, _IX =< 60, 20 =< _IY, _IY =< 40 | now_shape("line").

% draw rectangle
clicked(_IX1, _IY1), clicked(_IX2, _IY2), now_shape("rect") :-
  _IY1 > 40, _IY2 > 40 |
  now_shape("rect"),
  rect(P,S),
  P = position('?'(('<'(_IX1,_IX2)),_IX1,_IX2), '?'(('<'(_IY1,_IY2)),_IY1,_IY2)),
  S = size(integer.abs(_IX2-_IX1),integer.abs(_IY2-_IY1)).
rect(position(_IPosX,_IPosY),size(_ISizeX,_ISizeY)), dlmntal.socket(S, R, O), now_color(_IR, _IG, _IB) :-
  now_color(_IR, _IG, _IB),
  dlmntal.socket(list.append(S,[Mem]), R, O),
  Mem = codec.memEncoder
  ({draw,name("obj"),getpic("rect"), position(_IPosX,_IPosY), color(_IR,_IG,_IB),size(_ISizeX,_ISizeY)}).

% draw circle
clicked(_IX1, _IY1), clicked(_IX2, _IY2), now_shape("circle") :-
  _IY1 > 40, _IY2 > 40 |
  now_shape("circle"),
  circle(P,S),
  P = position('?'(('<'(_IX1,_IX2)),_IX1,_IX2), '?'(('<'(_IY1,_IY2)),_IY1,_IY2)),
  S = size(integer.abs(_IX2-_IX1),integer.abs(_IY2-_IY1)).
circle(position(_IPosX,_IPosY),size(_ISizeX,_ISizeY)), dlmntal.socket(S, R, O), now_color(_IR, _IG, _IB) :-
  now_color(_IR, _IG, _IB),
  dlmntal.socket(list.append(S,[Mem]), R, O),
  Mem = codec.memEncoder
  ({draw,name("obj"),getpic("circle"), position(_IPosX,_IPosY), color(_IR,_IG,_IB),size(_ISizeX,_ISizeY)}).

% draw line
clicked(_IX1, _IY1), clicked(_IX2, _IY2), dlmntal.socket(S, R, O), now_color(_IR, _IG, _IB), now_shape("line") :-
  _IY1 > 40, _IY2 > 40 |
  now_color(_IR, _IG, _IB), now_shape("line"),
  dlmntal.socket(list.append(S,[Mem]), R, O),
  Mem = codec.memEncoder
  ({draw,name("line"),getpic("line"),position(_IX1,_IY1,_IX2,_IY2),color(_IR,_IG,_IB)}).

% invalid click
clicked(_IX, _IY) :- _IX > 60, _IY =< 40 | .
}.

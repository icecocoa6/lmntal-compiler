% lmn_mem_equlas 用の一時ファイル

% 同じ構造を異なると判断するケース
/*
r(lambda(cp(cp(L6,L7,L5),L8,L1),lambda(L9,apply(lambda(L10,apply(L6,L11)),apply(lambda(L12,apply(L7,L13)),L9))))). apply(L8,cp(L10,L12,L3),cp(L11,L13,L4)). {sub(L0). {}. }, {top. '+'(L1). super(L2). }, {top. super(L0). }, {'+'(L4). '+'(L5). sub(L2). {'+'(L3). }. }. 

a. a:-a.
*/

% lambda_flat.lmn を非決定的実行した際に
% 等しいと判定されてしまったケース
% ただしこう書くと正しく判定される．
promoting(3). 'next_color'(5). r(lambda(cp(cp(L0,L1,0),cp(L2,L3,0),0),lambda(L4,apply(lambda(L5,apply(L0,apply(L1,L5))),apply(lambda(L6,apply(L2,apply(L3,L6))),L4))))). 'color_count'(-1,0). 'color_count'(-3,0). 'color_count'(1,0). 'color_count'(0,3). 'color_count'(3,0). 'sub_count'(1,0). 'sub_count'(3,0). 'sub_count'(0,2). 'super_sub'(0,1). 'super_sub'(0,3). 

promoting(3), 'next_color'(5), r(lambda(cp(cp(L0,L1,0),cp(L2,L3,0),0),
lambda(L4,apply(lambda(L5,apply(L0,apply(L1,L5))),
apply(lambda(L6,apply(L2,apply(L3,L6))),L4))))), 
'color_count'(-1,0), 'color_count'(-3,0), 'color_count'(1,0), 'color_count'(0,3), 'color_count'(3,0), 
'sub_count'(1,0), 'sub_count'(3,0), 'sub_count'(0,2), 'super_sub'(0,1), 'super_sub'(0,3) 
:-
promoting(1), 'next_color'(5), r(lambda(cp(cp(L0,L1,0),cp(L2,L3,0),0),
lambda(L4,apply(lambda(L5,apply(L0,apply(L1,L5))),
apply(lambda(L6,apply(L2,apply(L3,L6))),L4))))), 
'color_count'(-1,0), 'color_count'(-3,0), 'color_count'(1,0), 'color_count'(0,3), 'color_count'(3,0), 
'sub_count'(1,0), 'sub_count'(3,0), 'sub_count'(0,2), 'super_sub'(0,1), 'super_sub'(0,3). 


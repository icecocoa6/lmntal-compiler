% sort_merg2.lmn
%
% sort_mergeをリファクタリングした

dat([10,1,5,20,7,4,12,2,2]), get_len.

callGet @@  get{len(0),@g}, F=[X |[]], get_len :- ground(F),int(X) |
            get{len(0),@g,  F=[X |[]]}.
             
divNum1 @@  len(L,R,Q) :- L>2, Q>0, L2=(L+1)/2  | len(L2,R,Q).

divNum2 @@  len(L,R,Q), E=[tail |F] :- L=<2, Q>0, int(R), Q2=Q-L |
            len(Q2,Q2,Q2), E=[L,tail |F].

callDiv @@  sort{$s,@s,div{@d}}, dat(D), len(0,0,0), divNums(N)
                          :- ground(D), ground(N) |
            sort{$s,@s,div{@d, dat(D), len(0,0,0), divNums(N)}}.
get{
  len(0).
getLen0 @@  dat(D), len(0) 	:- dat=(D, []), tmp(0).
getLen1 @@  F=([X |R],Z), tmp(L) :- L2=L+1 |	F=[X |(R,Z)], tmp(L2).
getLen2 @@  F=([],Z), tmp(L)     :- int(L)	|	F=Z, len(L).
}.
outputG @@  get{dat(D), len(L), @g}/ :- ground(D), int(L) |
            dat(D), len(L,L,L), divNums([tail]).

sort{
div{
divLis1 @@  len(0,0,0) :- div([null]).

divLis2 @@  E=[null |[]], divNums=[N |F], dat=[D |G] :- N>0, N2=N-1 |
              E=[D,null |[]], divNums=[N2|F], dat=G.
}.

d2mrg_1 @@  div{$d,@d, div(D), divNums=[N |E]}/, mrg{@m}
                              :- N=:=0,ground(D),ground(E) |
            div{$d,@d, div([null]), divNums=E}, mrg{@m, div(D)}.

d2mrg_2 @@  div{$d,@d, div(D), divNums=[N |E]}/, mrg{@m, dat(F)},
                              :- N=:=0, ground(D),ground(E),ground(F) |
            div{$d,@d, div([null]), divNums=E},
            mrg{@m,dat(F), mrg{div(D),@m}}, mrg{@m}.

mrg{
mrgLis0 @@  div=[X, null]  :- dat=[X].
mrgLis1 @@  div=[X,Y,null] :- X<Y | dat=[Y,X].
mrgLis2 @@  div=[X,Y,null] :- X>=Y| dat=[X,Y].

mrgLis3 @@  D=[X,Y |E], mrg{dat=[Z |F],@m},f  :- ground(F), Y=<Z, X>=Z |
            D=[X,Z,Y |E], mrg{dat=F, @m},f.
          
mrgLis4 @@  D=[X |[]], mrg{dat=[Y |E],@m},f   :- ground(E), X>Y |
            D=[X,Y |E], mrg{dat=E, @m},f.

mrgLis5 @@  dat=[X |D], mrg{dat=[Y |E],@m2},f :- ground(D),ground(E), X<Y |
            dat=[Y,X |D], mrg{dat=E, @m2},f.
}.

putFlag @@  mrg{$m,@m, mrg{$m2,@m2}}/        :- \+($m=(f, $mm)) |
            mrg{$m,@m, mrg{$m2,@m2},f}.

goMerg1@@  mrg{dat(D), f, mrg{dat([]),@m2},@m1}/,
           mrg{dat(E), f, mrg{dat([]),@m4},@m3}/
                                             :- ground(D),ground(E) |
           mrg{dat(D), f, mrg{dat(E), @m2},@m1}.

goMerg2@@  mrg{dat(D), f, mrg{dat([]), @m2},@m1}/,
           mrg{dat([E]), @m3}/, div{$d,@d, divNums([tail])}
                                             :- ground(D),int(E) |
           mrg{dat(D), f, mrg{dat([E]),@m2},@m1},
           div{$d, @d, divNums([tail])}.
}.

endSort@@  sort{@s,$s[],mrg{$m[],@m,dat(D)}}/ :- ground(D) | dat(D).
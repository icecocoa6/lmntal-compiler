% mss.lmn
% 		2009.03.xx
%
% 
% MSS問題
% N個の整数列から連続する部分列で最大の和を探す
/*
dat([10,-9,2,1,4,5,1,-4]).
tmp([null |nil]).
max().
sum(0).
set.

mss1 @@ sum(S), dat=[D|X], set  :- int(S),int(D) | sum(D), cal=X.
mss2a@@ sum(S), cal(C), max     :- int(S)| sum(S), cal(C), max(S).
mss2b@@ sum(S), cal(C), max(M)  :- S>M   | sum(S), cal(C), max(S).
mss3 @@ cal=[D |C], sum(S), tmp() :-*/




dat([10,-9,2,1,4,5,1,-4]).
//n(N), i(I), dat(D) :- int(N), int(I), I<10, I2=I+1 |
list.use.
n=list.get(a([1,2,3,4,5]), 2, d).


/* 先頭要素をリストから取得し、sumとする
 * maxの値より、sumの値の方が大きければ交換する
 * リストの先頭の要素を足して、繰り返し
 * リストの末尾になったら、再び先頭要素を取得
 */
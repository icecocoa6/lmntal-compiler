Compiled Ruleset @602
Compiled Rule 
	--atommatch:
		spec           [2, 2]
	--memmatch:
		spec           [1, 1]
		jump           [L110, [0], [], []]
	--guard:L110:
		spec           [1, 1]
		jump           [L103, [0], [], []]
	--body:L103:
		spec           [1, 90]
		commit         [null, 0]
		loadruleset    [0, @605]
		newmem      [1, 0, 0]
		setmemname     [1, "lmn"]
		newmem      [2, 1, 0]
		setmemname     [2, "tal"]
		newmem      [3, 0, 0]
		setmemname     [3, "slim"]
		newatom     [4, 2, 3_1]
		newatom     [5, 2, 4_1]
		newatom     [6, 2, '[]'_1]
		newatom     [7, 2, '.'_3]
		newatom     [8, 2, '.'_3]
		newatom     [9, 2, 'test'_1]
		newatom    [10, 2, 'e'_0]
		newatom    [11, 2, 'f'_0]
		newatom    [12, 2, 'g'_0]
		newatom    [13, 2, 'h'_0]
		newatom    [14, 1, 1_1]
		newatom    [15, 1, 2_1]
		newatom    [16, 1, '[]'_1]
		newatom    [17, 1, '.'_3]
		newatom    [18, 1, '.'_3]
		newatom    [19, 1, 'data'_1]
		newatom    [20, 1, 'a'_0]
		newatom    [21, 1, 'b'_0]
		newatom    [22, 1, 'c'_0]
		newatom    [23, 1, 'd'_0]
		newatom    [24, 3, 'i'_0]
		newatom    [25, 3, 'j'_0]
		newatom    [26, 3, 'k'_0]
		newatom    [27, 3, 'l'_0]
		newatom    [28, 3, 5_1]
		newatom    [29, 3, 6_1]
		newatom    [30, 3, '[]'_1]
		newatom    [31, 3, '.'_3]
		newatom    [32, 3, '.'_3]
		newatom    [33, 3, 'unko'_1]
		newatom    [34, 0, 'm'_0]
		newatom    [35, 0, 'n'_0]
		newatom    [36, 0, 'o'_0]
		newatom    [37, 0, 'p'_0]
		newatom    [38, 0, 7_1]
		newatom    [39, 0, 8_1]
		newatom    [40, 0, 9_1]
		newatom    [41, 0, '[]'_1]
		newatom    [42, 0, '.'_3]
		newatom    [43, 0, '.'_3]
		newatom    [44, 0, '.'_3]
		newatom    [45, 0, 'list'_1]
		alloclink  [46, 4, 0]
		alloclink  [47, 5, 0]
		alloclink  [48, 6, 0]
		alloclink  [49, 7, 0]
		alloclink  [50, 7, 1]
		alloclink  [51, 7, 2]
		alloclink  [52, 8, 0]
		alloclink  [53, 8, 1]
		alloclink  [54, 8, 2]
		alloclink  [55, 9, 0]
		alloclink  [56, 14, 0]
		alloclink  [57, 15, 0]
		alloclink  [58, 16, 0]
		alloclink  [59, 17, 0]
		alloclink  [60, 17, 1]
		alloclink  [61, 17, 2]
		alloclink  [62, 18, 0]
		alloclink  [63, 18, 1]
		alloclink  [64, 18, 2]
		alloclink  [65, 19, 0]
		alloclink  [66, 28, 0]
		alloclink  [67, 29, 0]
		alloclink  [68, 30, 0]
		alloclink  [69, 31, 0]
		alloclink  [70, 31, 1]
		alloclink  [71, 31, 2]
		alloclink  [72, 32, 0]
		alloclink  [73, 32, 1]
		alloclink  [74, 32, 2]
		alloclink  [75, 33, 0]
		alloclink  [76, 38, 0]
		alloclink  [77, 39, 0]
		alloclink  [78, 40, 0]
		alloclink  [79, 41, 0]
		alloclink  [80, 42, 0]
		alloclink  [81, 42, 1]
		alloclink  [82, 42, 2]
		alloclink  [83, 43, 0]
		alloclink  [84, 43, 1]
		alloclink  [85, 43, 2]
		alloclink  [86, 44, 0]
		alloclink  [87, 44, 1]
		alloclink  [88, 44, 2]
		alloclink  [89, 45, 0]
		unifylinks     [46, 52, 2]
		unifylinks     [47, 49, 2]
		unifylinks     [48, 50, 2]
		unifylinks     [51, 53, 2]
		unifylinks     [54, 55, 2]
		unifylinks     [56, 62, 1]
		unifylinks     [57, 59, 1]
		unifylinks     [58, 60, 1]
		unifylinks     [61, 63, 1]
		unifylinks     [64, 65, 1]
		unifylinks     [66, 72, 3]
		unifylinks     [67, 69, 3]
		unifylinks     [68, 70, 3]
		unifylinks     [71, 73, 3]
		unifylinks     [74, 75, 3]
		unifylinks     [76, 86, 0]
		unifylinks     [77, 83, 0]
		unifylinks     [78, 80, 0]
		unifylinks     [79, 81, 0]
		unifylinks     [82, 84, 0]
		unifylinks     [85, 87, 0]
		unifylinks     [88, 89, 0]
		enqueueatom    [45]
		enqueueatom    [37]
		enqueueatom    [36]
		enqueueatom    [35]
		enqueueatom    [34]
		enqueueatom    [33]
		enqueueatom    [27]
		enqueueatom    [26]
		enqueueatom    [25]
		enqueueatom    [24]
		enqueueatom    [23]
		enqueueatom    [22]
		enqueueatom    [21]
		enqueueatom    [20]
		enqueueatom    [19]
		enqueueatom    [13]
		enqueueatom    [12]
		enqueueatom    [11]
		enqueueatom    [10]
		enqueueatom    [9]
		proceed        []


/* マッチしたアトムの移動＆マッチ以外のアトムの抹消 */
Compiled Ruleset @601
Compiled Rule 
	--atommatch:
		spec          [2, 3]
	--memmatch:
		spec          [1, 25]
		anymem        [1, 0, 0, "^^"]
		not[[
			natoms				[0, 0]
      proceed       []
    ]]

//長さ1以上のリスト用
		branch[[
	    /*      (int)⑤
  	               ｜    
    	       ④0--2②1--③･･･  */
			//このbranch命令中の失敗はここまでバックトラック。ここが失敗のときのみ、次のbranch命令へ移る。
			findatom    	[2, 0, '.'_3]
			derefatom   	[3, 2, 1]
			derefatom   	[4, 2, 2]
			derefatom   	[5, 2, 0]
			isunary     	[4]
  		isint       	[5]
			loop[[
  			neqatom     	[3, 2]
				func        	[3, '.'_3] //break
				derefatom   	[6, 3, 0]
				isint       	[6]
				derefatom   	[3, 3, 1]
				proceed     	[]
			]]
			isunary       [3]
			commit        ["list_size1以上", 0]
			//   4                     8
			//   |         ->copy->    |
			// 3-2-5loop             7-6-9
			derefatom     [3, 2, 2]
			derefatom     [4, 2, 0]
			derefatom     [5, 2, 1]
			copyatom      [6, 1, 2]
			copyatom      [7, 1, 3]
			copyatom      [8, 1, 4]
			newlink       [6, 0, 8, 0, 1]
			newlink       [6, 2, 7, 0, 1]
			removeatom    [2, 0]
			removeatom    [3, 0]
			removeatom    [4, 0]
			loop[[
				copyatom      [9, 1, 5]
				func        	[5, '.'_3]
				newlink     	[9, 2, 6, 1, 1]
				derefatom     [4, 5, 0]
				copyatom      [10, 1, 4]
				newlink       [10, 0, 9, 0, 1]
				removeatom    [4, 0]
				removeatom    [5, 0]
				derefatom     [6, 6, 1]
				derefatom     [5, 5, 1]
				proceed       []
			]]
			newlink       [9, 0, 6, 1, 1]
			removeatom    [5, 0]
			freeatom      [2]
			freeatom      [3]
			freeatom      [4]
			freeatom      [5]
			unlockmem   	[1]
			proceed 			[]
		]]
		

//リストが見つからないときは、アトムセットの消去
		branch[[
			commit        ["clear!atomset", 0]
			clearatomset 	[0]
			unlockmem     [1]
			proceed  	   	[]
		]]
		print["outof branch"]
		unlockmem     [1]
		proceed 			[]

//atomがないときは、終了処理
Compiled Rule
	--atommatch:
		spec          [2, 3]
	--memmatch:
		spec          [1, 10]
		anymem        [1, 0, 0, "^^"]
		natoms				[0, 0]
  	commit        ["fin", 0]
		removemem     [1, 0]
		removeproxies [1]
		movecells     [0, 1]
		removetemporaryproxies[0]
		freemem       [1]
		clearrules    [1]
		proceed       []

/* 全ての階層にルールを投げる */
Compiled Ruleset @605
Compiled Rule 
	--atommatch:
		spec          [2, 3]
	--memmatch:
		spec          [1, 2]
		anymem      	[1, 0, 0, "*"]
		not[[
			eqmemname     [1, "^^"]
			proceed       []
		]]
		norules     	[1]
		branch[[
		  not[[
  		  eqmemname     [1, "lmn"]
  		  proceed       []
  		]]
		  nfreelinks    [1, 0]
		  removemem     [1, 0]
		  freemem       [1]
		  proceed       []
		]]
		branch[[
  		commit        ["rulecopy", 0]
	  	removeproxies [1]
		  enqueuemem    [1]
		  insertproxies [0, 1]
		  copyrules     [1, 0]
		  unlockmem     [1]
		  proceed       []
    ]]
Compiled Rule
	--atommatch:
		spec          [2, 3]
	--memmatch:
		spec          [1, 2]
		not[[
			anymem       	[1, 0, 0, "^^"]
			proceed			 	[]
		]]
		norules       [1]
    commit        ["mem make", 0]
	  newmem 				[1, 0, 0]
	  setmemname    [1, "^^"]
	  enqueuemem    [1]
	  insertproxies [0, 1]
	  clearrules    [0]
	  loadruleset   [0, @601]
	  proceed       []

Inline
/* Number Place
   Atsushi Nakano, 2006-06-17

*/

{
rule.

// 行・列・ブロックで，すでに確定しているものを候補から削除
check_X@@
 n(_IX1, Y1, Z1, _IRES1), n(_IX2, Y2, Z2, {L=[_IRES2 | L2], $q[L, L2]}), {+Z2, rest(_IRES3, _IREST), $p}
 :- _IX1 = _IX2, _IRES1 = _IRES2, _IRES1 = _IRES3, _IREST > 0
 | n(_IX1, Y1, Z1, _IRES1), n(_IX2, Y2, Z2, {L=L2, $q[L, L2]}), {+Z2, rest(_IRES3, _IREST - 1), $p}.
 
check_Y@@
 n(X1, _IY1, Z1, _IRES1), n(X2, _IY2, Z2, {L=[_IRES2 | L2], $q[L, L2]}), {+Z2, rest(_IRES3, _IREST), $p}
 :- _IY1 = _IY2, _IRES1 = _IRES2, _IRES2 = _IRES3, _IREST > 0
 | n(X1, _IY1, Z1, _IRES1), n(X2, _IY2, Z2, {L=L2, $q[L, L2]}), {+Z2, rest(_IRES3, _IREST - 1), $p}.
 
check_Z@@
 n(X, Y, Z, {L=[_IRES1 | L2], $q[L, L2]}), {+Z, rest(_IRES2, 0), $p}
 :- _IRES1 = _IRES2
 |  n(X, Y, Z, {L=L2, $q[L, L2]}), {+Z, rest(_IRES2, 0), $p}.

//　自マス以外のマスに自マスの持っている候補が無ければ決定
check_Z_unique@@
 n(X, Y, Z, {L=[_IRES1 | L2], $q[L, L2]}), {+Z, rest(_IRES2, 1), $p}
 :- _IRES1 = _IRES2
 |  n(X, Y, Z, _IRES1), {+Z, rest(_IRES2, 0), $p}.

check_determination@@
  n(X, Y, Z, {rest([_IRES1])}), {+Z, rest(_IRES2, _IREST), $p}
 :- _IRES1 = _IRES2
 |  n(X, Y, Z, _IRES1), {+Z, rest(_IRES2, 0), $p}.

}.

{
 make_nodes.
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*sample http://www.nikoli.co.jp/puzzles/1/*/
init.
init :- 
 n(1,1,1, 0), n(1,2,1, 6), n(1,3,1, 0),   n(1,4,2, 1), n(1,5,2, 0), n(1,6,2, 4),   n(1,7,3, 0), n(1,8,3, 5), n(1,9,3, 0),
 n(2,1,1, 0), n(2,2,1, 0), n(2,3,1, 8),   n(2,4,2, 3), n(2,5,2, 0), n(2,6,2, 5),   n(2,7,3, 6), n(2,8,3, 0), n(2,9,3, 0),
 n(3,1,1, 2), n(3,2,1, 0), n(3,3,1, 0),   n(3,4,2, 0), n(3,5,2, 0), n(3,6,2, 0),   n(3,7,3, 0), n(3,8,3, 0), n(3,9,3, 1),
 
 n(4,1,4, 8), n(4,2,4, 0), n(4,3,4, 0),   n(4,4,5, 4), n(4,5,5, 0), n(4,6,5, 7),   n(4,7,6, 0), n(4,8,6, 0), n(4,9,6, 6),
 n(5,1,4, 0), n(5,2,4, 0), n(5,3,4, 6),   n(5,4,5, 0), n(5,5,5, 0), n(5,6,5, 0),   n(5,7,6, 3), n(5,8,6, 0), n(5,9,6, 0),
 n(6,1,4, 7), n(6,2,4, 0), n(6,3,4, 0),   n(6,4,5, 9), n(6,5,5, 0), n(6,6,5, 1),   n(6,7,6, 0), n(6,8,6, 0), n(6,9,6, 4),
 
 n(7,1,7, 5), n(7,2,7, 0), n(7,3,7, 0),   n(7,4,8, 0), n(7,5,8, 0), n(7,6,8, 0),   n(7,7,9, 0), n(7,8,9, 0), n(7,9,9, 2),
 n(8,1,7, 0), n(8,2,7, 0), n(8,3,7, 7),   n(8,4,8, 2), n(8,5,8, 0), n(8,6,8, 6),   n(8,7,9, 9), n(8,8,9, 0), n(8,9,9, 0),
 n(9,1,7, 0), n(9,2,7, 4), n(9,3,7, 0),   n(9,4,8, 5), n(9,5,8, 0), n(9,6,8, 8),   n(9,7,9, 0), n(9,8,9, 7), n(9,9,9, 0).

/*
init :- 
 n(1,1,1, 0), n(1,2,1, 0), n(1,3,1, 6),   n(1,4,2, 0), n(1,5,2, 0), n(1,6,2, 0),   n(1,7,3, 0), n(1,8,3, 0), n(1,9,3, 1),
 n(2,1,1, 0), n(2,2,1, 7), n(2,3,1, 0),   n(2,4,2, 0), n(2,5,2, 6), n(2,6,2, 0),   n(2,7,3, 0), n(2,8,3, 5), n(2,9,3, 0),
 n(3,1,1, 8), n(3,2,1, 0), n(3,3,1, 0),   n(3,4,2, 1), n(3,5,2, 0), n(3,6,2, 3),   n(3,7,3, 2), n(3,8,3, 0), n(3,9,3, 0),
 
 n(4,1,4, 0), n(4,2,4, 0), n(4,3,4, 5),   n(4,4,5, 0), n(4,5,5, 4), n(4,6,5, 0),   n(4,7,6, 8), n(4,8,6, 0), n(4,9,6, 0),
 n(5,1,4, 0), n(5,2,4, 4), n(5,3,4, 0),   n(5,4,5, 7), n(5,5,5, 0), n(5,6,5, 2),   n(5,7,6, 0), n(5,8,6, 9), n(5,9,6, 0),
 n(6,1,4, 0), n(6,2,4, 0), n(6,3,4, 8),   n(6,4,5, 0), n(6,5,5, 1), n(6,6,5, 0),   n(6,7,6, 7), n(6,8,6, 0), n(6,9,6, 0),
 
 n(7,1,7, 0), n(7,2,7, 0), n(7,3,7, 1),   n(7,4,8, 2), n(7,5,8, 0), n(7,6,8, 5),   n(7,7,9, 0), n(7,8,9, 0), n(7,9,9, 3),
 n(8,1,7, 0), n(8,2,7, 6), n(8,3,7, 0),   n(8,4,8, 0), n(8,5,8, 7), n(8,6,8, 0),   n(8,7,9, 0), n(8,8,9, 8), n(8,9,9, 0),
 n(9,1,7, 2), n(9,2,7, 0), n(9,3,7, 0),   n(9,4,8, 0), n(9,5,8, 0), n(9,6,8, 0),   n(9,7,9, 4), n(9,8,9, 0), n(9,9,9, 0).
*/
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
make_node_1@@
 n(A, B, _IC, _IX),{b(_ID), $p} :- 0 = _IX, _IC = _ID | n(A, B, L, {rest([1,2,3,4,5,6,7,8,9])}), {b(_ID), +L, $p}.

make_node_2@@
 n(A, B, _IC, _IX),{b(_ID), rest(1,_IREST1), rest(2,_IREST2), rest(3,_IREST3), rest(4,_IREST4), rest(5,_IREST5), rest(6,_IREST6), rest(7,_IREST7), rest(8,_IREST8), rest(9,_IREST9), $p}
  :- 0 < _IX, _IC = _ID, _IREST1 > 0, _IREST2 > 0, _IREST3 > 0, _IREST4 > 0, _IREST5 > 0, _IREST6 > 0, _IREST7 > 0, _IREST8 > 0, _IREST9 > 0
  | n(A, B, L, _IX),{b(_ID), +L, rest(_IX, 0), rest(1,_IREST1 - 1), rest(2,_IREST2 - 1), rest(3,_IREST3 - 1), rest(4,_IREST4 - 1), rest(5,_IREST5 - 1), rest(6,_IREST6 - 1), rest(7,_IREST7 - 1), rest(8,_IREST8 - 1), rest(9,_IREST9 - 1), $p}.

make_node_3@@
 {rest(_IX1, 0), rest(_IX2, _IREST), $p} :- _IX1 = _IX2 | {rest(_IX1, 0), $p}.

 {/*ブロック1*/ b(1). rest(1,9), rest(2,9), rest(3,9), rest(4,9), rest(5,9), rest(6,9), rest(7,9), rest(8,9), rest(9,9)}.
 {/*ブロック2*/ b(2). rest(1,9), rest(2,9), rest(3,9), rest(4,9), rest(5,9), rest(6,9), rest(7,9), rest(8,9), rest(9,9)}.
 {/*ブロック3*/ b(3). rest(1,9), rest(2,9), rest(3,9), rest(4,9), rest(5,9), rest(6,9), rest(7,9), rest(8,9), rest(9,9)}.
 {/*ブロック4*/ b(4). rest(1,9), rest(2,9), rest(3,9), rest(4,9), rest(5,9), rest(6,9), rest(7,9), rest(8,9), rest(9,9)}.
 {/*ブロック5*/ b(5). rest(1,9), rest(2,9), rest(3,9), rest(4,9), rest(5,9), rest(6,9), rest(7,9), rest(8,9), rest(9,9)}.
 {/*ブロック6*/ b(6). rest(1,9), rest(2,9), rest(3,9), rest(4,9), rest(5,9), rest(6,9), rest(7,9), rest(8,9), rest(9,9)}.
 {/*ブロック7*/ b(7). rest(1,9), rest(2,9), rest(3,9), rest(4,9), rest(5,9), rest(6,9), rest(7,9), rest(8,9), rest(9,9)}.
 {/*ブロック8*/ b(8). rest(1,9), rest(2,9), rest(3,9), rest(4,9), rest(5,9), rest(6,9), rest(7,9), rest(8,9), rest(9,9)}.
 {/*ブロック9*/ b(9). rest(1,9), rest(2,9), rest(3,9), rest(4,9), rest(5,9), rest(6,9), rest(7,9), rest(8,9), rest(9,9)}.

}.

make_nodes_done@@
 {rule, $q, @q},{make_nodes, $p, @p}/ :- {$q, @q, $p}.

{
window,position(0,0),size(500,500),name("window").
	{graphic,position(200,200),name("global"),
	    {draw,name("oval"),getpic("oval"),position(-70,-70),size(140,140),sequence(0),color(0,0,255)},
		{graphic,position(0,0),name("all"),angle(0),
			{graphic,position(50,50),name("all2"),angle(0),
				{draw,name("triangle"),getpic("triangle"),position(0,0,50,0,0,100),sequence(1),color(255,0,0)}
			}
		}
	}
}.
a(1),max_v(15),min_v(3).
%xとyの対応を維持。data(x1,y1,x2,y2)  : next(現在値、速度、最大値)。
data(next(200,-5,420),next(320,5,390)).


%%%%%ルール%%%%%%%%%%%%%%%%%%%%%%%%
%三角公転
a(1),{{{angle(N),$p,@p},$r,@r},$q,@q}:- N < 360 |a(2),{{{angle(N + 10),$p,@p},$r,@r},$q,@q}.
a(1),{{{angle(N),$p,@p},$r,@r},$q,@q}:- N >= 360 |a(2),{{{angle(0),$p,@p},$r,@r},$q,@q}.

%三角自転
a(2),{{{{angle(N),$p,@p},$r,@r},$q,@q},$s,@s}:- N < 360 |a(3),{{{{angle(N+20),$p,@p},$r,@r},$q,@q},$s,@s}.
a(2),{{{{angle(N),$p,@p},$r,@r},$q,@q},$s,@s}:- N >= 360 |a(3),{{{{angle(0),$p,@p},$r,@r},$q,@q},$s,@s}.

%移動
a(3),data(next(X,VX,W),next(Y,VY,H)),{{position(PX,PY),$p,@p},$r,@r} :- int(X),int(VX),int(W),int(Y),int(VY),int(H),int(PX),int(PY) |
a(1),data(calc(X,VX,W),calc(Y,VY,H)),{{position(X,Y),$p,@p},$r,@r}.

%次の地点の計算
Ret=calc(POS, V , MAX) :- N = POS + V , N >=70 , N =< MAX | Ret=next(N , V, MAX).
Ret=calc(POS, V , MAX) :- N = POS + V , N < 70 , int(MAX) | Ret=next(70 , rand_v, MAX).
Ret=calc(POS, V , MAX) :- N = POS + V , N > MAX          | Ret=	next(MAX , -rand_v, MAX).

%速度をランダムに決定
Ret=rand_v, min_v(MinV), max_v(MaxV) :- int(MinV), int(MaxV) |
	Ret=integer.rnd(MaxV-MinV+1)+MinV, min_v(MinV), max_v(MaxV).
/**
 *  Distributed LMNtal sample(#3)
 *    chat-client.lmn
 *  server file: chat-server.lmn
 *
 *  06/01/14 released by okabe
 *  06/01/17 update
 */

% use lib/public/io.lmn to get data from stdin.


% print received data to stdout.
graphic.use.
go:-{  window.  size(300,600). name(hoge).
io.use.

dlmntal.connect("127.0.0.1",50000,[],Out).
r=print(out(Out)).
keyChar.
now(0).
index(0,A),  {+A. draw.  name(0).  getpic(string("",20)).  position(10,30). }.
index(1,B),  {+B. draw.  name(1).  getpic(string("",20)).  position(10,60). }.
index(2,C),  {+C. draw.  name(2).  getpic(string("",20)).  position(10,90). }.
index(3,D),  {+D. draw.  name(3).  getpic(string("",20)).  position(10,120). }.
index(4,E),  {+E. draw.  name(4).  getpic(string("",20)).  position(10,150). }.
index(5,F),  {+F. draw.  name(5).  getpic(string("",20)).  position(10,180). }.
index(6,G),  {+G. draw.  name(6).  getpic(string("",20)).  position(10,210). }.
index(7,H),  {+H. draw.  name(7).  getpic(string("",20)).  position(10,240). }.
index(8,I),  {+I. draw.  name(8).  getpic(string("",20)).  position(10,270). }.
index(9,J),  {+J. draw.  name(9).  getpic(string("",20)).  position(10,300). }.
index(10,K),  {+K. draw.  name(10).  getpic(string("",20)).  position(10,330). }.
index(11,L),  {+L. draw.  name(11).  getpic(string("",20)).  position(10,360). }.

now(_IN),
index(0,A),  {+A. draw.  name(0).  getpic(string(_S0,20)).  position(10,30). },
index(1,B),  {+B. draw.  name(1).  getpic(string(_S1,20)).  position(10,60). },
index(2,C),  {+C. draw.  name(2).  getpic(string(_S2,20)).  position(10,90). },
index(3,D),  {+D. draw.  name(3).  getpic(string(_S3,20)).  position(10,120). },
index(4,E),  {+E. draw.  name(4).  getpic(string(_S4,20)).  position(10,150). },
index(5,F),  {+F. draw.  name(5).  getpic(string(_S5,20)).  position(10,180). },
index(6,G),  {+G. draw.  name(6).  getpic(string(_S6,20)).  position(10,210). },
index(7,H),  {+H. draw.  name(7).  getpic(string(_S7,20)).  position(10,240). },
index(8,I),  {+I. draw.  name(8).  getpic(string(_S8,20)).  position(10,270). },
index(9,J),  {+J. draw.  name(9).  getpic(string(_S9,20)).  position(10,300). },
index(10,K),  {+K. draw.  name(10).  getpic(string(_S10,20)).  position(10,330). },
index(11,L),  {+L. draw.  name(11).  getpic(string(_S11,20)).  position(10,360). }
:-_IN > 11 |
now(11),
index(0,A),  {+A. draw.  name(0).  getpic(string(_S1,20)).  position(10,30). },
index(1,B),  {+B. draw.  name(1).  getpic(string(_S2,20)).  position(10,60). },
index(2,C),  {+C. draw.  name(2).  getpic(string(_S3,20)).  position(10,90). },
index(3,D),  {+D. draw.  name(3).  getpic(string(_S4,20)).  position(10,120). },
index(4,E),  {+E. draw.  name(4).  getpic(string(_S5,20)).  position(10,150). },
index(5,F),  {+F. draw.  name(5).  getpic(string(_S6,20)).  position(10,180). },
index(6,G),  {+G. draw.  name(6).  getpic(string(_S7,20)).  position(10,210). },
index(7,H),  {+H. draw.  name(7).  getpic(string(_S8,20)).  position(10,240). },
index(8,I),  {+I. draw.  name(8).  getpic(string(_S9,20)).  position(10,270). },
index(9,J),  {+J. draw.  name(9).  getpic(string(_S10,20)).  position(10,300). },
index(10,K),  {+K. draw.  name(10).  getpic(string(_S11,20)).  position(10,330). },
index(11,L),  {+L. draw.  name(11).  getpic(string("",20)).  position(10,360). }.

index(100,Z),  {+Z. draw.  name(100).  getpic(string("",20)). color(255,0,0). position(10,450). }.

keyChar([_ST|H]),index(100,Z),{+Z,getpic(string(_SS,20)),@p,$p} :-
		_ST \= "\n"|
	keyChar(H),index(100,Z),{+Z,getpic(string(string.concat(_SS,_ST),20)),@p,$p}.

keyChar([_ST|H]),index(100,Z),{+Z,getpic(string(_SS,20)),@p,$p},dlmntal.socket(S,A,B):-
_ST = "\n"|
	keyChar(H),index(100,Z),{+Z,getpic(string("",20)),@p,$p},dlmntal.socket(list.append(S,[_SS]),A,B).


R=out([]) :- R=[].
R=out([_SH|T]),now(_IN),index(_IA, I),{+I,getpic(string(_SM,20)),@p,$p} :- 
		_IN = _IA |
	now(_IN+1),index(_IA, I),{+I,getpic(string(_SH,20)),@p,$p},
	R=[out(T)].
}.
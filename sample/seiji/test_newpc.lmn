/*
{
test, test.

test :- uniq | ok.
}.

{@p, $q}/ :- {$q}.
*/

/*

t(1), t(1), t(2), t(2).
i(0).
{
t_ok @@ t(T) :- int(T), uniq(T) | ok(T).
}.
rule_copy @@ i(I), {@p}/ :- I<2 | i(I+1), {@p}, @p.
*/

/*
a(b(c)), a(b(c(d))).

a(A) :- uniq(A) | b(A).
*/

/*
a(X, Y), b(Y, Z), c(Z, X).
a(A, B) :- uniq(A, B) | ok(A, B).
*/

/*
a(1), a(1), a(1), b(2), b(2), b(2).

a(A), b(B) :- uniq(A, B) | aok(A), bok(B).
a(A), b(B) :- uniq(A, B) | aok(A), bok(B).
//a(A), b(B) :- uniq(B, A) | aok(A), bok(B).
*/
/*
a(L), {b(L)}, a(M), {b(M)}.
a(A) :- ground(A) | ok(A).
*/


//b(c, a), b(a, c).

/*
b(a, a), b(a, a), b(a, a).
a(X), a(Y), $p[X, Y] :- uniq($p) | ok.
*/
/*
a(A, B), {b(A, B)}.
a(D, C), {b(C, D)}.
a(X, Y), {$p[X, Y]} :- uniq($p) | ok.
*/

/*
{b(a,c)}, {b(c,a)}.
name @@ {a(X), c(Y), $p[X, Y]}, {a(A), c(B), $q[A, B]} :- $p=$q | ok.
*/


//a(X), a(X) :- ground(X) | ok.


//{$p} :- ground($p) | {$p}.


//X=Y :- p(X, Y).


a.

a :- uniq | b.
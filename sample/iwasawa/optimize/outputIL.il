Compiled Ruleset @608 
Compiled Rule 
	--atommatch:
		spec           [2, 2]
	--memmatch:
		spec           [1, 1]
		jump           [L891, [0], [], []]
	--guard:L891:
		spec           [1, 1]
		jump           [L884, [0], [], []]
	--body:L884:
		spec           [1, 15]
		commit         ["_init", 0]
		newmem      [1, 0, 0]
		setmemname     [1, "outputInitRule1"]
		newmem      [2, 0, 0]
		setmemname     [2, "outputInitRule2"]
		newmem      [3, 0, 0]
		setmemname     [3, "outputRuleSet"]
		newmem      [4, 0, 0]
		setmemname     [4, "outputInsts"]
		newmem      [5, 0, 0]
		setmemname     [5, "outputSlash"]
		newmem      [6, 0, 0]
		setmemname     [6, "deleteIO"]
		loadruleset    [1, @601]
		loadruleset    [2, @602]
		loadruleset    [3, @603]
		loadruleset    [4, @604]
		loadruleset    [5, @605]
		loadruleset    [6, @606]
		loadruleset    [0, @607]
		newatom     [7, 1, 'io'.'stdout'_1]
		newatom     [8, 1, 'outport'_1]
		newatom     [9, 5, 'do'_0]
		newatom    [10, 0, 'seq'.'use'_0]
		newatom    [11, 0, 'io'.'use'_0]
		newatom    [12, 0, 'str'.'use'_0]
		alloclink  [13, 7, 0]
		alloclink  [14, 8, 0]
		unifylinks     [13, 14, 1]
		enqueueatom    [12]
		enqueueatom    [11]
		enqueueatom    [10]
		enqueueatom    [9]
		enqueueatom    [8]
		enqueueatom    [7]
		loadmodule     [1, "io"]
		loadmodule     [0, "seq"]
		loadmodule     [0, "io"]
		loadmodule     [0, "str"]
		proceed        []


Compiled Ruleset @607 
Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 8]
		anymem      [1, 0, 0, "rulesets"]
		anymem      [2, 0, 0, "outputInitRule1"]
		neqmem         [2, 1]
		anymem      [3, 0, 0, "outputInitRule2"]
		neqmem         [3, 1]
		neqmem         [3, 2]
		anymem      [4, 0, 0, "outputRuleSet"]
		neqmem         [4, 1]
		neqmem         [4, 2]
		neqmem         [4, 3]
		anymem      [5, 0, 0, "outputInsts"]
		neqmem         [5, 1]
		neqmem         [5, 2]
		neqmem         [5, 3]
		neqmem         [5, 4]
		anymem      [6, 0, 0, "outputSlash"]
		neqmem         [6, 1]
		neqmem         [6, 2]
		neqmem         [6, 3]
		neqmem         [6, 4]
		neqmem         [6, 5]
		anymem      [7, 0, 0, "deleteIO"]
		neqmem         [7, 1]
		neqmem         [7, 2]
		neqmem         [7, 3]
		neqmem         [7, 4]
		neqmem         [7, 5]
		neqmem         [7, 6]
		nfreelinks     [1, 0]
		nfreelinks     [2, 0]
		nfreelinks     [6, 0]
		jump           [L874, [0, 1, 2, 3, 4, 5, 6, 7], [], []]
	--guard:L874:
		spec           [8, 8]
		natoms         [3, 0]
		nmems          [3, 0]
		natoms         [4, 0]
		nmems          [4, 0]
		natoms         [5, 0]
		nmems          [5, 0]
		natoms         [7, 0]
		nmems          [7, 0]
		jump           [L867, [0, 1, 2, 3, 4, 5, 6, 7], [], []]
	--body:L867:
		spec           [8, 41]
		commit         ["_rule", 0]
		removemem      [1, 0]
		removeproxies  [1]
		removemem      [2, 0]
		removeproxies  [2]
		removemem      [3, 0]
		removemem      [4, 0]
		removemem      [5, 0]
		removemem      [6, 0]
		removeproxies  [6]
		removemem      [7, 0]
		removetoplevelproxies[0]
		newmem      [8, 0, 0]
		movecells      [8, 1]
		insertproxies  [0, 8]
		newmem      [9, 0, 0]
		movecells      [9, 2]
		insertproxies  [0, 9]
		newmem     [10, 0, 0]
		newmem     [11, 0, 0]
		newmem     [12, 0, 0]
		movecells      [12, 6]
		insertproxies  [0, 12]
		newmem     [13, 0, 0]
		copyrules      [9, 2]
		copyrules      [10, 3]
		copyrules      [10, 5]
		copyrules      [11, 4]
		copyrules      [11, 5]
		copyrules      [12, 6]
		copyrules      [13, 7]
		newatom    [14, 8, 'seq_run'_0]
		newatom    [15, 8, '+'_1]
		newatom    [16, 8, $in_2]
		newatom    [17, 9, '+'_1]
		newatom    [18, 9, $in_2]
		newatom    [19, 10, '+'_1]
		newatom    [20, 10, $in_2]
		newatom    [21, 11, '+'_1]
		newatom    [22, 11, $in_2]
		newatom    [23, 12, '+'_1]
		newatom    [24, 12, $in_2]
		newatom    [25, 13, '+'_1]
		newatom    [26, 13, $in_2]
		newatom    [27, 0, 'ret'_1]
		newatom    [28, 0, '[]'_1]
		newatom    [29, 0, '.'_3]
		newatom    [30, 0, '.'_3]
		newatom    [31, 0, '.'_3]
		newatom    [32, 0, '.'_3]
		newatom    [33, 0, '.'_3]
		newatom    [34, 0, 'seq'.'run'_3]
		newatom    [35, 0, $out_2]
		newatom    [36, 0, $out_2]
		newatom    [37, 0, $out_2]
		newatom    [38, 0, $out_2]
		newatom    [39, 0, $out_2]
		newatom    [40, 0, $out_2]
		newlink        [15, 0, 16, 1, 8]
		newlink        [17, 0, 18, 1, 9]
		newlink        [19, 0, 20, 1, 10]
		newlink        [21, 0, 22, 1, 11]
		newlink        [23, 0, 24, 1, 12]
		newlink        [25, 0, 26, 1, 13]
		newlink        [27, 0, 34, 2, 0]
		newlink        [28, 0, 29, 1, 0]
		newlink        [29, 0, 40, 1, 0]
		newlink        [29, 2, 30, 1, 0]
		newlink        [30, 0, 39, 1, 0]
		newlink        [30, 2, 31, 1, 0]
		newlink        [31, 0, 38, 1, 0]
		newlink        [31, 2, 32, 1, 0]
		newlink        [32, 0, 37, 1, 0]
		newlink        [32, 2, 33, 1, 0]
		newlink        [33, 0, 36, 1, 0]
		newlink        [33, 2, 34, 1, 0]
		newlink        [34, 0, 35, 1, 0]
		newlink        [35, 0, 16, 0, 0]
		newlink        [36, 0, 18, 0, 0]
		newlink        [37, 0, 20, 0, 0]
		newlink        [38, 0, 22, 0, 0]
		newlink        [39, 0, 24, 0, 0]
		newlink        [40, 0, 26, 0, 0]
		enqueueatom    [34]
		enqueueatom    [27]
		enqueueatom    [25]
		enqueueatom    [23]
		enqueueatom    [21]
		enqueueatom    [19]
		enqueueatom    [17]
		enqueueatom    [15]
		enqueueatom    [14]
		loadmodule     [0, "seq"]
		freemem        [1]
		freemem        [2]
		freemem        [3]
		freemem        [4]
		freemem        [5]
		freemem        [6]
		freemem        [7]
		proceed        []


Compiled Ruleset @601 
Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 4]
		findatom    [1, 0, 'outport'_1]
		anymem      [2, 0, 0, "initRuleset"]
		findatom    [3, 2, 'ruleset'_1]
		nfreelinks     [2, 0]
		jump           [L118, [0, 2], [1, 3], []]
	--guard:L118:
		spec           [4, 5]
		derefatom   [4, 3, 0]
		isint          [4]
		jump           [L103, [0, 1], [2, 3, 4], []]
	--body:L103:
		spec           [5, 11]
		commit         ["outputInit1", 0]
		dequeueatom    [2]
		dequeueatom    [3]
		removeatom     [2, 0, 'outport'_1]
		removeatom     [3, 1, 'ruleset'_1]
		dequeueatom    [4]
		removeatom     [4, 1]
		removemem      [1, 0]
		removeproxies  [1]
		movecells      [0, 1]
		removetemporaryproxies[0]
		copyatom    [5, 0, 4]
		newatom     [6, 0, 'outport'_1]
		newatom     [7, 0, "Compiled Ruleset @"_1]
		newatom     [8, 0, 'io'.'print'_3]
		newatom     [9, 0, 'str'.'from'_2]
		newatom    [10, 0, 'io'.'print_line'_3]
		newlink        [6, 0, 10, 2, 0]
		newlink        [7, 0, 8, 1, 0]
		relink         [8, 0, 2, 0, 0]
		newlink        [8, 2, 10, 0, 0]
		newlink        [9, 0, 5, 0, 0]
		newlink        [9, 1, 10, 1, 0]
		enqueueatom    [10]
		enqueueatom    [9]
		enqueueatom    [8]
		enqueueatom    [6]
		loadmodule     [0, "io"]
		loadmodule     [0, "str"]
		loadmodule     [0, "io"]
		freemem        [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		proceed        []


Compiled Ruleset @602 
Compiled Rule 
	--atommatch:
		spec           [2, 5]
	--memmatch:
		spec           [1, 3]
		findatom    [1, 0, 'outport'_1]
		findatom    [2, 0, 'compiledRule'_1]
		jump           [L151, [0], [1, 2], []]
	--guard:L151:
		spec           [3, 3]
		jump           [L136, [0], [1, 2], []]
	--body:L136:
		spec           [3, 7]
		commit         ["outputInit2", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'outport'_1]
		removeatom     [2, 0, 'compiledRule'_1]
		newatom     [3, 0, 'outport'_1]
		newatom     [4, 0, "Compiled Rule\n\t--atommatch:\n\t--memmatch:\n\t--body:L0:\n"_1]
		newatom     [5, 0, 'io'.'print'_3]
		newatom     [6, 0, 'print_insts'_3]
		newlink        [3, 0, 6, 2, 0]
		newlink        [4, 0, 5, 1, 0]
		relink         [5, 0, 1, 0, 0]
		newlink        [5, 2, 6, 0, 0]
		relink         [6, 1, 2, 0, 0]
		enqueueatom    [6]
		enqueueatom    [5]
		enqueueatom    [3]
		loadmodule     [0, "io"]
		freeatom       [1]
		freeatom       [2]
		proceed        []


Compiled Ruleset @603   
Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 8]
		findatom    [1, 0, 'outport'_1]
		findatom    [2, 0, 'optimized_ruleset'_1]
		deref       [3, 2, 0, 1]
		func           [3, $out_2]
		deref       [4, 3, 0, 0]
		func           [4, $in_2]
		lockmem     [5, 4, null]
		deref       [6, 4, 1, 0]
		func           [6, '+'_1]
		findatom    [7, 5, 'ruleset'_1]
		jump           [L200, [0, 5], [1, 2, 3, 7, 6, 4], []]
	--guard:L200:
		spec           [8, 9]
		derefatom   [8, 5, 0]
		isint          [8]
		norules        [1]
		jump           [L169, [0, 1], [2, 3, 4, 5, 6, 7, 8], []]
	--body:L169:
		spec           [9, 21]
		commit         ["outputRuleSet", 0]
		dequeueatom    [2]
		dequeueatom    [3]
		dequeueatom    [5]
		dequeueatom    [6]
		removeatom     [2, 0, 'outport'_1]
		removeatom     [3, 0, 'optimized_ruleset'_1]
		removeatom     [4, 0, $out_2]
		removeatom     [5, 1, 'ruleset'_1]
		removeatom     [6, 1, '+'_1]
		removeatom     [7, 1, $in_2]
		dequeueatom    [8]
		removeatom     [8, 1]
		removemem      [1, 0]
		removeproxies  [1]
		newmem      [9, 0, 0]
		movecells      [9, 1]
		insertproxies  [0, 9]
		copyatom   [10, 0, 8]
		newatom    [11, 9, '+'_1]
		newatom    [12, 9, $in_2]
		newatom    [13, 0, 'outport'_1]
		newatom    [14, 0, "Compiled Ruleset @"_1]
		newatom    [15, 0, 'io'.'print'_3]
		newatom    [16, 0, 'str'.'from'_2]
		newatom    [17, 0, 'io'.'print_line'_3]
		newatom    [18, 0, 'optimized_ruleset'_2]
		newatom    [19, 0, 'print_ruleset'_3]
		newatom    [20, 0, $out_2]
		newlink        [11, 0, 12, 1, 9]
		newlink        [13, 0, 19, 2, 0]
		newlink        [14, 0, 15, 1, 0]
		relink         [15, 0, 2, 0, 0]
		newlink        [15, 2, 17, 0, 0]
		newlink        [16, 0, 10, 0, 0]
		newlink        [16, 1, 17, 1, 0]
		newlink        [17, 2, 19, 0, 0]
		newlink        [18, 0, 20, 1, 0]
		newlink        [18, 1, 19, 1, 0]
		newlink        [20, 0, 12, 0, 0]
		enqueueatom    [19]
		enqueueatom    [18]
		enqueueatom    [17]
		enqueueatom    [16]
		enqueueatom    [15]
		enqueueatom    [13]
		enqueueatom    [11]
		loadmodule     [0, "io"]
		loadmodule     [0, "str"]
		loadmodule     [0, "io"]
		freemem        [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		freeatom       [5]
		freeatom       [6]
		freeatom       [7]
		freeatom       [8]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 17]
	--memmatch:
		spec           [1, 7]
		findatom    [1, 0, 'optimized_ruleset'_2]
		deref       [2, 1, 0, 1]
		func           [2, $out_2]
		deref       [3, 1, 1, 1]
		func           [3, 'print_ruleset'_3]
		deref       [4, 2, 0, 0]
		func           [4, $in_2]
		lockmem     [5, 4, null]
		deref       [6, 4, 1, 0]
		func           [6, '+'_1]
		jump           [L261, [0, 5], [1, 3, 2, 6, 4], []]
	--guard:L261:
		spec           [7, 7]
		natoms         [1, 1]
		nmems          [1, 0]
		norules        [1]
		jump           [L234, [0, 1], [2, 3, 4, 5, 6], []]
	--body:L234:
		spec           [7, 7]
		commit         ["printRuleset1", 0]
		dequeueatom    [2]
		dequeueatom    [3]
		dequeueatom    [5]
		removeatom     [2, 0, 'optimized_ruleset'_2]
		removeatom     [3, 0, 'print_ruleset'_3]
		removeatom     [4, 0, $out_2]
		removeatom     [5, 1, '+'_1]
		removeatom     [6, 1, $in_2]
		removemem      [1, 0]
		unify          [3, 2, 3, 0, 0]
		freemem        [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		freeatom       [5]
		freeatom       [6]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 19]
	--memmatch:
		spec           [1, 8]
		findatom    [1, 0, 'optimized_ruleset'_2]
		deref       [2, 1, 0, 1]
		func           [2, $out_2]
		deref       [3, 1, 1, 1]
		func           [3, 'print_ruleset'_3]
		deref       [4, 2, 0, 0]
		func           [4, $in_2]
		lockmem     [5, 4, null]
		deref       [6, 4, 1, 0]
		func           [6, '+'_1]
		findatom    [7, 5, 'optimizedRule'_1]
		nfreelinks     [5, 1]
		jump           [L322, [0, 5], [1, 3, 2, 7, 6, 4], []]
	--guard:L322:
		spec           [8, 12]
		getlink     [8, 5, 0]
		newlist     [9]
		addtolist      [9, 8]
		newlist    [10]
		isground   [11, 9, 10]
		jump           [L291, [0, 1], [2, 3, 4, 5, 6, 7], []]
	--body:L291:
		spec           [8, 46]
		commit         ["printRuleset2", 0]
		newlist     [8]
		getlink     [9, 5, 0]
		addtolist      [8, 9]
		dequeueatom    [2]
		dequeueatom    [3]
		dequeueatom    [5]
		dequeueatom    [6]
		removeatom     [2, 0, 'optimized_ruleset'_2]
		removeatom     [3, 0, 'print_ruleset'_3]
		removeatom     [4, 0, $out_2]
		removeatom     [5, 1, 'optimizedRule'_1]
		removeatom     [6, 1, '+'_1]
		removeatom     [7, 1, $in_2]
		removeground   [8, 1]
		removemem      [1, 0]
		removeproxies  [1]
		getlink    [10, 5, 0]
		insertconnectorsinnull[11, [10]]
		newlist    [12]
		getlink    [13, 5, 0]
		addtolist      [12, 13]
		newmem     [14, 0, 0]
		movecells      [14, 1]
		insertproxies  [0, 14]
		copyground [15, 12, 0]
		getfromlist[16, 15, 0]
		getfromlist[17, 15, 1]
		newatom    [18, 14, '+'_1]
		newatom    [19, 14, $in_2]
		newatom    [20, 0, "Compiled Rule \n\t--atommatch:\n\t--memmatch:\n"_1]
		newatom    [21, 0, 'io'.'print'_3]
		newatom    [22, 0, 'print_insts'_3]
		newatom    [23, 0, 'optimized_ruleset'_2]
		newatom    [24, 0, 'print_ruleset'_3]
		newatom    [25, 0, $out_2]
		alloclink  [26, 25, 0]
		alloclink  [27, 19, 0]
		alloclink  [28, 24, 2]
		alloclink  [29, 24, 1]
		alloclink  [30, 23, 1]
		alloclink  [31, 25, 1]
		alloclink  [32, 23, 0]
		alloclink  [33, 24, 0]
		alloclink  [34, 22, 2]
		alloclink  [35, 22, 1]
		alloclink  [36, 22, 0]
		alloclink  [37, 21, 2]
		alloclink  [38, 21, 0]
		alloclink  [39, 21, 1]
		alloclink  [40, 20, 0]
		alloclink  [41, 19, 1]
		alloclink  [42, 18, 0]
		getfromlist[43, 16, 0]
		unifylinks     [42, 41, 14]
		unifylinks     [40, 39, 0]
		getlink    [44, 3, 0]
		unifylinks     [38, 44, 0]
		unifylinks     [37, 36, 0]
		unifylinks     [35, 43, 0]
		unifylinks     [34, 33, 0]
		unifylinks     [32, 31, 0]
		unifylinks     [30, 29, 0]
		getlink    [45, 3, 2]
		unifylinks     [28, 45, 0]
		unifylinks     [26, 27, 0]
		deleteconnectors[11, 17]
		enqueueatom    [24]
		enqueueatom    [23]
		enqueueatom    [22]
		enqueueatom    [21]
		enqueueatom    [18]
		loadmodule     [0, "io"]
		freemem        [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		freeatom       [5]
		freeatom       [6]
		freeatom       [7]
		freeground     [12]
		proceed        []


Compiled Ruleset @604             
Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 3]
		findatom    [1, 0, 'print_insts'_3]
		deref       [2, 1, 1, 0]
		func           [2, '[]'_1]
		jump           [L371, [0], [1, 2], []]
	--guard:L371:
		spec           [3, 3]
		jump           [L356, [0], [1, 2], []]
	--body:L356:
		spec           [3, 3]
		commit         ["print_insts_nil", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'print_insts'_3]
		removeatom     [2, 0, '[]'_1]
		unify          [1, 2, 1, 0, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 19]
	--memmatch:
		spec           [1, 6]
		findatom    [1, 0, 'print_insts'_3]
		deref       [2, 1, 1, 2]
		func           [2, '.'_3]
		deref       [3, 2, 0, 2]
		func           [3, '.'_3]
		deref       [4, 3, 1, 2]
		func           [4, '.'_3]
		deref       [5, 4, 1, 0]
		func           [5, '[]'_1]
		jump           [L416, [0], [1, 5, 4, 3, 2], []]
	--guard:L416:
		spec           [6, 7]
		derefatom   [6, 4, 0]
		isunary        [6]
		jump           [L389, [0], [1, 2, 3, 4, 5, 6], []]
	--body:L389:
		spec           [7, 17]
		commit         ["print_insts", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		dequeueatom    [3]
		dequeueatom    [4]
		dequeueatom    [5]
		removeatom     [1, 0, 'print_insts'_3]
		removeatom     [2, 0, '[]'_1]
		removeatom     [3, 0, '.'_3]
		removeatom     [4, 0, '.'_3]
		removeatom     [5, 0, '.'_3]
		dequeueatom    [6]
		removeatom     [6, 0]
		copyatom    [7, 0, 6]
		newatom     [8, 0, "\t\t"_1]
		newatom     [9, 0, 'io'.'print'_3]
		newatom    [10, 0, 'str'.'from'_2]
		newatom    [11, 0, 'io'.'print'_3]
		newatom    [12, 0, "\t"_1]
		newatom    [13, 0, 'io'.'print'_3]
		newatom    [14, 0, 'list_to_string'_2]
		newatom    [15, 0, 'io'.'print_line'_3]
		newatom    [16, 0, 'print_insts'_3]
		newlink        [8, 0, 9, 1, 0]
		relink         [9, 0, 1, 0, 0]
		newlink        [9, 2, 11, 0, 0]
		newlink        [10, 0, 7, 0, 0]
		newlink        [10, 1, 11, 1, 0]
		newlink        [11, 2, 13, 0, 0]
		newlink        [12, 0, 13, 1, 0]
		newlink        [13, 2, 15, 0, 0]
		relink         [14, 0, 3, 0, 0]
		newlink        [14, 1, 15, 1, 0]
		newlink        [15, 2, 16, 0, 0]
		relink         [16, 1, 5, 1, 0]
		relink         [16, 2, 1, 2, 0]
		enqueueatom    [16]
		enqueueatom    [15]
		enqueueatom    [14]
		enqueueatom    [13]
		enqueueatom    [11]
		enqueueatom    [10]
		enqueueatom    [9]
		loadmodule     [0, "io"]
		loadmodule     [0, "str"]
		loadmodule     [0, "io"]
		loadmodule     [0, "io"]
		loadmodule     [0, "io"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		freeatom       [5]
		freeatom       [6]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 3]
		findatom    [1, 0, 'list_to_string'_2]
		deref       [2, 1, 0, 0]
		func           [2, '[]'_1]
		jump           [L461, [0], [1, 2], []]
	--guard:L461:
		spec           [3, 3]
		jump           [L446, [0], [1, 2], []]
	--body:L446:
		spec           [3, 4]
		commit         ["list_to_string1", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'list_to_string'_2]
		removeatom     [2, 0, '[]'_1]
		newatom     [3, 0, "[]"_1]
		relink         [3, 0, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 3]
		findatom    [1, 0, 'list_to_string'_2]
		deref       [2, 1, 0, 2]
		func           [2, '.'_3]
		jump           [L494, [0], [1, 2], []]
	--guard:L494:
		spec           [3, 3]
		jump           [L479, [0], [1, 2], []]
	--body:L479:
		spec           [3, 7]
		commit         ["list_to_string2", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'list_to_string'_2]
		removeatom     [2, 0, '.'_3]
		newatom     [3, 0, "["_1]
		newatom     [4, 0, '.'_3]
		newatom     [5, 0, 'inner_list_to_string'_2]
		newatom     [6, 0, 'str'.'concat'_3]
		newlink        [3, 0, 6, 0, 0]
		relink         [4, 0, 2, 0, 0]
		relink         [4, 1, 2, 1, 0]
		newlink        [4, 2, 5, 0, 0]
		newlink        [5, 1, 6, 1, 0]
		relink         [6, 2, 1, 1, 0]
		enqueueatom    [6]
		enqueueatom    [5]
		loadmodule     [0, "str"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 3]
		findatom    [1, 0, 'inner_list_to_string'_2]
		deref       [2, 1, 0, 0]
		func           [2, '[]'_1]
		jump           [L527, [0], [1, 2], []]
	--guard:L527:
		spec           [3, 3]
		jump           [L512, [0], [1, 2], []]
	--body:L512:
		spec           [3, 4]
		commit         ["inner_list_to_string1", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'inner_list_to_string'_2]
		removeatom     [2, 0, '[]'_1]
		newatom     [3, 0, "]"_1]
		relink         [3, 0, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 4]
		findatom    [1, 0, 'inner_list_to_string'_2]
		deref       [2, 1, 0, 2]
		func           [2, '.'_3]
		deref       [3, 2, 1, 2]
		func           [3, '.'_3]
		jump           [L564, [0], [1, 3, 2], []]
	--guard:L564:
		spec           [4, 14]
		getlink     [4, 1, 1]
		getlink     [5, 2, 0]
		getlink     [6, 2, 1]
		getlink     [7, 3, 0]
		newlist     [8]
		addtolist      [8, 7]
		newlist     [9]
		addtolist      [9, 4]
		addtolist      [9, 5]
		addtolist      [9, 6]
		isground   [10, 8, 9]
		newlist    [11]
		addtolist      [11, 5]
		newlist    [12]
		addtolist      [12, 4]
		addtolist      [12, 6]
		addtolist      [12, 7]
		isground   [13, 11, 12]
		jump           [L545, [0], [1, 2, 3], []]
	--body:L545:
		spec           [4, 46]
		commit         ["inner_list_to_string2", 0]
		newlist     [4]
		getlink     [5, 2, 0]
		addtolist      [4, 5]
		newlist     [6]
		getlink     [7, 3, 0]
		addtolist      [6, 7]
		dequeueatom    [1]
		dequeueatom    [2]
		dequeueatom    [3]
		removeatom     [1, 0, 'inner_list_to_string'_2]
		removeatom     [2, 0, '.'_3]
		removeatom     [3, 0, '.'_3]
		removeground   [6, 0]
		removeground   [4, 0]
		getlink     [8, 3, 0]
		insertconnectorsinnull[9, [8]]
		getlink    [10, 2, 0]
		insertconnectorsinnull[11, [10]]
		newlist    [12]
		getlink    [13, 2, 0]
		addtolist      [12, 13]
		newlist    [14]
		getlink    [15, 3, 0]
		addtolist      [14, 15]
		copyground [16, 14, 0]
		getfromlist[17, 16, 0]
		getfromlist[18, 16, 1]
		copyground [19, 12, 0]
		getfromlist[20, 19, 0]
		getfromlist[21, 19, 1]
		newatom    [22, 0, 'elm_to_string'_2]
		newatom    [23, 0, ", "_1]
		newatom    [24, 0, 'str'.'concat'_3]
		newatom    [25, 0, '.'_3]
		newatom    [26, 0, 'inner_list_to_string'_2]
		newatom    [27, 0, 'str'.'concat'_3]
		alloclink  [28, 27, 2]
		alloclink  [29, 27, 1]
		alloclink  [30, 26, 1]
		alloclink  [31, 26, 0]
		alloclink  [32, 25, 2]
		alloclink  [33, 25, 1]
		alloclink  [34, 25, 0]
		alloclink  [35, 27, 0]
		alloclink  [36, 24, 2]
		alloclink  [37, 24, 1]
		alloclink  [38, 23, 0]
		alloclink  [39, 24, 0]
		alloclink  [40, 22, 1]
		alloclink  [41, 22, 0]
		getfromlist[42, 20, 0]
		getfromlist[43, 17, 0]
		unifylinks     [41, 43, 0]
		unifylinks     [40, 39, 0]
		unifylinks     [38, 37, 0]
		unifylinks     [36, 35, 0]
		unifylinks     [34, 42, 0]
		getlink    [44, 2, 1]
		unifylinks     [33, 44, 0]
		unifylinks     [32, 31, 0]
		unifylinks     [30, 29, 0]
		getlink    [45, 1, 1]
		unifylinks     [28, 45, 0]
		deleteconnectors[9, 18]
		deleteconnectors[11, 21]
		enqueueatom    [27]
		enqueueatom    [26]
		enqueueatom    [24]
		enqueueatom    [22]
		loadmodule     [0, "str"]
		loadmodule     [0, "str"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeground     [14]
		freeground     [12]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 4]
		findatom    [1, 0, 'inner_list_to_string'_2]
		deref       [2, 1, 0, 2]
		func           [2, '.'_3]
		deref       [3, 2, 1, 0]
		func           [3, '[]'_1]
		jump           [L605, [0], [1, 3, 2], []]
	--guard:L605:
		spec           [4, 9]
		getlink     [4, 1, 1]
		getlink     [5, 3, 0]
		newlist     [6]
		addtolist      [6, 5]
		newlist     [7]
		addtolist      [7, 4]
		isground    [8, 6, 7]
		jump           [L586, [0], [1, 2, 3], []]
	--body:L586:
		spec           [4, 27]
		commit         ["inner_list_to_string3", 0]
		newlist     [4]
		getlink     [5, 3, 0]
		addtolist      [4, 5]
		dequeueatom    [1]
		dequeueatom    [2]
		dequeueatom    [3]
		removeatom     [1, 0, 'inner_list_to_string'_2]
		removeatom     [2, 0, '[]'_1]
		removeatom     [3, 0, '.'_3]
		removeground   [4, 0]
		getlink     [6, 3, 0]
		insertconnectorsinnull[7, [6]]
		newlist     [8]
		getlink     [9, 3, 0]
		addtolist      [8, 9]
		copyground [10, 8, 0]
		getfromlist[11, 10, 0]
		getfromlist[12, 10, 1]
		newatom    [13, 0, 'elm_to_string'_2]
		newatom    [14, 0, '[]'_1]
		newatom    [15, 0, 'inner_list_to_string'_2]
		newatom    [16, 0, 'str'.'concat'_3]
		alloclink  [17, 16, 2]
		alloclink  [18, 16, 1]
		alloclink  [19, 15, 1]
		alloclink  [20, 15, 0]
		alloclink  [21, 14, 0]
		alloclink  [22, 16, 0]
		alloclink  [23, 13, 1]
		alloclink  [24, 13, 0]
		getfromlist[25, 11, 0]
		unifylinks     [24, 25, 0]
		unifylinks     [23, 22, 0]
		unifylinks     [21, 20, 0]
		unifylinks     [19, 18, 0]
		getlink    [26, 1, 1]
		unifylinks     [17, 26, 0]
		deleteconnectors[7, 12]
		enqueueatom    [16]
		enqueueatom    [15]
		enqueueatom    [13]
		loadmodule     [0, "str"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeground     [8]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 3]
		findatom    [1, 0, 'null'_1]
		deref       [2, 1, 0, 0]
		func           [2, 'elm_to_string'_2]
		jump           [L642, [0], [1, 2], []]
	--guard:L642:
		spec           [3, 3]
		jump           [L627, [0], [1, 2], []]
	--body:L627:
		spec           [3, 4]
		commit         ["elm_to_string1", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'null'_1]
		removeatom     [2, 0, 'elm_to_string'_2]
		newatom     [3, 0, "null"_1]
		relink         [3, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 4]
	--memmatch:
		spec           [1, 2]
		findatom    [1, 0, 'elm_to_string'_2]
		jump           [L671, [0], [1], []]
	--guard:L671:
		spec           [2, 3]
		derefatom   [2, 1, 0]
		isint          [2]
		jump           [L660, [0], [1, 2], []]
	--body:L660:
		spec           [3, 5]
		commit         ["elm_to_string2", 0]
		dequeueatom    [1]
		removeatom     [1, 0, 'elm_to_string'_2]
		dequeueatom    [2]
		removeatom     [2, 0]
		copyatom    [3, 0, 2]
		newatom     [4, 0, 'str'.'from'_2]
		newlink        [4, 0, 3, 0, 0]
		relink         [4, 1, 1, 1, 0]
		enqueueatom    [4]
		loadmodule     [0, "str"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 3]
		findatom    [1, 0, 'rulesetNum'_2]
		deref       [2, 1, 1, 0]
		func           [2, 'elm_to_string'_2]
		jump           [L700, [0], [1, 2], []]
	--guard:L700:
		spec           [3, 4]
		derefatom   [3, 1, 0]
		isint          [3]
		jump           [L685, [0], [1, 2, 3], []]
	--body:L685:
		spec           [4, 8]
		commit         ["_Rete", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'rulesetNum'_2]
		removeatom     [2, 0, 'elm_to_string'_2]
		dequeueatom    [3]
		removeatom     [3, 0]
		copyatom    [4, 0, 3]
		newatom     [5, 0, "@"_1]
		newatom     [6, 0, 'str'.'from'_2]
		newatom     [7, 0, 'str'.'concat'_3]
		newlink        [5, 0, 7, 0, 0]
		newlink        [6, 0, 4, 0, 0]
		newlink        [6, 1, 7, 1, 0]
		relink         [7, 2, 2, 1, 0]
		enqueueatom    [7]
		enqueueatom    [6]
		loadmodule     [0, "str"]
		loadmodule     [0, "str"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 3]
		findatom    [1, 0, 'intFunctor'_3]
		deref       [2, 1, 2, 0]
		func           [2, 'elm_to_string'_2]
		jump           [L733, [0], [1, 2], []]
	--guard:L733:
		spec           [3, 5]
		derefatom   [3, 1, 0]
		isint          [3]
		derefatom   [4, 1, 1]
		isint          [4]
		jump           [L718, [0], [1, 2, 3, 4], []]
	--body:L718:
		spec           [5, 12]
		commit         ["elm_to_string3", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'intFunctor'_3]
		removeatom     [2, 0, 'elm_to_string'_2]
		dequeueatom    [4]
		removeatom     [4, 0]
		dequeueatom    [3]
		removeatom     [3, 0]
		copyatom    [5, 0, 4]
		copyatom    [6, 0, 3]
		newatom     [7, 0, 'str'.'from'_2]
		newatom     [8, 0, "_"_1]
		newatom     [9, 0, 'str'.'concat'_3]
		newatom    [10, 0, 'str'.'from'_2]
		newatom    [11, 0, 'str'.'concat'_3]
		newlink        [7, 0, 6, 0, 0]
		newlink        [7, 1, 9, 0, 0]
		newlink        [8, 0, 9, 1, 0]
		newlink        [9, 2, 11, 0, 0]
		newlink        [10, 0, 5, 0, 0]
		newlink        [10, 1, 11, 1, 0]
		relink         [11, 2, 2, 1, 0]
		enqueueatom    [11]
		enqueueatom    [10]
		enqueueatom    [9]
		enqueueatom    [7]
		loadmodule     [0, "str"]
		loadmodule     [0, "str"]
		loadmodule     [0, "str"]
		loadmodule     [0, "str"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [4]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 3]
		findatom    [1, 0, 'functor'_3]
		deref       [2, 1, 2, 0]
		func           [2, 'elm_to_string'_2]
		jump           [L766, [0], [1, 2], []]
	--guard:L766:
		spec           [3, 5]
		derefatom   [3, 1, 1]
		isint          [3]
		derefatom   [4, 1, 0]
		isunary        [4]
		jump           [L751, [0], [1, 2, 3, 4], []]
	--body:L751:
		spec           [5, 14]
		commit         ["elm_to_string4", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'functor'_3]
		removeatom     [2, 0, 'elm_to_string'_2]
		dequeueatom    [3]
		removeatom     [3, 0]
		dequeueatom    [4]
		removeatom     [4, 0]
		copyatom    [5, 0, 3]
		copyatom    [6, 0, 4]
		newatom     [7, 0, "'"_1]
		newatom     [8, 0, 'str'.'from'_2]
		newatom     [9, 0, 'str'.'concat'_3]
		newatom    [10, 0, "'_"_1]
		newatom    [11, 0, 'str'.'concat'_3]
		newatom    [12, 0, 'str'.'from'_2]
		newatom    [13, 0, 'str'.'concat'_3]
		newlink        [7, 0, 9, 0, 0]
		newlink        [8, 0, 6, 0, 0]
		newlink        [8, 1, 9, 1, 0]
		newlink        [9, 2, 11, 0, 0]
		newlink        [10, 0, 11, 1, 0]
		newlink        [11, 2, 13, 0, 0]
		newlink        [12, 0, 5, 0, 0]
		newlink        [12, 1, 13, 1, 0]
		relink         [13, 2, 2, 1, 0]
		enqueueatom    [13]
		enqueueatom    [12]
		enqueueatom    [11]
		enqueueatom    [9]
		enqueueatom    [8]
		loadmodule     [0, "str"]
		loadmodule     [0, "str"]
		loadmodule     [0, "str"]
		loadmodule     [0, "str"]
		loadmodule     [0, "str"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 4]
	--memmatch:
		spec           [1, 2]
		findatom    [1, 0, 'elm_to_string'_2]
		jump           [L795, [0], [1], []]
	--guard:L795:
		spec           [2, 3]
		derefatom   [2, 1, 0]
		isstring       [2]
		jump           [L784, [0], [1, 2], []]
	--body:L784:
		spec           [3, 8]
		commit         ["elm_to_string5", 0]
		dequeueatom    [1]
		removeatom     [1, 0, 'elm_to_string'_2]
		dequeueatom    [2]
		removeatom     [2, 0]
		copyatom    [3, 0, 2]
		newatom     [4, 0, "\""_1]
		newatom     [5, 0, 'str'.'concat'_3]
		newatom     [6, 0, "\""_1]
		newatom     [7, 0, 'str'.'concat'_3]
		newlink        [4, 0, 5, 0, 0]
		newlink        [5, 1, 3, 0, 0]
		newlink        [5, 2, 7, 0, 0]
		newlink        [6, 0, 7, 1, 0]
		relink         [7, 2, 1, 1, 0]
		enqueueatom    [7]
		enqueueatom    [5]
		loadmodule     [0, "str"]
		loadmodule     [0, "str"]
		freeatom       [1]
		freeatom       [2]
		proceed        []


Compiled Ruleset @605 
Compiled Rule 
	--atommatch:
		spec           [2, 4]
	--memmatch:
		spec           [1, 3]
		findatom    [1, 0, 'do'_0]
		findatom    [2, 0, 'outport'_1]
		jump           [L824, [0], [1, 2], []]
	--guard:L824:
		spec           [3, 3]
		jump           [L809, [0], [1, 2], []]
	--body:L809:
		spec           [3, 6]
		commit         ["printslash", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'do'_0]
		removeatom     [2, 0, 'outport'_1]
		newatom     [3, 0, 'outport'_1]
		newatom     [4, 0, "\nInline\n//"_1]
		newatom     [5, 0, 'io'.'print'_3]
		newlink        [3, 0, 5, 2, 0]
		newlink        [4, 0, 5, 1, 0]
		relink         [5, 0, 2, 0, 0]
		enqueueatom    [5]
		enqueueatom    [3]
		loadmodule     [0, "io"]
		freeatom       [1]
		freeatom       [2]
		proceed        []


Compiled Ruleset @606 
Compiled Rule 
	--atommatch:
		spec           [2, 3]
	--memmatch:
		spec           [1, 2]
		findatom    [1, 0, 'outport'_1]
		jump           [L853, [0], [1], []]
	--guard:L853:
		spec           [2, 2]
		jump           [L842, [0], [1], []]
	--body:L842:
		spec           [2, 4]
		commit         ["freeIO", 0]
		dequeueatom    [1]
		removeatom     [1, 0, 'outport'_1]
		newatom     [2, 0, 'io'.'close_port'_2]
		newatom     [3, 0, 'io'.'free_port'_1]
		relink         [2, 0, 1, 0, 0]
		newlink        [2, 1, 3, 0, 0]
		enqueueatom    [3]
		enqueueatom    [2]
		loadmodule     [0, "io"]
		loadmodule     [0, "io"]
		freeatom       [1]
		proceed        []


Inline

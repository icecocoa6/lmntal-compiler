 /*
 **
 Leader Election
 ノード数3つ
 
 　／２
  １　｜
 　＼３
 ** 
 */ 
 //パラメータ
 nbrs(1)={n(2),n(3)}, nbrs(2)={n(1),n(3)}, nbrs(3)={n(1),n(2)}.//隣のノード
 msgDelay=2.
 toDelay=1.//タイマーがタイムアウトしてからノードが起動するまでの遅延
 period=3.//メッセージを送信する周期
 now=0.//時刻
 maxTime=7.//Period+TODelay+Dist(n,Ldr(n))*MsgDelayの最大値+1
 
 //ldr(N) Nがリーダだと思っているノード
 ldr(1)=1,ldr(2)=2,ldr(3)=3.
 //dist(N) Nがldr(N)まであると思っている距離
 dist(1)=0, dist(2)=0, dist(3)=0.
 /*
 0>timer(N)>=-toDelayの間にアクションTimeoutが起こる
 */
 timer(1)=3,timer(2)=3,timer(3)=3.//初期値period
 
 /*
 ms:転送中のメッセージを表す
  メッセージのフィールド
   src...送信元
   dest...宛先ノード
   ldr...もとのメッセージのリーダー
   hops...転送回数
   rcvTimer...メッセージ送信時間の上限を表すカウントダウンタイマー
 */

 TimeOut@@
 timer(N1)=T1, ldr(N2)=L1, dist(N3)=D1, period(T2), nbrs(N4)={n(Nb1), n(Nb2)}, msgDelay(De):-
 N1=:=N2, N1=:=N3, N1=:=N4, T1<0, int(L1), int(D1), int(T2), int(Nb1), int(Nb2), int(De)|
 timer(N1)=T2, ldr(N2)=N1, dist(N3)=0, 
 ms(src(N1),dest(Nb1),ldr(N1),hops(0),rcvTimer(De)), ms(src(N1),dest(Nb2),ldr(N1),hops(0),rcvTimer(De)),
 period(T2), nbrs(N4)={n(Nb1), n(Nb2)}, msgDelay(De).
 
 RcvMsg_4@@
 ms(src(N1),dest(D),ldr(L),hops(H),rcvTimer(T)),ldr(N2)=L1 ,dist(N3)=L2:-
 D=:=N2, D=:=N3, L>=L1, H+1>L2, int(N1), int(T)|
 ldr(N2)=L1, dist(N3)=L2.

 RcvMsg_3@@
 ms(src(N1),dest(D),ldr(L),hops(H),rcvTimer(T)), ldr(N2)=L1:-
 D=:=N2, L>L1, int(N1), int(H), int(T)|
 ldr(N2)=L1.

 RcvMsg_1@@
 ms(src(N1),dest(D),ldr(L),hops(H),rcvTimer(T)),
 ldr(N2)=L1, dist(N3)=L2, timer(N4)=L3, 
 nbrs(N5)={n(Nb1),$p}, period(T1), toDelay(T2), msgDelay(T3):-
 D=:=N2, D=:=N3,D=:=N4, D=:=N5, L<L1, Nb1=\=N1, int(N1), int(T), int(L1), int(L2), int(L3),  H1=H+1 ,T4=T1+T2+H1*T3 |
 ms(src(D),dest(Nb1),ldr(L),hops(H1),rcvTimer(T3)),  
 ldr(N2)=L, dist(N3)=H1 ,timer(N4)=T4, 
 nbrs(N5)={n(Nb1),$p}, period(T1), toDelay(T2), msgDelay(T3).

 RcvMsg_2@@
 ms(src(N1),dest(D),ldr(L),hops(H),rcvTimer(T))
 ,ldr(N2)=L1 , dist(N3)=L2, timer(N4)=L3, 
 nbrs(N5)={n(Nb1),$p}, period(T1), toDelay(T2), msgDelay(T3):-
 D=:=N2,  D=:=N3, D=:=N4, D=:=N5, L=:=L1, N1=\=Nb1, int(T), int(L3), int(N1), H1=H+1, H1=<L2, T4=T1+T2+H1*T3 |
 ms(src(D),dest(Nb1),ldr(L),hops(H1),rcvTimer(T3)),
 ldr(N2)=L, dist(N3)=H1,  timer(N4)=T4, 
 nbrs(N5)={n(Nb1),$p}, period(T1), toDelay(T2), msgDelay(T3).

 
 Tick@@
 //タイムアウトしてからtoDelay秒はノードを起動させない
 timer(1)=T1,timer(2)=T2,timer(3)=T3, toDelay(D), now(N), maxTime(M):-
 T1+D>=1,T2+D>=1,T3+D>=1, N<M|
 timer(1)=T1, timer(2)=T2, timer(3)=T3, toDelay(D), now(N), maxTime(M).
 //branch[[
 //loop[[
 rcvTimer(T1,X):-
 T1>=1, ground(X)|
 check(rcvTimer(T1,X)).
 //]]
 //loop[[
 check(rcvTimer(T1,X)):-
 T2=T1-1, ground(X)|
 rcvTimer(T2,X).
 //]]
 timer(1)=T1, timer(2)=T2, timer(3)=T3, now(N):-
 T4=T1-1, T5=T2-1, T6=T3-1, N1=N+1|
 timer(1)=T4, timer(2)=T5, timer(3)=T6, now(N1).
 //]]
 //branch[[
 //loop[[
 check(rcvTimer(T1,X)):-
 int(T1), ground(X)|
 rcvTimer(T1,X).
 //]]
 //]]
 
 
/*
	リンク構造をたどっていく unify 
	
	QUERY_OUT─┬───┬(QUERY_IN)─○─
	         　｜      ｜            ｜
	           ｜unify ｜
	           ｜      ｜
	FACT_OUT ─┴─┬─┴(FACT_IN )─○─
	            BINDING              ｜
	        
	unify(QUERY_IN, FACT_IN, QUERY_OUT, FACT_OUT, BINDING)
	
	シンボルはシンボルテーブルに存在するものとする
	symbols = {
		{a, $p([X, Y])},
		...
	}
*/
/*
	unify([],[],_,_,_) :- yes
	両方とも [] リスト
	BINDING を [] で閉じる
*/
(
	unify([], [], QUERY_OUT, FACT_OUT, BINDING)
		:-
	QUERY_OUT=[], FACT_OUT=[], BINDING=[],
	yes % yesはほしい？
),
/*
	unify([A | Z],[B | Y],_,_,_) :- 
	Aの先のアトム名 = Bの先のアトム名 | yes, unify(Z, Y,_,_,_)
*/
(
	unify([A | Z], [B | Y], QUERY_OUT, FACT_OUT, BINDING),
	symbols ={
		{ p(A), p(B), $p1 }, $p2
	}
		:-
	QUERY_OUT=[A | QUERY_OUT_2], FACT_OUT=[B | FACT_OUT_2],
	unify(Z, Y, QUERY_OUT_2, FACT_OUT_2, BINDING),
	symbols ={
		{ p(A), p(B), $p1 }, $p2
	}
),
/*
	unify([A | Z],[B | Y],_,_,_) :- 
	Aの先が変数で束縛されていない && Bの先がシンボル | 
		unify(Z, Y,_,_,_), Aの先の変数をBのシンボルへ束縛させる
*/
(
	unify([A | Z], [B | Y], QUERY_OUT, FACT_OUT, BINDING),
	vars ={
		{ p(A), bind(null), $p1 }, $p2
	},
	symbols ={
		{ p(B), $p3 }, $p4
	}
		:-
	QUERY_OUT=[A | QUERY_OUT_2], FACT_OUT=[B | FACT_OUT_2], BINDING=[BIND | BINDING_2],
	unify(Z, Y, QUERY_OUT_2, FACT_OUT_2, BINDING_2),
	vars ={
		{ p(A), p(BIND), bind(VAR_BIND), $p1 }, $p2
	},
	symbols ={
		{ p(B), p(VAR_BIND), $p3 }, $p4
	}
),
/*
	unify([A | Z],[B | Y],_,_,_) :- 
	Bの先が変数で束縛されていない && Aの先がシンボル | 
		unify(Z, Y,_,_,_), Bの先の変数をAのシンボルへ束縛させる
*/
(
	unify([A | Z], [B | Y], QUERY_OUT, FACT_OUT, BINDING),
	vars ={
		{ p(B), bind(null), $p1 }, $p2
	},
	symbols ={
		{ p(A), $p3 }, $p4
	}
		:-
	QUERY_OUT=[A | QUERY_OUT_2], FACT_OUT=[B | FACT_OUT_2], BINDING=[BIND | BINDING_2],
	unify(Z, Y, QUERY_OUT_2, FACT_OUT_2, BINDING_2),
	vars ={
		{ p(B), p(BIND), bind(VAR_BIND), $p1 }, $p2
	},
	symbols ={
		{ p(A), p(VAR_BIND), $p3 }, $p4
	}
),
/*
	unify([],[A | Z],_,_,_) :- fail
	unify([A | Z],[],_,_,_) :- fail
	片方のみ [] リスト

(
	unify([A | Z], [], QUERY_OUT, FACT_OUT, BINDING)
		:-
	QUERY_OUT=[A | Z], FACT_OUT=[], BINDING=[],
	fail
),
(
	unify([], [A | Z], QUERY_OUT, FACT_OUT, BINDING)
		:-
	QUERY_OUT=[], FACT_OUT=[A | Z], BINDING=[],
	fail
),
*/
/*
	unify(_,_,_,_,_) :- fail
	このルールが最も優先度が低ければ、上のルールから外れたものは失敗
*/
(
	unify(A, B, QUERY_OUT, FACT_OUT, BINDING)
		:-
	QUERY_OUT=A, FACT_OUT=B, BINDING=[],
	fail
),
/*
	テストデータ
*/
% シンボルテーブル
symbols = {
	{ a, p(S1_1), p(S1_2) }
	{ b, p(S2_1), p(S2_2) }
%	{ c, p(S3_1), p(S3_2) }
},
% 変数テーブル
% bindのリンク先が束縛された値 null のときは束縛されていない
vars = {
	{ var_X, p(V1_1), bind(null) },
	{ var_Y, p(V2_1), bind(null) }
},
%unify([],[], QUERY, FACT, BINDING),
%unify([S1_1],[], QUERY, FACT, BINDING),
%unify([S1_1, S2_1],[S1_2, S2_2], QUERY, FACT, BINDING),
%unify([V1_1],[S1_1], QUERY, FACT, BINDING),
unify([V1_1, S2_1],[S1_1, V2_1], QUERY, FACT, BINDING),
query(QUERY), fact(FACT), binding(BINDING)
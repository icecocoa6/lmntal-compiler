/*
	リンク構造をたどっていく unify 
	
	QUERY_OUT─┬───┬(QUERY_IN)─○─
	         　｜      ｜            ｜
	           ｜unify ｜
	           ｜      ｜
	FACT_OUT ─┴─┬─┴(FACT_IN )─○─
	            BINDING              ｜
	        
	unify(QUERY_IN, FACT_IN, QUERY_OUT, FACT_OUT, BINDING)
	
	シンボルはシンボルテーブルに存在するものとする
	symbols = {
		{a, $p([X, Y])},
		...
	}
*/
/*
 TODO: connect
 
 重複の削除?
 束縛のコピー
*/
/*
	束縛のコピー
	connectの先が束縛されていたら束縛する
	
	unify([X, X], [Y, a])
*/
(
	unify(QUERY_IN, FACT_IN, QUERY_OUT, FACT_OUT, BINDING),
	vars ={
		{ bind(BIND_A), connect(CONN), $p1 },
		{ bind(null),   connect(CONN), $p2 },$p3
	},
	symbols ={
		{ p(BIND_A), $p4 }, $p5
	}
		:-
	BINDING=[BIND | BINDING_2],
	unify(QUERY_IN, FACT_IN, QUERY_OUT, FACT_OUT, BINDING_2),
	vars ={
		{ bind(BIND_A), $p1 },
		{ bind(BIND_B), p(BIND), $p2 },$p3
	},
	symbols ={
		{ p(BIND_A), p(BIND_B), $p4 }, $p5
	}
),
/*
	unify([],[],_,_,_) :- yes
	両方とも [] リスト
	BINDING を [] で閉じる
*/
(
	unify([], [], QUERY_OUT, FACT_OUT, BINDING)
		:-
	QUERY_OUT=[], FACT_OUT=[], BINDING=[],
	yes % yesはほしい？
),
/*
	unify([A | Z],[B | Y],_,_,_) :- 
	Aの先のアトム名 = Bの先のアトム名 | yes, unify(Z, Y,_,_,_)
*/
(
	unify([A | Z], [B | Y], QUERY_OUT, FACT_OUT, BINDING),
	symbols ={
		{ p(A), p(B), $p1 }, $p2
	}
		:-
	QUERY_OUT=[A | QUERY_OUT_2], FACT_OUT=[B | FACT_OUT_2],
	unify(Z, Y, QUERY_OUT_2, FACT_OUT_2, BINDING),
	symbols ={
		{ p(A), p(B), $p1 }, $p2
	}
),
/*
	unify([A | Z],[B | Y],_,_,_) :- 
	Aの先が変数で束縛されていない && Bの先がシンボル | 
		unify(Z, Y,_,_,_), Aの先の変数をBのシンボルへ束縛させる
*/
(
	unify([A | Z], [B | Y], QUERY_OUT, FACT_OUT, BINDING),
	vars ={
		{ p(A), bind(null), $p1 }, $p2
	},
	symbols ={
		{ p(B), $p3 }, $p4
	}
		:-
	QUERY_OUT=[A | QUERY_OUT_2], FACT_OUT=[B | FACT_OUT_2], BINDING=[BIND | BINDING_2],
	unify(Z, Y, QUERY_OUT_2, FACT_OUT_2, BINDING_2),
	vars ={
		{ p(A), p(BIND), bind(VAR_BIND), $p1 }, $p2
	},
	symbols ={
		{ p(B), p(VAR_BIND), $p3 }, $p4
	}
),
/*
	unify([A | Z],[B | Y],_,_,_) :- 
	Bの先が変数で束縛されていない && Aの先がシンボル | 
		unify(Z, Y,_,_,_), Bの先の変数をAのシンボルへ束縛させる
*/
(
	unify([A | Z], [B | Y], QUERY_OUT, FACT_OUT, BINDING),
	vars ={
		{ p(B), bind(null), $p1 }, $p2
	},
	symbols ={
		{ p(A), $p3 }, $p4
	}
		:-
	QUERY_OUT=[A | QUERY_OUT_2], FACT_OUT=[B | FACT_OUT_2], BINDING=[BIND | BINDING_2],
	unify(Z, Y, QUERY_OUT_2, FACT_OUT_2, BINDING_2),
	vars ={
		{ p(B), p(BIND), bind(VAR_BIND), $p1 }, $p2
	},
	symbols ={
		{ p(A), p(VAR_BIND), $p3 }, $p4
	}
),
/*
	unify([A | Z],[B | Y],_,_,_) :- 
	Aの先が変数で束縛されている && Bの先がシンボル && Aの束縛先がBと同じシンボル | 
		unify(Z, Y,_,_,_)
		
	unify([X, X], [a, a])
*/
(
	unify([A | Z], [B | Y], QUERY_OUT, FACT_OUT, BINDING),
	vars ={
		{ p(A), bind(BIND), $p1 }, $p2
	},
	symbols ={
		{ p(B), p(BIND), $p3 }, $p4
	}
		:-
	QUERY_OUT=[A | QUERY_OUT_2], FACT_OUT=[B | FACT_OUT_2],
	unify(Z, Y, QUERY_OUT_2, FACT_OUT_2, BINDING),
	vars ={
		{ p(A), bind(BIND), $p1 }, $p2
	},
	symbols ={
		{ p(B), p(BIND), $p3 }, $p4
	}
),
/*
	unify([A | Z],[B | Y],_,_,_) :- 
	Bの先が変数で束縛されている && Aの先がシンボル && Bの束縛先がAと同じシンボル | 
		unify(Z, Y,_,_,_)
*/
(
	unify([A | Z], [B | Y], QUERY_OUT, FACT_OUT, BINDING),
	vars ={
		{ p(B), bind(BIND), $p1 }, $p2
	},
	symbols ={
		{ p(A), p(BIND), $p3 }, $p4
	}
		:-
	QUERY_OUT=[A | QUERY_OUT_2], FACT_OUT=[B | FACT_OUT_2],
	unify(Z, Y, QUERY_OUT_2, FACT_OUT_2, BINDING),
	vars ={
		{ p(B), bind(BIND), $p1 }, $p2
	},
	symbols ={
		{ p(A), p(BIND), $p3 }, $p4
	}
),
/*
	変数同士の束縛
	X = X そのまま通過
	X = Y? 
*/
/*
	X = X そのまま通過
	unify([A | Z],[B | Y],_,_,_) :- 
	Aの先の変数 == Bの先の変数 |
		unify([Z],[Y],_,_,_) 
		
	unify([X], [X])
*/
(
	unify([A | Z], [B | Y], QUERY_OUT, FACT_OUT, BINDING),
	vars ={
		{ p(A), p(B), $p1 }, $p2
	}
		:-
	QUERY_OUT=[A | QUERY_OUT_2], FACT_OUT=[B | FACT_OUT_2],
	unify(Z, Y, QUERY_OUT_2, FACT_OUT_2, BINDING),
	vars ={
		{ p(A), p(B), $p1 }, $p2
	}
),
/*
	両方とも異なる変数
	- 両方とも束縛されていない
		connect を行う
	
	unify([X, Y], [Y, X])
*/
(
	unify([A | Z], [B | Y], QUERY_OUT, FACT_OUT, BINDING),
	vars ={
		{ p(A), bind(null), $p1 },
		{ p(B), bind(null), $p2 },$p3
	}
		:-
	QUERY_OUT=[A | QUERY_OUT_2], FACT_OUT=[B | FACT_OUT_2],
	unify(Z, Y, QUERY_OUT_2, FACT_OUT_2, BINDING),
	vars ={
		{ p(A), bind(null), connect(CONN), $p1 },
		{ p(B), bind(null), connect(CONN), $p2 },$p3
	}
),
/*
	両方とも異なる変数
	- 両方とも束縛されている
		束縛先のシンボルの比較
		
	unify([A | Z],[B | Y],_,_,_) :- 
	Aの束縛先シンボル == Bの束縛先シンボル |
		unify([Z],[Y],_,_,_) 

	unify([X, Y, Y], [a, a, X]) 
*/
(
	unify([A | Z], [B | Y], QUERY_OUT, FACT_OUT, BINDING),
	vars ={
		{ p(A), bind(BIND_A), $p1 },
		{ p(B), bind(BIND_B), $p2 },$p3
	},
	symbols ={
		{ p(BIND_A), p(BIND_B), $p4 }, $p5
	}
		:-
	QUERY_OUT=[A | QUERY_OUT_2], FACT_OUT=[B | FACT_OUT_2],
	unify(Z, Y, QUERY_OUT_2, FACT_OUT_2, BINDING),
	vars ={
		{ p(A), bind(BIND_A), $p1 },
		{ p(B), bind(BIND_B), $p2 },$p3
	},
	symbols ={
		{ p(BIND_A), p(BIND_B), $p4 }, $p5
	}
),
/*
	両方とも異なる変数
	- 片方のみ束縛されている
		束縛されている変数のシンボルと同じシンボルへ束縛を行う

	unify([A | Z],[B | Y],_,_,_) :- 
	Aは束縛されている && Bは束縛されていない |
		unify([Z],[Y],_,_,_), BをAの束縛されているシンボルへ束縛
		
	unify([X, X], [a, Y])
*/
(
	unify([A | Z], [B | Y], QUERY_OUT, FACT_OUT, BINDING),
	vars ={
		{ p(A), bind(BIND_A), $p1 },
		{ p(B), bind(null),   $p2 },$p3
	},
	symbols ={
		{ p(BIND_A), $p4 }, $p5
	}
		:-
	QUERY_OUT=[A | QUERY_OUT_2], FACT_OUT=[B | FACT_OUT_2], BINDING=[BIND | BINDING_2],
	unify(Z, Y, QUERY_OUT_2, FACT_OUT_2, BINDING_2),
	vars ={
		{ p(A), bind(BIND_A), $p1 },
		{ p(B), bind(BIND_B), p(BIND), $p2 },$p3
	},
	symbols ={
		{ p(BIND_A), p(BIND_B), $p4 }, $p5
	}
),
/*
	unify([A | Z],[B | Y],_,_,_) :- 
	Bは束縛されている && Aは束縛されていない |
		unify([Z],[Y],_,_,_), AをBの束縛されているシンボルへ束縛

	unify([X, Y], [a, X])
*/
(
	unify([A | Z], [B | Y], QUERY_OUT, FACT_OUT, BINDING),
	vars ={
		{ p(A), bind(null), $p1 },
		{ p(B), bind(BIND_B),   $p2 },$p3
	},
	symbols ={
		{ p(BIND_B), $p4 }, $p5
	}
		:-
	QUERY_OUT=[A | QUERY_OUT_2], FACT_OUT=[B | FACT_OUT_2], BINDING=[BIND | BINDING_2],
	unify(Z, Y, QUERY_OUT_2, FACT_OUT_2, BINDING_2),
	vars ={
		{ p(A), bind(BIND_A), p(BIND),$p1 },
		{ p(B), bind(BIND_B), $p2 },$p3
	},
	symbols ={
		{ p(BIND_A), p(BIND_B), $p4 }, $p5
	}
),
/*
	unify(_,_,_,_,_) :- fail
	このルールが最も優先度が低ければ、上のルールから外れたものは失敗
*/
(
	unify(A, B, QUERY_OUT, FACT_OUT, BINDING)
		:-
	QUERY_OUT=A, FACT_OUT=B, BINDING=[],
	fail
),
/*
	テストデータ
*/
% シンボルテーブル
symbols = {
	{ a, p(S1_1), p(S1_2) }
%	{ b, p(S2_1)/*, p(S2_2)*/ }
%	{ c, p(S3_1), p(S3_2) }
},
% 変数テーブル
% bindのリンク先が束縛された値 null のときは束縛されていない
vars = {
	{ var_X, p(V1_1), p(V1_2), bind(null) },
	{ var_Y, p(V2_1), p(V2_2), bind(null) }, 
	{ var_Z, p(V3_1), p(V3_2), bind(null) } 
},
%% [X, X], [a, a]
unify([V1_1, V1_2], [S1_1, S1_2], QUERY, FACT, BINDING),
%% [X], [X]
%unify([V1_1], [V1_2], QUERY, FACT, BINDING),
%% [X, Y, Z], [Y, Z, a]
%unify([V1_1, V2_1, V3_1], [V2_2, V3_2, S1_1], QUERY, FACT, BINDING),
%% [X, Y, Y], [a, a, X]
%unify([V1_1, V2_1, V2_2], [S1_1, S1_2, V1_2], QUERY, FACT, BINDING),
%% [X, X], [a, Y]
%unify([V1_1, V1_2], [S1_1, V2_1], QUERY, FACT, BINDING),
%% [X, Y], [a, X]
%unify([V1_1, V2_1], [S1_1, V1_2], QUERY, FACT, BINDING),
%% [X, X] [Y, a]
%unify([V1_1, V1_2], [V2_1, S1_1], QUERY, FACT, BINDING),
query(QUERY), fact(FACT), binding(BINDING)
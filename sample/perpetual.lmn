({end,$p,@p} :- {o,$p}). % 注意: @pを継承しないので、膜を再利用する場合は永続フラグの再設定が必要
[[/*inline_define*/
	class ThreadTest implements Runnable {
		AbstractMembrane mem;
		public ThreadTest(AbstractMembrane mem) {
			this.mem = mem;
		}
		public void run() {
			for (int i = 5; i >= 0; i--) {
				try {
					Thread.sleep(1000);
				}
				catch (InterruptedException e) {}
				mem.blockingLock();
				Atom p = mem.newAtom(new Functor("p",1));
				Atom k = mem.newAtom(new IntegerFunctor(i));
				mem.newLink(p,0,k,0);
				mem.activate();
				mem.blockingUnlock();
			}
			mem.blockingLock();
			mem.newAtom(new Functor("end",0));
			mem.activate();
			mem.blockingUnlock();
		}
	}
]].
{
	go :- [[/*inline*/
		AbstractMembrane mem = me.getMem();
		new Thread(new ThreadTest(mem)).start();
		mem.makePerpetual();
		]].
	p(X) :- q(X).
	go.
}	
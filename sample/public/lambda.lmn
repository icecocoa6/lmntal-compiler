// ラムダ計算のサンプル hara

{ lambda.use.
	// (lambda y . y y) x => x x
//	r=apply(lambda(cp(X0, X1), apply(X0, X1)), x).
}

{ lambda.use.
	// (lambda x . x x) (lambda x . x x) => self => self ...
	// とまらないので注意 
//	r=apply(lambda(cp(X0, X1), apply(X0, X1)), lambda(cp(Y0, Y1), apply(Y0, Y1))).
}

{ lambda.use.
	// (lambda f . (lambda x . f (f x) ) ) succ 0 => succ (succ 0)
//	r=apply(apply(lambda(cp(F0, F1), lambda(X, apply(F0, apply(F1, X)))), succ), 0).
}

/**
 * let square = fun x -> mult x x in
 *     let mult = fun x -> fun y -> * x y in
 *         square 5
 * 
 * (lambda mult . (lambda square . square 5) (lambda x . mult x x) ) (lambda x . (lambda y . * x y) ) 
 */
//{
//	integer.use. lambda.use.
//	
//	r=apply(lambda(Mult,
//		apply(lambda(Square, apply(Square, 5)), lambda(cp(X0, X1), apply(apply(Mult, X0), X1)))), 
//		lambda(A, lambda(B, '*'(A, B)))).
//}


{
	lambda.use.
	
	// Church Encodings のべき乗
	// (lambda f . (lambda x . f (f x) ) ) (lambda f . (lambda x . f (f x) ) ) s 0
	// 
	Num0=lambda(cp(F00, F01), lambda(X0, apply(F00, apply(F01, X0)))).
	Num1=lambda(cp(F10, F11), lambda(X1, apply(F10, apply(F11, X1)))).
	
	//Num0=lambda(cp(F00, cp(F01, F02)), lambda(X0, apply(F00, apply(F01, apply(F02, X0))))).
	//Num1=lambda(cp(F10, F11), lambda(X1, apply(F10, apply(F11, X1)))).
	
	//r=apply(apply(apply(Num0, Num1), s), 0).
	r=apply(apply(apply(Num0, Num1), s), 0).
	
	//Num0=lambda(F0, lambda(X0, apply(F0, X0))).
	//Num1=lambda(F1, lambda(X1, apply(F1, X1))).
	H=apply(s, I) :- int(I) | H=I+1.
}


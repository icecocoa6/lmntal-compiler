//  Coyright(C) 2006 Ueda Laboratory LMNtal Group, All rights reserved.
//  Author: mizuno

ret=sort(gen(100)).

/**
 * R=sort(L)
 * リストをマージソートする。
 * @param L ソートするリスト
 * @param R 結果の出力先
 */
R=sort(L) :- R=f(sort2(gen_lists(L))).

/**
 * R=sort2(L)
 * ソート済みリストのリストを受け取り、マージする。
 * @param L ソート済みリストのリスト
 * @param R 結果の出力先
 */
R=sort2([L1,L2|Rest]) :- R=sort2([merge(L1,L2)|sort2(Rest)]).
R=sort2([L]) :- R=[L].
R=sort2([])  :- R=[].

/**
 * R=merge(L1,L2)
 * 2 つのソート済みリストをマージする。
 * @param L1,L2 ソート済みリスト
 * @param R 結果の出力先
 */
R=merge([D1|L1],[D2|L2]) :- D1 <  D2 | R=[D1|merge(L1,[D2|L2])].
R=merge([D1|L1],[D2|L2]) :- D1 >= D2 | R=[D2|merge([D1|L1],L2)].
R=merge(L,[]) :- R=L.
R=merge([],L) :- R=L.

R=f([D]) :- R=D.

/**
 * R=gen_lists(L)
 * 受け取ったリストの各要素からなる長さ 1 のリストを生成し、それを要素とするリストを返す。
 * @param L 入力リスト
 * @param R 結果の出力先
 */
R=gen_lists([D|L]) :- int(D) | R=[ [D]|gen_lists(L)].
R=gen_lists([]) :- R=[].


/**
 * R=gen(N)
 * 乱数リスト生成。integerモジュールを利用しています。
 * @param N 生成するリストの長さを表す整数アトム
 * @param R 生成したリストの出力先
 */
R=gen(N) :- N > 0 | R=[integer.rnd(100)|gen(N-1)].
R=gen(N) :- N = 0 | R=[].

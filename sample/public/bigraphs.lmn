/* encoding of bigraphs -- example taken from 
   Robin Milner, Pervasive process calculus, Proc. PA'05,
   BRICS Notes Series NS-05-3, 2005
   Kazunori Ueda, 2005-08-05, 2005-11-06

   map: mapping from bigraph (1st arg) to bigraph (2nd arg)
   g: bigraph
      1st arg: list of graph parts
      2nd arg: list of names, which each name is a multiset of
               name occurrences
*/

G = graphG :-
  G = map(g([],[]),
    g([{
          {b,
             {outlet,-Z1,-Z2},
             {r,c(Z1,X1),a(X1,Y1)},
             a(n,Y2),
             {r,c(Z2,X2),a(X2,Y3)}
          }
       },
       {
          {r,c(Z,X),a(X,Y4)}
       }],
      [{-Y1,-Y2,-Y3,-Y4},{-Z}])
   ).

G = graphH :- 
  G = map(g([P1,P2],[Y,Z]),
    g([{
          {{b,
             {outlet,-Z1}+Z,
             a(n,X1),
             {r,c(Z1,n)}
           }+P2
          } +P1
       }],
      [{-X1}+Y])
   ).

compose@@
Map = compose(map(g(Ps0,Ns0),g(Ps1,Ns1)),
              map(g(Ps2,Ns2),g(Ps3,Ns3))) :-
   Map = map(g(Ps0,Ns0),g(Ps3,Ns3)),
   connect(Ps1,Ps2), connect(Ns1,Ns2).

connect1@@ connect([], []) :-.
connect2@@ connect([X|Xs], [Y|Ys]) :-
             cn(X,Y), connect(Xs,Ys).

{ system_ruleset.
  union@@   {$p} + cn({$q}) :- {$p,$q}.
  import@@  {$p,+X}, cn(X,Y), {$q[Y|*Z]} :-
              {{$p,+X}, cn(X,Y), $q[Y|*Z]}.
              
  enter@@   a(n,X), {r,$rr} :- {r, a(n,X), $rr}.
  connect@@ a(n,X), c(Z,n) :- a(U,X), c(Z,U).
}.

graphGH = compose(graphG,graphH).

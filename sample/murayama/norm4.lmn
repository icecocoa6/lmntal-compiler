
timer:benchmark(X,"Elapsed Time")
{
	+(X).
	go :- cthread0,cthread1,cthread2,cthread3.
	cthread0:-
		thread(0,{
			norm(0).
			norm(Y), n(X) :- int(X),Z=X*X+Y | norm(Z).
			norm(N0), norm(N1), norm(N2), norm(N3) :- norm(N0+N1+N2+N3).
		}@"localhost").
	cthread1:-
		thread(1,{
			norm(0).
			norm(Y), n(X) :- int(X),Z=X*X+Y | norm(Z).
			norm(N0), norm(N1), norm(N2), norm(N3) :- norm(N0+N1+N2+N3).
		}@"localhost").
	cthread2:-
		thread(2,{
			norm(0).
		  	norm(Y), n(X) :- int(X),Z=X*X+Y | norm(Z).
		 	norm(N0), norm(N1), norm(N2), norm(N3) :- norm(N0+N1+N2+N3).
		}@"localhost").
	cthread3:-
		thread(3,{
			norm(0).
			norm(Y), n(X) :- int(X),Z=X*X+Y | norm(Z).
			norm(N0), norm(N1), norm(N2), norm(N3) :- norm(N0+N1+N2+N3).
		}@"localhost").
	generate(10000).
	generate(X),thread(N, {$p,@p}@T) :- X>0, N==(X mod 4) |
		 thread(N, {n(integer.rnd(100)),$p,@p}@T), generate(X-1).
	norm(N0), norm(N1), norm(N2), norm(N3) :- norm(N0+N1+N2+N3).
}.

{
	system_ruleset.
	{thread(N,{$p,@p}), $q,@q}/ :- int(N) | {$p,$q,@q}.
}

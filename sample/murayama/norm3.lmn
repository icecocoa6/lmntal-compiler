% スレッドを複数たててノルムの計算をする

threadnum(4).
{
		generate(300).
        generate(X) :- X>0 | n(integer.rnd(100)), generate(X-1).
        generate(0) :- generated.
}.

{generated,$p,@p}, threadnum(T) :- int(T) |
        timer:benchmark(X,"Elapsed Time")
        {
                +(X).
                threadnum(T).
		        createthread(T).
				go, createthread(Num) :- Num>0 |
					go,
			        createthread(Num-1),
	                thread({
    	                    start :- started,norm(0).
        	                norm(Y),n(X) :- int(X),Z=X*X+Y | norm(Z).
            	    }@"localhost", Num-1).
        	    createthread(0) :-.

                thread({$r,@r}@T, N) :- \+($r=(started,$q)),\+($r=(start,$q)) | thread({start,$r,@r}@T, N).
                return(0).
                n(A), thread({$r, @r}@T, N), threadnum(M) :- int(A),int(N), N==(A mod M) |
                	threadnum(M),
                	thread({n(A), $r, @r}@T, N). 
                thread({norm(X),started,@r}/, N),return(Y) :- int(X),int(Y),int(N) | return(X+Y).
                $p.
        }.

%{return(X),go,@p}/ :- int(X) | return(X).
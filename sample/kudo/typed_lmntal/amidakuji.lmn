/** Typed Amidakuji */
/** 2007/02/01 kudo */
typedef{
   flow = datatype( s1('-'), s2('-'), s3('-'), s4('-') ).
}.

// s1 s2 s3 s4
// |  |  |  |
// |--|  |--|
// |  |--|  |
// |  |  |--|
// |--|  |--|
// |  |--|  |
// g1 g2 g3 g4

// j  = junction
// h  = horizontal bar ( Why is this ? : LINK is undirected. )
// s* = start
// g* = goal
// p  = player

j( s1, V1, L1), h(L1, R1), j( s2, V2, R1).
j( s3, V3, L2), h(L2, R2), j( s4, V4, R2).
j( V2, V5, L3), h(L3, R3), j( V3, V6, R3).
j( V6, V7, L4), h(L4, R4), j( V4, V8, R4).
j( V1, g1, L5), h(L5, R5), j( V5, V9, R5).
j( V7,V10, L6), h(L6, R6), j( V8, g4, R6).
j( V9, g2, L7), h(L7, R7), j(V10, g3, R7).

// |         |           |           |
// p         |           p           |
// |--  ==>  |p-  and  --|   ==>   -p|
// |         |           |           |
p(Up,P), j(P,Down,Side) :- j(Up,Down,P), p(P,Side).

//   |        |
// p-| ==>  --|
//   |        p
//   |        |
p(Side,H), h(H, P), j(Up,Down,P) :- h(Side, H), j(Up,P,H), p(P,Down).

// |        |
// |-p ==>  |--
// |        p
// |        |
p(Side,H), h(P, H), j(Up,Down,P) :- h(H, Side), j(Up,P,H), p(P,Down).

Start@@
start($sp), j($ss, Down, Side) :- $sp==$ss | p($sp, P), j(P, Down, Side).
Goal@@
p(Up, $g) :- unary($g) | Up=$g, got($g).

// example
start(s1).

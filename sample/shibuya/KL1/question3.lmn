/*

qestion3.lmn: quick sort by lifo

original:
  sort(I, O) :- true | sort(I, O, []).

  sort([], C0, C) :- true | C0 = C.
  sort([H|T], C0, C) :- true | compare(T, H, [], [], L, R),
    sort(L, C0, C1), C1 = [H|C2], sort(R, C2, C).

  compare([], V, L, R, OL, OR) :- true | OL = L, OR = R.
  compare([H|T], V, L, R, OL, OR) :- H > V | NL = [H|L], node(T, V, NL, R, OL, OR).
  compare([H|T], V, L, R, OL, OR) :- H =< V | NR = [H|L], node(T, V, N, NR, OL, OR).

*/

Out = sort(In) :- Out = sort(In, []).

C0 = sort([], C) :- C0 = C.
C0 = sort([H|T], C) :- int(H) | 
  compare(T, H, [], [], L, R), C0 = sort(L, [H|sort(R, C)]).

compare([], V, L, R, OL, OR) :- unary(V) | OL = L, OR = R.
compare([H|T], V, L, R, OL, OR) :- H < V | compare(T, V, [H|L], R, OL, OR).
compare([H|T], V, L, R, OL, OR) :- H >= V | compare(T, V, L, [H|R], OL, OR).

r = sort([3, 8, 0, 4, 2, 1, 6, 5, 7, 9, 0, 3]).

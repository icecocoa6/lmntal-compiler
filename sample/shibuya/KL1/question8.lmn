/*

question8.lmn: remove same elements from the list

original:
  main :- true | data(List), compact(List, Out), io:outstream([print(Out), nl]).

  compact([X|List], Out) :- true | 
    Out = [X|OutN], remove(X, List, ListN), compact(ListN, OutN).
  compact([], Out) :- true | Out = [].

  remove(_, [], Out) :- true | Out = [].
  remove(X, [X|List], Out) : true | remove(X, List, Out).
  remove(X, [Y|List], Out) :- X \= Y | Out = [Y|OutN], remove(X, List, OutN).

*/

Out = compact([]) :- Out= [].
Out = compact([X|List]) :- unary(X) | Out = [X|compact(remove(X, List))].

Out = remove(X, []) :- unary(X) | Out = [].
Out = remove(X, [Y|List]) :- X = Y | Out = remove(X, List).
Out = remove(X, [Y|List]) :- X \= Y | Out = [Y|remove(X, List)].

r = compact([1, 2, 1, 3, 1, 4, 5, 3, 2, 0]). 
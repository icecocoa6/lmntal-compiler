/*

----------------------------------------------------------------------
Simple Scheduling [0]
                                              Koji Hara
                                              2006/01/04(水) 22:39:36

leq(X+N,Y) means: task X starts at least N time units before task Y

元ネタ：
 WebCHR
 http://bach.informatik.uni-ulm.de/~webchr/
----------------------------------------------------------------------
*/

// 最も早く終わらせたときの時間を決めて変数に束縛する
Optimize @@
{leq(_IN, var(_UV0)), dependCheck(_UV1, _IX), $e, @e}/ :- _UV0=_UV1 | {var.bind(_UV0, _IN), $e, @e}.


{
	Redundant @@
	leq(N,var(Y0)), leq(M,var(Y1)) :- M=<N, Y0=Y1 | leq(N,var(Y0)).
	
	// 変数の依存関係を調べる
	PRE_1 @@ H=var_(_UV) :- uniq(_UV) | H=var_(_UV), dependCheck(_UV, 0).
	PRE_2 @@ leq_(var_(_US)+_IX, var_(_UD0)), dependCheck(_UD1, N) :- _UD0=_UD1 | 
	         leq (var (_US)+_IX, var (_UD0)), dependCheck(_UD1, N+var(_US)).
	
	Problem_Generation @@
	build_house :-
		var.use,
		leq_(var_(start)+0,var_(a)),
		leq_(var_(a)+7,var_(b)),
		leq_(var_(a)+7,var_(d)),
		leq_(var_(b)+3,var_(c)),
		leq_(var_(c)+1,var_(e)),
		leq_(var_(d)+8,var_(e)),
		leq_(var_(c)+1,var_(g)),
		leq_(var_(d)+8,var_(g)),
		leq_(var_(d)+8,var_(f)),
		leq_(var_(c)+1,var_(f)),
		leq_(var_(f)+1,var_(h)),
		leq_(var_(h)+3,var_(i)),
		leq_(var_(g)+1,var_(j)),
		leq_(var_(e)+2,var_(j)),
		leq_(var_(i)+2,var_(j)),
		leq_(var_(j)+1,var_(end)),
		var.bind(start, 0).
	
	build_house.
}

/*
メモ

var(g) を決めるには、leq(非int, var(g)) がない事を確認してからでないといけない。
WebCHR の例ではガードでそれをやっている。
	optimize @  optimize#Id \ leq(X,Y) <=> 
	ground(X),var(Y),findall_constraints(Y,leq(_,Y),L),L=[]   // 「Y が決まってないために中断している制約がない(?)」
	| 
	Y is X 
現在の LMNtal 処理系には findall_constraints と同等のガード制約がないので、別の手法を使う必要がある。

依存関係の制御方法（ややトリッキー）：
どの変数がいくつの変数に依存しているかを調べておく。
ある変数（甲）が依存するすべての変数が int に束縛されると、
足し算ルールが反応して dependCheck の第２引数が ground から int に変わる。

     dependCheck(j, 0+var(g)+var(e)+var(i))     // g, e, i が未束縛
 ==> dependCheck(j, 49)                         // g, e, i が束縛済み

そしたら甲の値を決めるルールが走り出す。


実行結果の例：

{var_mem(_1160),
 dependCheck(start,0),
 {'+'(_1160),
  bind(start,0),
  bind(a,0),
  bind(b,7),
  bind(d,7),
  bind(c,10),
  bind(e,15),
  bind(g,15),
  bind(f,15),
  bind(h,16),
  bind(i,19),
  bind(j,21),
  bind(end,22),
  @604, @Unify_Pre1@, @Unify_Pre2@, @Unify_Bind@
}, 
@601, @605, @Redundant@, @PRE@, @Problem_Generation@, @Module_Constructor_Var@, @Unify_Pre_OK@, @Var_New_Bind@, @Var_New_Unify@, @Var_Unify@, @Var_Bind@}, @602, @Optimize@
 
WebCHR の例と一致した。

| ?- build_house([Start,A,B,C,D,E,F,G,H,I,J,End]).

A = 0,
B = 7,
C = 10,
D = 7,
E = 15,
F = 15,
G = 15,
H = 16,
I = 19,
J = 21,
End = 22,
Start = 0,
optimize ? 

*/

%% 991202 Slim Abdennadher, LMU

:- use_module(library(chr)).

handler modelgenerator.

constraints enrolled/3, prereq/2, less/2, leq/2.

operator(700,xfx,less).
operator(700,xfx,leq).



/*******************************************************************
 Consider the following informations that we have about a university
 and a student: If a student S is enrolled in a course Y
 at some time TY and Y has another course X as a
 prerequisite, then S must also be enrolled in X at some
 time TX before TY.  john has only taken courses
 before 1994 and from 1996 onward.  These informations
 can be formalized by the following propagation rules:
 *******************************************************************/

enrolled(S, Y, TY), prereq(Y, X) ==> enrolled(S, X, TX), TX less TY.

enrolled(john,C,T)  ==> true | (T leq 1996 ; T less 1994).


/****************************************************************************
 The following rules define a part of the constraint solver for less and leq.
 ****************************************************************************/

X less Y <=> nonvar(X), nonvar(Y) | X < Y.

X less Y \  X less Z <=>  Y =< Z | true.

X less Y, X leq Y <=>  false.

X leq X <=> true.

/* Sample queries

Facts are brought into the computation by a goal: john has taken
course cs100 in 1996 and cs100 has prerequisite cs50.

?- enrolled(john,cs100,1996), prereq(cs100,cs50).

enrolled(john,cs50,_A)
enrolled(john,cs100,1996)
prereq(cs100,cs50)
_A less 1994

Meaning of the answer: john must have taken cs50 some time before 1994.

*/

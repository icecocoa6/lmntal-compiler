//ゲーム、とりあえず１問動く版に、微妙な色がついた。
//３を指定してENTERでグラフィックモード起動。

graphic.use.
go:-{
	window.              // 窓生成
	size(450,600).       // 窓のサイズ
	name("Who am I ??"). // 窓のタイトル
	bgcolor(240,255,240).//背景色
	
	killer.              // ×で終了処理
	clickListener.       // マウスクリック見張る
	
	sys.perpetual(on).   // 処理がなくても終わらない
	
	{ // 問題文描画
		draw. name("question_c"). getpic("fillrect").
		color(255,255,255). position(40,5). size(350,45).
		{
			draw. name("question_s"). getpic(string("Q : ( 2 + ? ) * 5 = 25", 30)).
			position(30,35).
		}.
	}.

	{ // 絵が描いてある
		{ // 25つくる
			draw. name("25_c"). getpic("fillcircle").
			color(206,222,230). position(150,60). size(50,50).
			{
				draw. name("25_s"). getpic(string("25", 25)).
				position(10,35).
			}.
		}.
		
		{ // 25と＊つなぐ
			draw. name("a1"). getpic("line"). position(175,110,175,140).
		}.
		
		{ // ＊つくる
			draw. name("mul_c"). getpic("fillcircle").
			color(254,238,174). position(150,140). size(50,50).
			{
				draw. name("mul_s"). getpic(string("*", 25)).
				position(20,37).
			}.
		}.

		{ // ５と＊つなぐ
			draw. name("a2"). getpic("line"). position(156,181,126,210).
		}.

		{ // ５つくる
			draw. name("5_c"). getpic("fillcircle").
			color(254,230,214). position(80,200). size(50,50).
			{
				draw. name("5_s"). getpic(string("5", 25)).
				position(17,35).
			}.
		}.

		{ // ＊と＋つなぐ
			draw. name("a3"). getpic("line"). position(194,181,230,205).
		}.

		{ // ＋つくる
			draw. name("pul_c"). getpic("fillcircle").
			color(254,238,174). position(220,200). size(50,50).
			{
				draw. name("pul_s"). getpic(string("+", 25)).
				position(17,35).
			}.
		}.

		{ // ＋と２つなぐ
			draw. name("a4"). getpic("line"). position(260,205,296,181).
		}.

		{ // ２つくる
			draw. name("2_c"). getpic("fillcircle").
			color(254,230,214). position(290,140). size(50,50).
			{
				draw. name("2_s"). getpic(string("2", 25)).
				position(17,35).
			}.
		}.

		{ // ＋と？つなぐ
			draw. name("a5"). getpic("line"). position(245,250,245,280).
		}.

		{ // ？つくる
			draw. name("q_c"). getpic("fillcircle").
			color(180,240,180). position(220,280). size(50,50).
			{
				draw. name("q_s"). getpic(string("?", 25)).
				position(17,35).
			}.
		}.

	}.

	{ // ツールボックス
		draw. name("box"). getpic("fillrect").
		color(255,255,255). position(20,345). size(400,210).

		{ // １つくる
			draw. name("int1_c"). getpic("fillcircle").
			color(180,240,180). position(30,25). size(50,50).
			{
				val.
				draw. name("int1_s"). getpic(string("1", 25)).
				position(18,35).
			}
		}.
		{ // ２つくる
			draw. name("int2_c"). getpic("fillcircle").
			color(180,240,180). position(100,25). size(50,50).
			{
				val.
				draw. name("int2_s"). getpic(string("2", 25)).
				position(18,35).
			}.
		}.
		{ // ３つくる
			draw. name("int3_c"). getpic("fillcircle").
			color(180,240,180). position(170,25). size(50,50).
			{
				val.
				draw. name("int3_s"). getpic(string("3", 25)).
				position(18,35).
			}.
		}.
		{ // ４つくる
			draw. name("int4_c"). getpic("fillcircle").
			color(180,240,180). position(240,25). size(50,50).
			{
				val.
				draw. name("int4_s"). getpic(string("4", 25)).
				position(18,35).
			}.
		}.
		{ // ５つくる
			draw. name("int5_c"). getpic("fillcircle").
			color(180,240,180). position(310,25). size(50,50).
			{
				val.
				draw. name("int5_s"). getpic(string("5", 25)).
				position(18,35).
			}.
		}.
		{ // ６つくる
			draw. name("int6_c"). getpic("fillcircle").
			color(180,240,180). position(30,90). size(50,50).
			{
				val.
				draw. name("int6_s"). getpic(string("6", 25)).
				position(18,35).
			}
		}.
		{ // ７つくる
			draw. name("int7_c"). getpic("fillcircle").
			color(180,240,180). position(100,90). size(50,50).
			{
				val.
				draw. name("int7_s"). getpic(string("7", 25)).
				position(18,35).
			}.
		}.
		{ // ８つくる
			draw. name("int8_c"). getpic("fillcircle").
			color(180,240,180). position(170,90). size(50,50).
			{
				val.
				draw. name("int8_s"). getpic(string("8", 25)).
				position(18,35).
			}.
		}.
		{ // ９つくる
			draw. name("int9_c"). getpic("fillcircle").
			color(180,240,180). position(240,90). size(50,50).
			{
				val.
				draw. name("int9_s"). getpic(string("9", 25)).
				position(18,35).
			}.
		}.
		{ // ０つくる
			draw. name("int0_c"). getpic("fillcircle").
			color(180,240,180). position(310,90). size(50,50).
			{
				val.
				draw. name("int0_s"). getpic(string("0", 25)).
				position(18,35).
			}.
		}.
		{ // 実行つくる
			draw. name("enter_c"). getpic("fillrect").
			color(220,140,140). position(145,155). size(100,40).
			{
				draw. name("enter_s"). getpic(string("ENTER", 25)).
				color(0,0,0). position(8,30).
			}.
		}.
	}.

//	clicked(_IX, _IY),{{{{getpic(string("?", 25)),$p},$q},$r},$s} :- 
//	{{{{getpic(string("3", 25)),$p},$q},$r},$s}.
// 　…の変数でまとめちゃった版↓


	clicked(_IX, _IY), // ツールの数字群を押したとき
	{
		{position(_IPX, _IPY), {val, getpic(string(_SVAL, 25)),$p1},$q1},
	$r1},
	{
		{{name("q_s"), getpic(string(_SANS, 25)),$p2},$q2},
	$r2}
	:- //↑のとき
	_IX > _IPX + 20 , _IY > _IPY + 345, _IX < _IPX + 70 ,
	_IY < _IPY + 395 // ポジション＋固定値(50,50)で判別
	| //↑ならば↓(今のやつ(_SANS)と違うの(_SVAL)押したら同じにする)
	{
		{position(_IPX, _IPY), {val, getpic(string(_SVAL, 25)),$p1},$q1},
	$r1},
	{
		{{name("q_s"), getpic(string(_SVAL, 25)),$p2},$q2},
	$r2}.


	clicked(_IX, _IY), // ENTERを押したとき(正解ver.)
	{{{name("q_s"), getpic(string("3", 25)),$p3},$q3},$r3}
	:-
	_IX > 164, _IY > 500, _IX < 264, _IY < 540
	|
	{{{name("q_s"), getpic(string("3", 25)),$p3},$q3},$r3},
	a=sys.exec("cmd.exe /k lmntal -e \" (3+2)*5=25. \" -g").
	

	clicked(_IX, _IY), // ENTERを押したとき(不正解ver.)
	{{{name("q_s"), getpic(string(_SANS, 25)),$p3},$q3},$r3}
	:-
	_IX > 164, _IY > 500, _IX < 264, _IY < 540, _SANS \= "3"
	|
	{{{name("q_s"), getpic(string(_SANS, 25)),$p3},$q3},$r3}.

/* memo

たとえば円をかいたときに、線と中の色と別々に指定したい。。

*/

}.
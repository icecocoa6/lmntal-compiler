% R=next(eratosthenes(),E). でRに次の素数が返るように Eは使用後のeratosthenes
% eraに必要なのは どこまで調べたか、と素数の篩
% candidate()が流れていって 素数なら篩に追加 + 素数を返す
% 非素数なら 失敗を返す

R=next(eratosthenes(N,P),E) :- R=searching_prime(notfound,N,P,E).

R=searching_prime(notfound,$n,P,E) :- int($n) | R=searching_prime(X,$n+1,candidate($n,P,X),E).
R=searching_prime($x,N,P,E) :- int($x) | R=$x, E=eratosthenes(N,P).

R=candidate($x,[],P) :- int($x) | R=[$x], P=$x.
R=candidate($x,[$y|T],P) :- ($x mod $y)=:=0 | R=[$y|T], P=notfound.
R=candidate($x,[$y|T],P) :- ($x mod $y)=\=0 | R=[$y|S], S=candidate($x,T,P).

R='+'(A,B) :- C=A+B | R=C.


E0 = eratosthenes(2,[]).
r = [next(E0,E1),next(E1,E2),next(E2,E3),next(E3,E4),next(E4,E5)].
done = E5.

// 宣教師と人食いの川渡り問題
// s(ボートがどちら側にあるか,こちら側にいる宣教師の数,こちら側にいる人食いの数)

// 全状態を作る
s(integer.set(0,1),integer.set(0,3),integer.set(0,3)).

// 駄目な状態を消す,ありうる状態を膜に入れる
s(B,X,Y) :- int(B),int(X),int(Y), X=\=0,X<Y | .
s(B,X,Y) :- int(B),int(X),int(Y), X=\=3,X>Y | .
s(B,X,Y) :- int(B),int(X),int(Y), X=0 | {s(B,X,Y)}.
s(B,X,Y) :- int(B),int(X),int(Y), X=3 | {s(B,X,Y)}.
s(B,X,Y) :- int(B),int(X),int(Y), X=Y | {s(B,X,Y)}.

// unyo用の目印 (ruleが上から実行されることに依存)
{s(0,3,3)} :- start({s(0,3,3)}).
{s(1,0,0)} :- goal({s(1,0,0)}).

// 一度の移動で遷移できる状態をつなぐ
{s(0,A,B),$p},{s(1,X,Y),$q} :-
	int(A),int(B),int(X),int(Y),
	\+($p=('+'(M),$pp),$q=('+'(M),$qq)),
	(A+B)>(X+Y),
	(A+B)-(X+Y)=<2
    | {s(0,A,B),$p,'+'(M)},{s(1,X,Y),$q,'+'(M)}.

{s(1,A,B),$p},{s(0,X,Y),$q} :-
	int(A),int(B),int(X),int(Y),
	\+($p=('+'(M),$pp),$q=('+'(M),$qq)),
	(A+B)<(X+Y),
	(A+B)-(X+Y)>=-2
    | {s(1,A,B),$p,'+'(M)},{s(0,X,Y),$q,'+'(M)}.

// 後は人間が見て確認する

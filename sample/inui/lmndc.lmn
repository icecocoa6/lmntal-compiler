/*
 * LMNtal bc by inui
 * 
 * ÅÅÂî
 * 
 * History
 *
 * 2006.07.06
 */
lexer.use.

stack=[], val=lexer.next().

//¿ôÃÍ
val(Val), stack(Stack) :- int(Val) | stack=[Val|Stack], val=lexer.next().

//±é»»»Ò
val('+'), stack=[A,B|Stack] :- C=A+B | stack=[C|Stack], val=lexer.next().
val('-'), stack=[A,B|Stack] :- C=A-B | stack=[C|Stack], val=lexer.next().
val('*'), stack=[A,B|Stack] :- C=A*B | stack=[C|Stack], val=lexer.next().
val('/'), stack=[A,B|Stack] :- C=A/B | stack=[C|Stack], val=lexer.next().

//ÆþÎÏ½ªÎ»
val(eof), stack=[A|Stack] :- ground(Stack) | ans(A), lexer.delete.

{
module(stack).

H=stack.new :- H=[].
H=stack.push(Stack, Object) :- H=[Object|Stack].
H=stack.pop([Car|Cdr], Object) :- H=Cdr, Object=Car.
H=stack.peek([Car|Cdr], Object) :- ground(Car) | H=[Car|Cdr], Object=Car.
}.
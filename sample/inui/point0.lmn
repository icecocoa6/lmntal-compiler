{
module(point).
H=point.new(X, Y) :- int(X), int(Y) | H={
	x(X).
	y(Y).
	translate(DX, DY), x(X), y(Y) :- int(DX), int(DY) |
		x(X+DX), y(Y+DY).
	H=getX, x(X) :- int(X) | x(X), H=X.
	H=getY, y(Y) :- int(Y) | y(Y), H=Y.
	}.
}.

{
module(colorPoint).
H=colorPoint.new(X, Y, Color) :- int(X), int(Y), int(Color) | H={
	oo.extends(point.new(X, Y)).
	color(Color).
	}.
}.

//p1=point.new(1, 2).
//p1({$p, @p}) :- p2({$p, @p, translate(3, 4)}).
//p=oo.msg(point.new(1, 2), {translate(3, 4)}).
//p=oo.msg(point.new(1, 2), {rx=getX}).
//H={$p, @p, rx=X} :- int(X) | H={$p, @p}, rx=X.

p=oo.msg(colorPoint.new(1, 2, 0), {translate(3, 4)}).

/**
 * Àµ¤·¤¤
 */
{
module(oneCell).
new@@
H=oneCell.new :- H={empty, puts=Puts, pn(0), gets=Gets, gn(0)}, Puts=queue.new, Gets=queue.new.

put@@
H=put({empty, pn(0), $p}, Object) :- H={contains(Object), pn(0), $p}.
H=put({contains(S), puts(Puts), pn(N), $p}, Object) :- int(N) |
	H={contains(S), puts=_Puts, pn(N+1), $p},
	_Puts=push(Puts, Object).
H={empty, puts=Puts, pn(N), $p} :- N > 0 |
	H={contains(Object), puts=_Puts, pn(N-1), $p},
	_Puts=shift(Puts, Object).
	
get@@
H=get({contains(Object), gn(0), $p}, Res) :-
	H={empty, gn(0), $p}, Res=Object.
H=get({empty, gets(Gets), gn(N), $p}, Res) :- int(N) |
	H={empty, gets=_Gets, gn(N+1), $p},
	_Gets=push(Gets, Res).
H={contains(S), gets=Gets, gn(N), $p} :- N > 0 |
	H={empty, gets=_Gets, gn(N-1), $p}, Res=S,
	_Gets=shift(Gets, Res).
}.

b=oneCell.new.

n(0).
n(N), b(B) :- N < 10 | b=put(B, N), n(N+1).

m(0), a=[].
m(M), a(A), b(B) :- M < 10 | b=get(B, X), m(M+1), a=[X|A].
beta@@ H=apply(lambda(A, B), C) :- H=B, A=C.

l_c@@  lambda(A,B)=cp(C,D,L), {+L,$q} :-
         C=lambda(E,F), D=lambda(G,H), A=cp(E,G,L1), B=cp(F,H,L2),
         {{+L1},+L2,sub(S)}, {super(S),$q}.
a_c@@  apply(A,B)=cp(C,D,L), {+L,$q} :-
         C= apply(E,F), D= apply(G,H), A=cp(E,G,L1), B=cp(F,H,L2),
         {+L1,+L2,$q}.

c_c1@@ cp(A,B,L1)=cp(C,D,L2), {{+L1,$p},+L2,$q} :- A=C, B=D, {{$p},$q}.
c_c2@@ cp(A,B,L1)=cp(C,D,L2), {{+L1,$p},$q}, {+L2,top,$r}
          :- C=cp(E,F,L3), D=cp(G,H,L4), {{+L3,+L4,$p},$q},
             A=cp(E,G,L5), B=cp(F,H,L6), {+L5,+L6,top,$r}.
u_c@@  fv($u)=cp(A,B,L), {+L,$q} :- unary($u) | A=fv($u), B=fv($u), {$q}.
l_r@@  lambda(A,B)=rm :- A=rm, B=rm.
a_r@@  apply(A,B)=rm :- A=rm, B=rm.
c_r1@@ cp(A,B,L)=rm, {+L,$q} :- A=rm, B=rm, {$q}.
c_r2@@ cp(A,B,L)=rm, {{+L,$p},$q} :- A=rm, B=rm, {{$p},$q}.
c_r3@@ A=cp(B,rm,L), {+L,$p} :- A=B, {$p}.
c_r4@@ A=cp(rm,B,L), {+L,$p} :- A=B, {$p}.
r_r@@  rm=rm :- .
u_r@@  fv($u)=rm :- unary($u) | .

promote@@ {{},$p,sub(S)}, {$q,super(S)} :- {$p,$q}.
c2c@@  A=cp(B,C) :- A=cp(B,C,L), {+L,top}.
gc@@   {top} :- .

init2@@ N=n(2) :- N=lambda(cp(F0,F1), lambda(X, apply(F0,apply(F1,X)))).
init3@@ N=n(3) :- N=lambda(cp(F0,cp(F1,F2)), lambda(X, apply(F0,apply(F1,apply(F2,X))))).
res=apply(apply(apply(n(2),n(3)),fv(s)),fv(0)).
delta@@ H=apply(fv(s), fv(I)) :- int(I) | H=fv(I+1).
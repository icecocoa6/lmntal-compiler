/* bottom-up parser of arithmetic expressions
   See also: unparse.lmn
   Kazunori Ueda, 2004-10-21
*/

X0=[$opl,exp(E1),$op,exp(E2),$opr|X],
op($opl1,$pl), op($op1,$p), op($opr1,$pr) :-
    $opl1=$opl, $op1=$op, $opr1=$opr, $pl =< $p, $p >= $pr |
    X0=[$opl,exp(e($op,E1,E2)),$opr|X],
    op($opl1,$pl), op($op1,$p), op($opr1,$pr).

X0=[N|X] :- int(N) | X0=[exp(N)|X].

ans1([begin,123,'+',45,'*',67,'+',8,end]).
// ans2([begin,123,'*',begin,45,'+',67,end,'*',8,end]).

/* operator precedence table; three instances of
   each entry may be used simultaneously */
op('*',4).  op('*',4).  op('*',4).
op('+',3).  op('+',3).  op('+',3).
op(begin,0).  op(end,0).
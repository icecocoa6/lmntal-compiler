H=intList(M,N) :- M>N  | H=[].
H=intList(M,N) :- M=<N | H=[M|intList(M+1,N)].

{ diff_table_creating. 
  diff(integer.set(1,9), integer.set(1,9)).
  diff(A,B) :- A>=B | .
}.
{ diff_table_creating, $p, @p }/ :- { diff_table, $p }.

{ set_expanding.
or=c(intList(1,9),integer.set(1,9),integer.set(1,9)). }.
{ set_expanding, $p, @p }/ :- $p.

H=c([],C,N) :- int(C), int(N) | H=[].
H=c([R|Rs],C,N) :- int(R), int(C), int(N) | H=[100*R+10*C+N|c(Rs,C,N)].

coldigit(integer.set(1,9), integer.set(1,9)).
coldigit(C,N) :- coldigit(10*C+N).
coldigit(CN), { diff_table, $p[] } :- int(CN) | { diff_table, $p[] },
    { coldigit(CN), $p[]. 
      coldigit(CN), diff(A,B) :- int(CN) |
      coldigit(CN), or([-(CN+100*A),-(CN+100*B)]).
    }.
{ coldigit(CN), $p, @p }/ :- int(CN) | $p.

io.use.
r(done).
r(done), or(L) :- conv(L,R), or_spaced(R).
conv([],R):- R=[0,"\n"].
conv([X|Xs],Ys0) :- Ys0=[X," "|Ys], conv(Xs,Ys).
or_spaced(R) :- r=io.lprint(R).

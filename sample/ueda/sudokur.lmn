H=intList(M,N) :- M>N  | H=[].
H=intList(M,N) :- M=<N | H=[M|intList(M+1,N)].

{ diff_table_creating. 
  diff(integer.set(1,9), integer.set(1,9)).
  diff(A,B) :- A>=B | .
}.
{ diff_table_creating, $p, @p }/ :- { diff_table, $p }.

{ set_expanding.
or=r(integer.set(1,9),intList(1,9),integer.set(1,9)). }.
{ set_expanding, $p, @p }/ :- $p.

H=r(R,[],N) :- int(R), int(N) | H=[].
H=r(R,[C|Cs],N) :- int(R), int(C), int(N) | H=[100*R+10*C+N|r(R,Cs,N)].

rowdigit(integer.set(1,9), integer.set(1,9)).
rowdigit(R,N) :- rowdigit(100*R+N).
rowdigit(RN), { diff_table, $p[] } :- int(RN) | { diff_table, $p[] },
    { rowdigit(RN), $p[]. 
      rowdigit(RN), diff(A,B) :- int(RN) |
      rowdigit(RN), or([-(RN+10*A),-(RN+10*B)]).
    }.
{ rowdigit(RN), $p, @p }/ :- int(RN) | $p.

io.use.
res(done).
res(done), or(L) :- conv(L,R), or_spaced(R).
conv([],R):- R=[0,"\n"].
conv([X|Xs],Ys0) :- Ys0=[X," "|Ys], conv(Xs,Ys).
or_spaced(R) :- res=io.lprint(R).

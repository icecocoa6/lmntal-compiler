// lambda calculus

{ lambda_cbn.use. example0.
  // (lambda y . y y) I => I I
  dn(r)=apply(lambda(cp(Y0,Y1), apply(Y0,Y1)), lambda(X,X)).
}

{ lambda_cbn.use. example1.
  // (lambda y . y y) x => x x
  dn(r)=apply(lambda(cp(Y0,Y1), apply(Y0,Y1)), x).

}

{ lambda_cbn.use. example2.
  // (lambda f . (lambda x . f (f x) ) ) succ 0
  // => succ (succ 0)
  dn(r)=apply(apply(lambda(cp(F0,F1),
                lambda(X, apply(F0,apply(F1,X)))),
    succ), 0).
}

{ lambda_cbn.use.  example4.
  // exponentiation of natural numbers in Church encoding
  // n is encoded as lambda f x . f^n x
  // then n^m is encoded as lambda n m . m n

  N=n(0) :- N=lambda(rm, lambda(X, X)).
  N=n(1) :- N=lambda(F, lambda(X, apply(F,X))).
  N=n(2) :- N=lambda(cp(F0,F1), lambda(X,
              apply(F0,apply(F1,X)))).
  N=n(3) :- N=lambda(cp(F0,cp(F1,F2)), lambda(X,
              apply(F0,apply(F1,apply(F2,X))))).
  N=n(4) :- N=lambda(cp(F0,cp(F1,cp(F2,F3))), lambda(X,
              apply(F0,apply(F1,apply(F2,apply(F3,X)))))).

  dn(r)=apply(apply(apply(n(2), n(2)), +s), 0).
  
  H=call(s,N) :- | NN=normalize(N), H=upo(NN+1).
  
  NN=normalize(N) :- N=dn(NNN), NN=n2(NNN).
  NN=n2(upo(A)) :- NN=A.

r=up(A) :- r=A.
r=upo(A) :- r=A.
}

{ lambda_cbn.use.  example5.
// y = (lambda f . (lambda x . f(x x)) (lambda x . f(x x)))
// fact = (lambda f . (lambda n . (eqn0 1 n * f(n-1)))) 
// true = (lambda t . (lambda f . t))
// false = (lambda t . (lambda f . f))
H=call(zerop,N) :- H=zerop(normalize(N)).
H=zerop(0) :-         H=up(lambda(T, lambda(rm, T))).  // true
H=zerop(N) :- N=\=0 | H=up(lambda(rm, lambda(F, F))).  // false
H=call(pred,N) :-   H=upo(normalize(N)-1).
H=call(mul,N) :-    H=upf(mul(normalize(N))).
H=call(mul(M),N) :- H=upo(M*normalize(N)).

NN=normalize(N) :- N=dn(NNN), NN=n2(NNN).
NN=n2(upo(A)) :- NN=A.

dn(r) = apply(apply(
  lambda(cp(F0,F1),                                       // Y
       apply(lambda(cp(X0,X1),apply(F0,apply(X0,X1))),    // Y
             lambda(cp(X2,X3),apply(F1,apply(X2,X3))))),  // Y
  lambda(F, lambda(cp(N0,cp(N1,N2)),                      // factotial
    apply(apply(apply(+zerop,N0),1),                      // factorial
        apply(apply(+mul,N1),apply(F,apply(+pred,N2)))))) // factorial
  ), 9).
r=upo(A) :- r=A.
}



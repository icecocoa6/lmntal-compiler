axiom@@
sequent({+A,$gamma[]},{+B,$delta[]}) :- ground(A), ground(B), A=B | .

notR@@
sequent({$gamma[]},{$delta[],+not(A)}) :- ground(A) |
    sequent({+A,$gamma[]},{$delta[]}).
notL@@
sequent({+not(A),$gamma[]},{$delta[]}) :- ground(A) |
    sequent({$gamma[]},{$delta[],+A}).

andR@@
sequent({$gamma[]},{$delta[],+and(A,B)}) :- ground(A), ground(B) |
    sequent({$gamma[]},{$delta[],+A}), sequent({$gamma[]},{$delta[],+B}).

andL@@
sequent({+and(A,B),$gamma[]},{$delta[]}) :- ground(A), ground(B) |
    sequent({+A,+B,$gamma[]},{$delta[]}).

orR@@
sequent({$gamma[]},{$delta[],+or(A,B)}) :- ground(A), ground(B) |
    sequent({$gamma[]},{$delta[],+A,+B}).
orL@@
sequent({+or(A,B),$gamma[]},{$delta[]}) :- ground(A), ground(B) |
    sequent({+A,$gamma[]},{$delta[]}), sequent({+B,$gamma[]},{$delta[]}).

impliesR@@
sequent({$gamma[]},{$delta[],+implies(A,B)}) :- ground(A), ground(B) |
    sequent({+A,$gamma[]},{$delta[],+B}).
impliesL@@
sequent({+implies(A,B),$gamma[]},{$delta[]}) :- ground(A), ground(B) |
    sequent({$gamma[]},{$delta[],+A}), sequent({+B,$gamma[]},{$delta[]}).

// sequent({+a,+implies(a,b)},{+b}).

sequent({+implies(and(p,not(q)),r), +not(r), +p},{+q}).

// sequent({},{+implies(implies(implies(a,b),a),a)}).

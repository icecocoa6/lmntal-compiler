/* ----------------------Preliminary Declarations Section--------------------*/
/* Import the class java_cup.runtime.*  */
package compile.parser;

import java.util.LinkedList;

/* ------------Declaration of Terminals and Non Terminals Section----------- */
terminal		NULL, COMMA, LPAREN, RPAREN, LBREATH, RBREATH, 
				RULE, EQUALS, PERIOD, GUARD, PROCVAR, RULEVAR, 
				WILDCARD, LBRACET, RBRACET, NEGATIVE;
terminal String	LINK_NAME, ATOM_NAME;

non terminal SrcLink			Link;
non terminal SrcAtom			Atom;
non terminal SrcMembrane		Membrane;
non terminal SrcRule			Rule;
non terminal SrcProcessContext	ProcessContext;
non terminal SrcRuleContext		RuleContext;
non terminal SrcContext			Context;
non terminal SrcLinkUnify		LinkUnify;
non terminal Object				Process;
non terminal LinkedList			ProcessList;

start with ProcessList;

/* -------------Precedence and Associatively of Terminals Section----------- */

Link		::=   LINK_NAME:name
					{: RESULT = new SrcLink(name); :};
					
Atom		::=	  ATOM_NAME:name
					{: RESULT = new SrcAtom(name); :}
				| ATOM_NAME:name LPAREN RPAREN
					{: RESULT = new SrcAtom(name); :}
				| ATOM_NAME:name LPAREN ProcessList:list RPAREN
					{: RESULT = new SrcAtom(name, list); :};

Membrane	::=	  LBREATH RBREATH
					{: RESULT = new SrcMembrane(); :}
				| LBREATH ProcessList:list RBREATH
					{: RESULT = new SrcMembrane(list); :};

Rule		::=	  LPAREN ProcessList:head RULE ProcessList:body RPAREN
					{: RESULT = new SrcRule(head, body); :};

ProcessContext	::=   PROCVAR ATOM_NAME:name
					{: RESULT = new SrcProcessContext(name); :};

RuleContext	::=   RULEVAR ATOM_NAME:name
					{: RESULT = new SrcRuleContext(name); :};

Context		::=   ProcessContext:p
					{: RESULT = p; :}
				| RuleContext:r
					{: RESULT = r; :};

LinkUnify	::=   Link:left EQUALS Link:right
					{: RESULT = new SrcLinkUnify(left, right); :};

Process		::=   Atom:p
					{:  RESULT = p; :}
				| Membrane:p
					{:  RESULT = p; :}
				| Rule:p
					{:  RESULT = p; :}
				| Context:p
					{:  RESULT = p; :}
				| Link:p
					{:  RESULT = p; :}
				| LinkUnify:p
					{:  RESULT = p; :};

ProcessList	::=   Process:p
					{: LinkedList list = new LinkedList(); list.add(p); RESULT = list; :}
				| ProcessList:list COMMA Process:p
					{: list.add(p); RESULT = list; :};
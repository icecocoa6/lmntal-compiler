// This file is auto generated by src/help_gen.pl
// do not edit this file.
package runtime;
class Help {
	public static void show() {
		System.out.println(""
			+"    -d[<0-9>]\n"
			+"                    Debug output level.\n"
			+"    -e <LMNtal program>\n"
			+"                    One liner code execution like Perl.\n"
			+"                    Example: -e 'a,(a:-b)'\n"
			+"    -g\n"
			+"                    GUI mode. Atoms, membranes and links are drawn graphically.\n"
			+"                    Click button to proceed reaction. Close the window to quit.\n"
			+"    -o <file>\n"
			+"                    Specify the output JAR file name.\n"
			+"    -I <path>\n"
			+"                    Additional path for LMNtal library. \n"
			+"                    This option is vailable only when --use-source-library option is specified.\n"
			+"                    Othorwise, LMNtal library must be in your CLASSPATH environment variable. \n"
			+"                    The default path is ./lmntal_lib and ../lmntal_lib\n"
			+"    -L <path>\n"
			+"                    Additional path for classpath (inline code compile time)\n"
			+"    -O[<0-9>]  (-O=-O1)\n"
			+"                    Optimization level.\n"
			+"                    Intermediate instruction sequences are optimized.\n"
			+"    -O1 is equivalent to --optimize-reuse-atom --optimize-reuse-mem,\n"
			+"                     --optimize-guard-move.\n"
			+"    -O2 is equivalent to -O1 now.\n"
			+"    -O3 is equivalent to --O2 --optimize-inlining\n"
			+"    -s[<0-9>]  (-s=-s3)\n"
			+"                    Shuffle level.  Select a strategy of rule application.\n"
			+"                      0: default. use an atom stack for each membrane (LIFO)\n"
			+"                      1: atoms are selected in some arbitrary manner\n"
			+"                      2: select atoms and membranes randomly from a membrane\n"
			+"                      3: select atoms, mems and rules randomly from a membrane\n"
			+"    -t\n"
			+"                    Trace mode.\n"
			+"    -v[<0-9>]\n"
			+"                    Verbose output level.\n"
			+"    -x <name> <value>\n"
			+"                    User defined option.\n"
			+"                    <name>    <value>    description\n"
			+"                    ===========================================================\n"
			+"                    screen    max        full screen mode\n"
			+"                    auto      on         reaction auto proceed mode when GUI on\n"
			+"                    dump      1          indent mem (etc...)\n"
			+"    --demo\n"
			+"                    Demo mode.  Draw atoms and text larger.\n"
			+"    --graphic\n"
			+"                    Graphic LMNtal mode.\n"
			+"    --help\n"
			+"                    Show usage (this).\n"
			+"    --immediate\n"
			+"                    Use a single newline (rather than two newlines)\n"
			+"                    to start execution in the REPL mode\n"
			+"    --interpret\n"
			+"                    Interpret intermediate instruction sequences without translating into Java.\n"
			+"                    In REPL mode and one-liner, alwas interpret.\n"
			+"    --library\n"
			+"                    Generate library.\n"
			+"    --nondeterministic\n"
			+"                    Execute the all reduction paths.\n"
			+"    --optimize-grouping\n"
			+"                    Group the head instructions. (EXPERIMENTAL)\n"
			+"    --optimize-guard-move\n"
			+"                    Move up the guard instructions.\n"
			+"    --optimize-inlining\n"
			+"                    Inlining tail jump.\n"
			+"    --optimize-loop\n"
			+"                    Use loop instruction. (EXPERIMENTAL)\n"
			+"    --optimize-reuse-atom\n"
			+"                    Reuse atoms.\n"
			+"    --optimize-reuse-mem\n"
			+"                    Reuse mems.\n"
			+"    --port portnumber\n"
			+"                    Specifies the port number that LMNtalDaemon listens on. The default is 60000. \n"
			+"                    Only dynamic and private ports defined by IANA is usable: port 49152 through 65535. \n"
			+"    --profile\n"
			+"                    Profiling applying counts and execution times of rules.\n"
			+"    --remain\n"
			+"                    Processes remain in REPL mode\n"
			+"    --REPL\n"
			+"                    REPL(Read-Eval-Print-Loop) mode\n"
			+"    --start-daemon\n"
			+"                    Start LMNtalDaemon\n"
			+"    --showproxy\n"
			+"                    Show proxy atoms\n"
			+"    --hiderule\n"
			+"                    Hide rule names\n"
			+"    --temporary-dir=<dir>\n"
			+"                    use <dir> as temporary directory\n"
			+"    --use-source-library\n"
			+"                    Use source library in lmntal_lib/src.\n"
		);
	}
}
